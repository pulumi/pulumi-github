# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetRepositoryCustomPropertiesResult',
    'AwaitableGetRepositoryCustomPropertiesResult',
    'get_repository_custom_properties',
    'get_repository_custom_properties_output',
]

@pulumi.output_type
class GetRepositoryCustomPropertiesResult:
    """
    A collection of values returned by getRepositoryCustomProperties.
    """
    def __init__(__self__, id=None, properties=None, repository=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if properties and not isinstance(properties, list):
            raise TypeError("Expected argument 'properties' to be a list")
        pulumi.set(__self__, "properties", properties)
        if repository and not isinstance(repository, str):
            raise TypeError("Expected argument 'repository' to be a str")
        pulumi.set(__self__, "repository", repository)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def properties(self) -> Sequence['outputs.GetRepositoryCustomPropertiesPropertyResult']:
        """
        The list of this repository's custom properties. Each element of `property` has the following attributes:
        """
        return pulumi.get(self, "properties")

    @property
    @pulumi.getter
    def repository(self) -> str:
        return pulumi.get(self, "repository")


class AwaitableGetRepositoryCustomPropertiesResult(GetRepositoryCustomPropertiesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRepositoryCustomPropertiesResult(
            id=self.id,
            properties=self.properties,
            repository=self.repository)


def get_repository_custom_properties(repository: Optional[str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRepositoryCustomPropertiesResult:
    """
    Use this data source to retrieve all custom properties of a repository.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_github as github

    example = github.get_repository_custom_properties(repository="example-repository")
    ```


    :param str repository: Name of the repository to retrieve the custom properties from.
    """
    __args__ = dict()
    __args__['repository'] = repository
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('github:index/getRepositoryCustomProperties:getRepositoryCustomProperties', __args__, opts=opts, typ=GetRepositoryCustomPropertiesResult).value

    return AwaitableGetRepositoryCustomPropertiesResult(
        id=pulumi.get(__ret__, 'id'),
        properties=pulumi.get(__ret__, 'properties'),
        repository=pulumi.get(__ret__, 'repository'))
def get_repository_custom_properties_output(repository: Optional[pulumi.Input[str]] = None,
                                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetRepositoryCustomPropertiesResult]:
    """
    Use this data source to retrieve all custom properties of a repository.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_github as github

    example = github.get_repository_custom_properties(repository="example-repository")
    ```


    :param str repository: Name of the repository to retrieve the custom properties from.
    """
    __args__ = dict()
    __args__['repository'] = repository
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('github:index/getRepositoryCustomProperties:getRepositoryCustomProperties', __args__, opts=opts, typ=GetRepositoryCustomPropertiesResult)
    return __ret__.apply(lambda __response__: GetRepositoryCustomPropertiesResult(
        id=pulumi.get(__response__, 'id'),
        properties=pulumi.get(__response__, 'properties'),
        repository=pulumi.get(__response__, 'repository')))
