# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class SshKey(pulumi.CustomResource):
    etag: pulumi.Output[str]
    key: pulumi.Output[str]
    """
    The public SSH key to add to your GitHub account.
    """
    title: pulumi.Output[str]
    """
    A descriptive name for the new key. e.g. `Personal MacBook Air`
    """
    url: pulumi.Output[str]
    """
    The URL of the SSH key
    """
    def __init__(__self__, resource_name, opts=None, key=None, title=None, __name__=None, __opts__=None):
        """
        Provides a GitHub user's SSH key resource.
        
        This resource allows you to add/remove SSH keys from your user account.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] key: The public SSH key to add to your GitHub account.
        :param pulumi.Input[str] title: A descriptive name for the new key. e.g. `Personal MacBook Air`
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if key is None:
            raise TypeError("Missing required property 'key'")
        __props__['key'] = key

        if title is None:
            raise TypeError("Missing required property 'title'")
        __props__['title'] = title

        __props__['etag'] = None
        __props__['url'] = None

        super(SshKey, __self__).__init__(
            'github:users/sshKey:SshKey',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

