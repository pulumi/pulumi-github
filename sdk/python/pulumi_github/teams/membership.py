# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Membership(pulumi.CustomResource):
    etag: pulumi.Output[str]
    role: pulumi.Output[str]
    """
    The role of the user within the team.
    Must be one of `member` or `maintainer`. Defaults to `member`.
    """
    team_id: pulumi.Output[str]
    """
    The GitHub team id
    """
    username: pulumi.Output[str]
    """
    The user to add to the team.
    """
    def __init__(__self__, resource_name, opts=None, role=None, team_id=None, username=None, __name__=None, __opts__=None):
        """
        Provides a GitHub team membership resource.
        
        This resource allows you to add/remove users from teams in your organization. When applied,
        the user will be added to the team. If the user hasn't accepted their invitation to the
        organization, they won't be part of the team until they do. When
        destroyed, the user will be removed from the team.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] role: The role of the user within the team.
               Must be one of `member` or `maintainer`. Defaults to `member`.
        :param pulumi.Input[str] team_id: The GitHub team id
        :param pulumi.Input[str] username: The user to add to the team.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['role'] = role

        if team_id is None:
            raise TypeError("Missing required property 'team_id'")
        __props__['team_id'] = team_id

        if username is None:
            raise TypeError("Missing required property 'username'")
        __props__['username'] = username

        __props__['etag'] = None

        super(Membership, __self__).__init__(
            'github:teams/membership:Membership',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

