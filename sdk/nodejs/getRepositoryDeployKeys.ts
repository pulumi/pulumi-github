// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve all deploy keys of a repository.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getRepositoryDeployKeys({
 *     repository: "example-repository",
 * });
 * ```
 */
export function getRepositoryDeployKeys(args: GetRepositoryDeployKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositoryDeployKeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getRepositoryDeployKeys:getRepositoryDeployKeys", {
        "repository": args.repository,
    }, opts);
}

/**
 * A collection of arguments for invoking getRepositoryDeployKeys.
 */
export interface GetRepositoryDeployKeysArgs {
    /**
     * Name of the repository to retrieve the branches from.
     */
    repository: string;
}

/**
 * A collection of values returned by getRepositoryDeployKeys.
 */
export interface GetRepositoryDeployKeysResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of this repository's deploy keys. Each element of `keys` has the following attributes:
     */
    readonly keys: outputs.GetRepositoryDeployKeysKey[];
    readonly repository: string;
}
/**
 * Use this data source to retrieve all deploy keys of a repository.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getRepositoryDeployKeys({
 *     repository: "example-repository",
 * });
 * ```
 */
export function getRepositoryDeployKeysOutput(args: GetRepositoryDeployKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRepositoryDeployKeysResult> {
    return pulumi.output(args).apply((a: any) => getRepositoryDeployKeys(a, opts))
}

/**
 * A collection of arguments for invoking getRepositoryDeployKeys.
 */
export interface GetRepositoryDeployKeysOutputArgs {
    /**
     * Name of the repository to retrieve the branches from.
     */
    repository: pulumi.Input<string>;
}
