// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getRepositoryTeams(args?: GetRepositoryTeamsArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositoryTeamsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("github:index/getRepositoryTeams:getRepositoryTeams", {
        "fullName": args.fullName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRepositoryTeams.
 */
export interface GetRepositoryTeamsArgs {
    fullName?: string;
    name?: string;
}

/**
 * A collection of values returned by getRepositoryTeams.
 */
export interface GetRepositoryTeamsResult {
    readonly fullName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly teams: outputs.GetRepositoryTeamsTeam[];
}

export function getRepositoryTeamsOutput(args?: GetRepositoryTeamsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRepositoryTeamsResult> {
    return pulumi.output(args).apply(a => getRepositoryTeams(a, opts))
}

/**
 * A collection of arguments for invoking getRepositoryTeams.
 */
export interface GetRepositoryTeamsOutputArgs {
    fullName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
