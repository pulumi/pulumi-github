// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const someTeam = new github.Team("some_team", {
 *     name: "SomeTeam",
 *     description: "Some cool team",
 * });
 * const someTeamOrganizationSecurityManager = new github.OrganizationSecurityManager("some_team", {teamSlug: someTeam.slug});
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * GitHub Security Manager Teams can be imported using the GitHub team ID e.g.
 *
 * ```sh
 * $ pulumi import github:index/organizationSecurityManager:OrganizationSecurityManager core 1234567
 * ```
 */
export class OrganizationSecurityManager extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationSecurityManager resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationSecurityManagerState, opts?: pulumi.CustomResourceOptions): OrganizationSecurityManager {
        return new OrganizationSecurityManager(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'github:index/organizationSecurityManager:OrganizationSecurityManager';

    /**
     * Returns true if the given object is an instance of OrganizationSecurityManager.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationSecurityManager {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationSecurityManager.__pulumiType;
    }

    /**
     * The slug of the team to manage.
     */
    public readonly teamSlug!: pulumi.Output<string>;

    /**
     * Create a OrganizationSecurityManager resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationSecurityManagerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationSecurityManagerArgs | OrganizationSecurityManagerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationSecurityManagerState | undefined;
            resourceInputs["teamSlug"] = state ? state.teamSlug : undefined;
        } else {
            const args = argsOrState as OrganizationSecurityManagerArgs | undefined;
            if ((!args || args.teamSlug === undefined) && !opts.urn) {
                throw new Error("Missing required property 'teamSlug'");
            }
            resourceInputs["teamSlug"] = args ? args.teamSlug : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationSecurityManager.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationSecurityManager resources.
 */
export interface OrganizationSecurityManagerState {
    /**
     * The slug of the team to manage.
     */
    teamSlug?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationSecurityManager resource.
 */
export interface OrganizationSecurityManagerArgs {
    /**
     * The slug of the team to manage.
     */
    teamSlug: pulumi.Input<string>;
}
