// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface ActionsOrganizationPermissionsAllowedActionsConfig {
    githubOwnedAllowed: boolean;
    patternsAlloweds?: string[];
    verifiedAllowed?: boolean;
}

export interface ActionsOrganizationPermissionsEnabledRepositoriesConfig {
    repositoryIds: number[];
}

export interface BranchProtectionRequiredPullRequestReview {
    dismissStaleReviews?: boolean;
    dismissalRestrictions?: string[];
    pullRequestBypassers?: string[];
    requireCodeOwnerReviews?: boolean;
    requiredApprovingReviewCount?: number;
    restrictDismissals?: boolean;
}

export interface BranchProtectionRequiredStatusCheck {
    contexts?: string[];
    strict?: boolean;
}

export interface BranchProtectionV3RequiredPullRequestReviews {
    dismissStaleReviews?: boolean;
    dismissalTeams?: string[];
    dismissalUsers?: string[];
    /**
     * @deprecated Use enforce_admins instead
     */
    includeAdmins?: boolean;
    requireCodeOwnerReviews?: boolean;
    requiredApprovingReviewCount?: number;
}

export interface BranchProtectionV3RequiredStatusChecks {
    contexts?: string[];
    /**
     * @deprecated Use enforce_admins instead
     */
    includeAdmins?: boolean;
    strict?: boolean;
}

export interface BranchProtectionV3Restrictions {
    apps?: string[];
    teams?: string[];
    users?: string[];
}

export interface GetActionsOrganizationSecretsSecret {
    createdAt: string;
    name: string;
    updatedAt: string;
    visibility: string;
}

export interface GetActionsSecretsSecret {
    createdAt: string;
    name: string;
    updatedAt: string;
}

export interface GetCollaboratorsCollaborator {
    eventsUrl: string;
    followersUrl: string;
    followingUrl: string;
    gistsUrl: string;
    htmlUrl: string;
    id: number;
    login: string;
    organizationsUrl: string;
    permission: string;
    receivedEventsUrl: string;
    reposUrl: string;
    siteAdmin: boolean;
    starredUrl: string;
    subscriptionsUrl: string;
    type: string;
    url: string;
}

export interface GetExternalGroupsExternalGroup {
    groupId: number;
    groupName: string;
    updatedAt: string;
}

export interface GetOrganizationTeamSyncGroupsGroup {
    groupDescription: string;
    groupId: string;
    groupName: string;
}

export interface GetOrganizationTeamsTeam {
    description: string;
    id: number;
    members: string[];
    name: string;
    nodeId: string;
    privacy: string;
    repositories: string[];
    slug: string;
}

export interface GetRepositoryPage {
    cname: string;
    custom404: boolean;
    htmlUrl: string;
    sources: outputs.GetRepositoryPageSource[];
    status: string;
    url: string;
}

export interface GetRepositoryPageSource {
    branch: string;
    path: string;
}

export interface GetRepositoryPullRequestsResult {
    baseRef: string;
    baseSha: string;
    body: string;
    draft: boolean;
    headOwner: string;
    headRef: string;
    headRepository: string;
    headSha: string;
    labels: string[];
    maintainerCanModify: boolean;
    number: number;
    openedAt: number;
    openedBy: string;
    state: string;
    title: string;
    updatedAt: number;
}

export interface GetRepositoryTeamsTeam {
    name: string;
    permission: string;
    slug: string;
}

export interface GetTreeEntry {
    mode: string;
    path: string;
    sha: string;
    size: number;
    type: string;
}

export interface OrganizationWebhookConfiguration {
    contentType?: string;
    insecureSsl?: boolean;
    secret?: string;
    url: string;
}

export interface RepositoryEnvironmentDeploymentBranchPolicy {
    customBranchPolicies: boolean;
    protectedBranches: boolean;
}

export interface RepositoryEnvironmentReviewer {
    teams?: number[];
    users?: number[];
}

export interface RepositoryPages {
    cname?: string;
    custom404: boolean;
    htmlUrl: string;
    source: outputs.RepositoryPagesSource;
    status: string;
    url: string;
}

export interface RepositoryPagesSource {
    branch: string;
    path?: string;
}

export interface RepositoryTemplate {
    owner: string;
    repository: string;
}

export interface RepositoryWebhookConfiguration {
    contentType?: string;
    insecureSsl?: boolean;
    secret?: string;
    url: string;
}

export interface TeamMembersMember {
    role?: string;
    username: string;
}

export interface TeamSyncGroupMappingGroup {
    groupDescription: string;
    groupId: string;
    groupName: string;
}
export namespace config {
    export interface AppAuth {
        id: string;
        installationId: string;
        pemFile: string;
    }

}
