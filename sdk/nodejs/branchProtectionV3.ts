// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export class BranchProtectionV3 extends pulumi.CustomResource {
    /**
     * Get an existing BranchProtectionV3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BranchProtectionV3State, opts?: pulumi.CustomResourceOptions): BranchProtectionV3 {
        return new BranchProtectionV3(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'github:index/branchProtectionV3:BranchProtectionV3';

    /**
     * Returns true if the given object is an instance of BranchProtectionV3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BranchProtectionV3 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BranchProtectionV3.__pulumiType;
    }

    public readonly branch!: pulumi.Output<string>;
    public readonly enforceAdmins!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly etag!: pulumi.Output<string>;
    public readonly repository!: pulumi.Output<string>;
    public readonly requireConversationResolution!: pulumi.Output<boolean | undefined>;
    public readonly requireSignedCommits!: pulumi.Output<boolean | undefined>;
    public readonly requiredPullRequestReviews!: pulumi.Output<outputs.BranchProtectionV3RequiredPullRequestReviews | undefined>;
    public readonly requiredStatusChecks!: pulumi.Output<outputs.BranchProtectionV3RequiredStatusChecks | undefined>;
    public readonly restrictions!: pulumi.Output<outputs.BranchProtectionV3Restrictions | undefined>;

    /**
     * Create a BranchProtectionV3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BranchProtectionV3Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BranchProtectionV3Args | BranchProtectionV3State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BranchProtectionV3State | undefined;
            resourceInputs["branch"] = state ? state.branch : undefined;
            resourceInputs["enforceAdmins"] = state ? state.enforceAdmins : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["repository"] = state ? state.repository : undefined;
            resourceInputs["requireConversationResolution"] = state ? state.requireConversationResolution : undefined;
            resourceInputs["requireSignedCommits"] = state ? state.requireSignedCommits : undefined;
            resourceInputs["requiredPullRequestReviews"] = state ? state.requiredPullRequestReviews : undefined;
            resourceInputs["requiredStatusChecks"] = state ? state.requiredStatusChecks : undefined;
            resourceInputs["restrictions"] = state ? state.restrictions : undefined;
        } else {
            const args = argsOrState as BranchProtectionV3Args | undefined;
            if ((!args || args.branch === undefined) && !opts.urn) {
                throw new Error("Missing required property 'branch'");
            }
            if ((!args || args.repository === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repository'");
            }
            resourceInputs["branch"] = args ? args.branch : undefined;
            resourceInputs["enforceAdmins"] = args ? args.enforceAdmins : undefined;
            resourceInputs["repository"] = args ? args.repository : undefined;
            resourceInputs["requireConversationResolution"] = args ? args.requireConversationResolution : undefined;
            resourceInputs["requireSignedCommits"] = args ? args.requireSignedCommits : undefined;
            resourceInputs["requiredPullRequestReviews"] = args ? args.requiredPullRequestReviews : undefined;
            resourceInputs["requiredStatusChecks"] = args ? args.requiredStatusChecks : undefined;
            resourceInputs["restrictions"] = args ? args.restrictions : undefined;
            resourceInputs["etag"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BranchProtectionV3.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BranchProtectionV3 resources.
 */
export interface BranchProtectionV3State {
    branch?: pulumi.Input<string>;
    enforceAdmins?: pulumi.Input<boolean>;
    etag?: pulumi.Input<string>;
    repository?: pulumi.Input<string>;
    requireConversationResolution?: pulumi.Input<boolean>;
    requireSignedCommits?: pulumi.Input<boolean>;
    requiredPullRequestReviews?: pulumi.Input<inputs.BranchProtectionV3RequiredPullRequestReviews>;
    requiredStatusChecks?: pulumi.Input<inputs.BranchProtectionV3RequiredStatusChecks>;
    restrictions?: pulumi.Input<inputs.BranchProtectionV3Restrictions>;
}

/**
 * The set of arguments for constructing a BranchProtectionV3 resource.
 */
export interface BranchProtectionV3Args {
    branch: pulumi.Input<string>;
    enforceAdmins?: pulumi.Input<boolean>;
    repository: pulumi.Input<string>;
    requireConversationResolution?: pulumi.Input<boolean>;
    requireSignedCommits?: pulumi.Input<boolean>;
    requiredPullRequestReviews?: pulumi.Input<inputs.BranchProtectionV3RequiredPullRequestReviews>;
    requiredStatusChecks?: pulumi.Input<inputs.BranchProtectionV3RequiredStatusChecks>;
    restrictions?: pulumi.Input<inputs.BranchProtectionV3Restrictions>;
}
