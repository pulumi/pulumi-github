// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve the security managers for an organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const test = github.getOrganizationSecurityManagers({});
 * ```
 */
export function getOrganizationSecurityManagers(opts?: pulumi.InvokeOptions): Promise<GetOrganizationSecurityManagersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getOrganizationSecurityManagers:getOrganizationSecurityManagers", {
    }, opts);
}

/**
 * A collection of values returned by getOrganizationSecurityManagers.
 */
export interface GetOrganizationSecurityManagersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * An list of GitHub teams.  Each `team` block consists of the fields documented below.
     */
    readonly teams: outputs.GetOrganizationSecurityManagersTeam[];
}
/**
 * Use this data source to retrieve the security managers for an organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const test = github.getOrganizationSecurityManagers({});
 * ```
 */
export function getOrganizationSecurityManagersOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrganizationSecurityManagersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("github:index/getOrganizationSecurityManagers:getOrganizationSecurityManagers", {
    }, opts);
}
