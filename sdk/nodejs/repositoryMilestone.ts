// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a GitHub repository milestone resource.
 *
 * This resource allows you to create and manage milestones for a GitHub Repository within an organization or user account.
 *
 * ## Import
 *
 * A GitHub Repository Milestone can be imported using an ID made up of `owner/repository/number`, e.g.
 *
 * ```sh
 *  $ pulumi import github:index/repositoryMilestone:RepositoryMilestone example example-owner/example-repository/1
 * ```
 */
export class RepositoryMilestone extends pulumi.CustomResource {
    /**
     * Get an existing RepositoryMilestone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RepositoryMilestoneState, opts?: pulumi.CustomResourceOptions): RepositoryMilestone {
        return new RepositoryMilestone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'github:index/repositoryMilestone:RepositoryMilestone';

    /**
     * Returns true if the given object is an instance of RepositoryMilestone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RepositoryMilestone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RepositoryMilestone.__pulumiType;
    }

    /**
     * A description of the milestone.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The milestone due date. In `yyyy-mm-dd` format.
     */
    public readonly dueDate!: pulumi.Output<string | undefined>;
    /**
     * The number of the milestone.
     */
    public /*out*/ readonly number!: pulumi.Output<number>;
    /**
     * The owner of the GitHub Repository.
     */
    public readonly owner!: pulumi.Output<string>;
    /**
     * The name of the GitHub Repository.
     */
    public readonly repository!: pulumi.Output<string>;
    /**
     * The state of the milestone. Either `open` or `closed`. Default: `open`
     */
    public readonly state!: pulumi.Output<string | undefined>;
    /**
     * The title of the milestone.
     */
    public readonly title!: pulumi.Output<string>;

    /**
     * Create a RepositoryMilestone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryMilestoneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RepositoryMilestoneArgs | RepositoryMilestoneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RepositoryMilestoneState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dueDate"] = state ? state.dueDate : undefined;
            resourceInputs["number"] = state ? state.number : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["repository"] = state ? state.repository : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
        } else {
            const args = argsOrState as RepositoryMilestoneArgs | undefined;
            if ((!args || args.owner === undefined) && !opts.urn) {
                throw new Error("Missing required property 'owner'");
            }
            if ((!args || args.repository === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repository'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dueDate"] = args ? args.dueDate : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
            resourceInputs["repository"] = args ? args.repository : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["number"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RepositoryMilestone.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RepositoryMilestone resources.
 */
export interface RepositoryMilestoneState {
    /**
     * A description of the milestone.
     */
    description?: pulumi.Input<string>;
    /**
     * The milestone due date. In `yyyy-mm-dd` format.
     */
    dueDate?: pulumi.Input<string>;
    /**
     * The number of the milestone.
     */
    number?: pulumi.Input<number>;
    /**
     * The owner of the GitHub Repository.
     */
    owner?: pulumi.Input<string>;
    /**
     * The name of the GitHub Repository.
     */
    repository?: pulumi.Input<string>;
    /**
     * The state of the milestone. Either `open` or `closed`. Default: `open`
     */
    state?: pulumi.Input<string>;
    /**
     * The title of the milestone.
     */
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RepositoryMilestone resource.
 */
export interface RepositoryMilestoneArgs {
    /**
     * A description of the milestone.
     */
    description?: pulumi.Input<string>;
    /**
     * The milestone due date. In `yyyy-mm-dd` format.
     */
    dueDate?: pulumi.Input<string>;
    /**
     * The owner of the GitHub Repository.
     */
    owner: pulumi.Input<string>;
    /**
     * The name of the GitHub Repository.
     */
    repository: pulumi.Input<string>;
    /**
     * The state of the milestone. Either `open` or `closed`. Default: `open`
     */
    state?: pulumi.Input<string>;
    /**
     * The title of the milestone.
     */
    title: pulumi.Input<string>;
}
