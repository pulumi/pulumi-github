// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getCollaborators(args: GetCollaboratorsArgs, opts?: pulumi.InvokeOptions): Promise<GetCollaboratorsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("github:index/getCollaborators:getCollaborators", {
        "affiliation": args.affiliation,
        "owner": args.owner,
        "repository": args.repository,
    }, opts);
}

/**
 * A collection of arguments for invoking getCollaborators.
 */
export interface GetCollaboratorsArgs {
    affiliation?: string;
    owner: string;
    repository: string;
}

/**
 * A collection of values returned by getCollaborators.
 */
export interface GetCollaboratorsResult {
    readonly affiliation?: string;
    readonly collaborators: outputs.GetCollaboratorsCollaborator[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly owner: string;
    readonly repository: string;
}

export function getCollaboratorsOutput(args: GetCollaboratorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCollaboratorsResult> {
    return pulumi.output(args).apply(a => getCollaborators(a, opts))
}

/**
 * A collection of arguments for invoking getCollaborators.
 */
export interface GetCollaboratorsOutputArgs {
    affiliation?: pulumi.Input<string>;
    owner: pulumi.Input<string>;
    repository: pulumi.Input<string>;
}
