// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about a custom role in a GitHub Organization.
 *
 * > Note: Custom roles are currently only available in GitHub Enterprise Cloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getOrganizationCustomRole({
 *     name: "example",
 * });
 * ```
 */
export function getOrganizationCustomRole(args: GetOrganizationCustomRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationCustomRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getOrganizationCustomRole:getOrganizationCustomRole", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrganizationCustomRole.
 */
export interface GetOrganizationCustomRoleArgs {
    /**
     * The name of the custom role.
     */
    name: string;
}

/**
 * A collection of values returned by getOrganizationCustomRole.
 */
export interface GetOrganizationCustomRoleResult {
    /**
     * The system role from which the role inherits permissions.
     */
    readonly baseRole: string;
    /**
     * The description for the custom role.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * A list of additional permissions included in this role.
     */
    readonly permissions: string[];
}
/**
 * Use this data source to retrieve information about a custom role in a GitHub Organization.
 *
 * > Note: Custom roles are currently only available in GitHub Enterprise Cloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getOrganizationCustomRole({
 *     name: "example",
 * });
 * ```
 */
export function getOrganizationCustomRoleOutput(args: GetOrganizationCustomRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationCustomRoleResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationCustomRole(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationCustomRole.
 */
export interface GetOrganizationCustomRoleOutputArgs {
    /**
     * The name of the custom role.
     */
    name: pulumi.Input<string>;
}
