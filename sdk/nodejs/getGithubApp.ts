// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about an app.
 */
export function getGithubApp(args: GetGithubAppArgs, opts?: pulumi.InvokeOptions): Promise<GetGithubAppResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getGithubApp:getGithubApp", {
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getGithubApp.
 */
export interface GetGithubAppArgs {
    /**
     * The URL-friendly name of your GitHub App.
     */
    slug: string;
}

/**
 * A collection of values returned by getGithubApp.
 */
export interface GetGithubAppResult {
    /**
     * The app's description.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The app's full name.
     */
    readonly name: string;
    /**
     * The Node ID of the app.
     */
    readonly nodeId: string;
    readonly slug: string;
}
/**
 * Use this data source to retrieve information about an app.
 */
export function getGithubAppOutput(args: GetGithubAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGithubAppResult> {
    return pulumi.output(args).apply((a: any) => getGithubApp(a, opts))
}

/**
 * A collection of arguments for invoking getGithubApp.
 */
export interface GetGithubAppOutputArgs {
    /**
     * The URL-friendly name of your GitHub App.
     */
    slug: pulumi.Input<string>;
}
