// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource allows you to create and manage an autolink reference for a single repository.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const repo = new github.Repository("repo", {
 *     name: "my-repo",
 *     description: "GitHub repo managed by Terraform",
 *     "private": false,
 * });
 * const autolink = new github.RepositoryAutolinkReference("autolink", {
 *     repository: repo.name,
 *     keyPrefix: "TICKET-",
 *     targetUrlTemplate: "https://example.com/TICKET?query=<num>",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * ### Import by key prefix
 *
 * ```sh
 * $ pulumi import github:index/repositoryAutolinkReference:RepositoryAutolinkReference auto oof/OOF-
 * ```
 */
export class RepositoryAutolinkReference extends pulumi.CustomResource {
    /**
     * Get an existing RepositoryAutolinkReference resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RepositoryAutolinkReferenceState, opts?: pulumi.CustomResourceOptions): RepositoryAutolinkReference {
        return new RepositoryAutolinkReference(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'github:index/repositoryAutolinkReference:RepositoryAutolinkReference';

    /**
     * Returns true if the given object is an instance of RepositoryAutolinkReference.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RepositoryAutolinkReference {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RepositoryAutolinkReference.__pulumiType;
    }

    /**
     * An etag representing the autolink reference object.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters. Default is true.
     */
    public readonly isAlphanumeric!: pulumi.Output<boolean | undefined>;
    /**
     * This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit.
     */
    public readonly keyPrefix!: pulumi.Output<string>;
    /**
     * The repository of the autolink reference.
     */
    public readonly repository!: pulumi.Output<string>;
    /**
     * The template of the target URL used for the links; must be a valid URL and contain `<num>` for the reference number
     */
    public readonly targetUrlTemplate!: pulumi.Output<string>;

    /**
     * Create a RepositoryAutolinkReference resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryAutolinkReferenceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RepositoryAutolinkReferenceArgs | RepositoryAutolinkReferenceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RepositoryAutolinkReferenceState | undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["isAlphanumeric"] = state ? state.isAlphanumeric : undefined;
            resourceInputs["keyPrefix"] = state ? state.keyPrefix : undefined;
            resourceInputs["repository"] = state ? state.repository : undefined;
            resourceInputs["targetUrlTemplate"] = state ? state.targetUrlTemplate : undefined;
        } else {
            const args = argsOrState as RepositoryAutolinkReferenceArgs | undefined;
            if ((!args || args.keyPrefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyPrefix'");
            }
            if ((!args || args.repository === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repository'");
            }
            if ((!args || args.targetUrlTemplate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetUrlTemplate'");
            }
            resourceInputs["isAlphanumeric"] = args ? args.isAlphanumeric : undefined;
            resourceInputs["keyPrefix"] = args ? args.keyPrefix : undefined;
            resourceInputs["repository"] = args ? args.repository : undefined;
            resourceInputs["targetUrlTemplate"] = args ? args.targetUrlTemplate : undefined;
            resourceInputs["etag"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RepositoryAutolinkReference.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RepositoryAutolinkReference resources.
 */
export interface RepositoryAutolinkReferenceState {
    /**
     * An etag representing the autolink reference object.
     */
    etag?: pulumi.Input<string>;
    /**
     * Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters. Default is true.
     */
    isAlphanumeric?: pulumi.Input<boolean>;
    /**
     * This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit.
     */
    keyPrefix?: pulumi.Input<string>;
    /**
     * The repository of the autolink reference.
     */
    repository?: pulumi.Input<string>;
    /**
     * The template of the target URL used for the links; must be a valid URL and contain `<num>` for the reference number
     */
    targetUrlTemplate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RepositoryAutolinkReference resource.
 */
export interface RepositoryAutolinkReferenceArgs {
    /**
     * Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters. Default is true.
     */
    isAlphanumeric?: pulumi.Input<boolean>;
    /**
     * This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit.
     */
    keyPrefix: pulumi.Input<string>;
    /**
     * The repository of the autolink reference.
     */
    repository: pulumi.Input<string>;
    /**
     * The template of the target URL used for the links; must be a valid URL and contain `<num>` for the reference number
     */
    targetUrlTemplate: pulumi.Input<string>;
}
