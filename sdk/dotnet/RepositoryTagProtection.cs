// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    /// <summary>
    /// This resource allows you to create and manage a repository tag protection for repositories within your GitHub organization or personal account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Github = Pulumi.Github;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Github.RepositoryTagProtection("example", new()
    ///     {
    ///         Pattern = "v*",
    ///         Repository = "example-repository",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Repository tag protections can be imported using the `name` of the repository, combined with the `id` of the tag protection, separated by a `/` character. The `id` of the tag protection can be found using the [GitHub API](https://docs.github.com/en/rest/repos/tags#list-tag-protection-states-for-a-repository).
    /// 
    /// Importing uses the name of the repository, as well as the ID of the tag protection, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import github:index/repositoryTagProtection:RepositoryTagProtection terraform my-repo/31077
    /// ```
    /// </summary>
    [GithubResourceType("github:index/repositoryTagProtection:RepositoryTagProtection")]
    public partial class RepositoryTagProtection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The pattern of the tag to protect.
        /// </summary>
        [Output("pattern")]
        public Output<string> Pattern { get; private set; } = null!;

        /// <summary>
        /// Name of the repository to add the tag protection to.
        /// </summary>
        [Output("repository")]
        public Output<string> Repository { get; private set; } = null!;

        /// <summary>
        /// The ID of the tag protection.
        /// </summary>
        [Output("tagProtectionId")]
        public Output<int> TagProtectionId { get; private set; } = null!;


        /// <summary>
        /// Create a RepositoryTagProtection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RepositoryTagProtection(string name, RepositoryTagProtectionArgs args, CustomResourceOptions? options = null)
            : base("github:index/repositoryTagProtection:RepositoryTagProtection", name, args ?? new RepositoryTagProtectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RepositoryTagProtection(string name, Input<string> id, RepositoryTagProtectionState? state = null, CustomResourceOptions? options = null)
            : base("github:index/repositoryTagProtection:RepositoryTagProtection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RepositoryTagProtection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RepositoryTagProtection Get(string name, Input<string> id, RepositoryTagProtectionState? state = null, CustomResourceOptions? options = null)
        {
            return new RepositoryTagProtection(name, id, state, options);
        }
    }

    public sealed class RepositoryTagProtectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The pattern of the tag to protect.
        /// </summary>
        [Input("pattern", required: true)]
        public Input<string> Pattern { get; set; } = null!;

        /// <summary>
        /// Name of the repository to add the tag protection to.
        /// </summary>
        [Input("repository", required: true)]
        public Input<string> Repository { get; set; } = null!;

        public RepositoryTagProtectionArgs()
        {
        }
        public static new RepositoryTagProtectionArgs Empty => new RepositoryTagProtectionArgs();
    }

    public sealed class RepositoryTagProtectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The pattern of the tag to protect.
        /// </summary>
        [Input("pattern")]
        public Input<string>? Pattern { get; set; }

        /// <summary>
        /// Name of the repository to add the tag protection to.
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        /// <summary>
        /// The ID of the tag protection.
        /// </summary>
        [Input("tagProtectionId")]
        public Input<int>? TagProtectionId { get; set; }

        public RepositoryTagProtectionState()
        {
        }
        public static new RepositoryTagProtectionState Empty => new RepositoryTagProtectionState();
    }
}
