// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    public static class GetUser
    {
        public static Task<GetUserResult> InvokeAsync(GetUserArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("github:index/getUser:getUser", args ?? new GetUserArgs(), options.WithDefaults());

        public static Output<GetUserResult> Invoke(GetUserInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetUserResult>("github:index/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        [Input("username", required: true)]
        public string Username { get; set; } = null!;

        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }

    public sealed class GetUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public GetUserInvokeArgs()
        {
        }
        public static new GetUserInvokeArgs Empty => new GetUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        public readonly string AvatarUrl;
        public readonly string Bio;
        public readonly string Blog;
        public readonly string Company;
        public readonly string CreatedAt;
        public readonly string Email;
        public readonly int Followers;
        public readonly int Following;
        public readonly ImmutableArray<string> GpgKeys;
        public readonly string GravatarId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string Login;
        public readonly string Name;
        public readonly string NodeId;
        public readonly int PublicGists;
        public readonly int PublicRepos;
        public readonly bool SiteAdmin;
        public readonly ImmutableArray<string> SshKeys;
        public readonly string SuspendedAt;
        public readonly string UpdatedAt;
        public readonly string Username;

        [OutputConstructor]
        private GetUserResult(
            string avatarUrl,

            string bio,

            string blog,

            string company,

            string createdAt,

            string email,

            int followers,

            int following,

            ImmutableArray<string> gpgKeys,

            string gravatarId,

            string id,

            string location,

            string login,

            string name,

            string nodeId,

            int publicGists,

            int publicRepos,

            bool siteAdmin,

            ImmutableArray<string> sshKeys,

            string suspendedAt,

            string updatedAt,

            string username)
        {
            AvatarUrl = avatarUrl;
            Bio = bio;
            Blog = blog;
            Company = company;
            CreatedAt = createdAt;
            Email = email;
            Followers = followers;
            Following = following;
            GpgKeys = gpgKeys;
            GravatarId = gravatarId;
            Id = id;
            Location = location;
            Login = login;
            Name = name;
            NodeId = nodeId;
            PublicGists = publicGists;
            PublicRepos = publicRepos;
            SiteAdmin = siteAdmin;
            SshKeys = sshKeys;
            SuspendedAt = suspendedAt;
            UpdatedAt = updatedAt;
            Username = username;
        }
    }
}
