// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    public static class GetUsers
    {
        public static Task<GetUsersResult> InvokeAsync(GetUsersArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetUsersResult>("github:index/getUsers:getUsers", args ?? new GetUsersArgs(), options.WithDefaults());

        public static Output<GetUsersResult> Invoke(GetUsersInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetUsersResult>("github:index/getUsers:getUsers", args ?? new GetUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUsersArgs : global::Pulumi.InvokeArgs
    {
        [Input("usernames", required: true)]
        private List<string>? _usernames;
        public List<string> Usernames
        {
            get => _usernames ?? (_usernames = new List<string>());
            set => _usernames = value;
        }

        public GetUsersArgs()
        {
        }
        public static new GetUsersArgs Empty => new GetUsersArgs();
    }

    public sealed class GetUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("usernames", required: true)]
        private InputList<string>? _usernames;
        public InputList<string> Usernames
        {
            get => _usernames ?? (_usernames = new InputList<string>());
            set => _usernames = value;
        }

        public GetUsersInvokeArgs()
        {
        }
        public static new GetUsersInvokeArgs Empty => new GetUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetUsersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Logins;
        public readonly ImmutableArray<string> NodeIds;
        public readonly ImmutableArray<string> UnknownLogins;
        public readonly ImmutableArray<string> Usernames;

        [OutputConstructor]
        private GetUsersResult(
            string id,

            ImmutableArray<string> logins,

            ImmutableArray<string> nodeIds,

            ImmutableArray<string> unknownLogins,

            ImmutableArray<string> usernames)
        {
            Id = id;
            Logins = logins;
            NodeIds = nodeIds;
            UnknownLogins = unknownLogins;
            Usernames = usernames;
        }
    }
}
