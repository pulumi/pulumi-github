// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    public static class GetAppToken
    {
        /// <summary>
        /// Use this data source to generate a [GitHub App JWT](https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-json-web-token-jwt-for-a-github-app).
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// using Std = Pulumi.Std;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Github.GetAppToken.Invoke(new()
        ///     {
        ///         AppId = "123456",
        ///         InstallationId = "78910",
        ///         PemFile = Std.File.Invoke(new()
        ///         {
        ///             Input = "foo/bar.pem",
        ///         }).Result,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetAppTokenResult> InvokeAsync(GetAppTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppTokenResult>("github:index/getAppToken:getAppToken", args ?? new GetAppTokenArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to generate a [GitHub App JWT](https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-json-web-token-jwt-for-a-github-app).
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// using Std = Pulumi.Std;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Github.GetAppToken.Invoke(new()
        ///     {
        ///         AppId = "123456",
        ///         InstallationId = "78910",
        ///         PemFile = Std.File.Invoke(new()
        ///         {
        ///             Input = "foo/bar.pem",
        ///         }).Result,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetAppTokenResult> Invoke(GetAppTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppTokenResult>("github:index/getAppToken:getAppToken", args ?? new GetAppTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppTokenArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// This is the ID of the GitHub App.
        /// </summary>
        [Input("appId", required: true)]
        public string AppId { get; set; } = null!;

        /// <summary>
        /// This is the ID of the GitHub App installation.
        /// </summary>
        [Input("installationId", required: true)]
        public string InstallationId { get; set; } = null!;

        /// <summary>
        /// This is the contents of the GitHub App private key PEM file.
        /// </summary>
        [Input("pemFile", required: true)]
        public string PemFile { get; set; } = null!;

        public GetAppTokenArgs()
        {
        }
        public static new GetAppTokenArgs Empty => new GetAppTokenArgs();
    }

    public sealed class GetAppTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// This is the ID of the GitHub App.
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// This is the ID of the GitHub App installation.
        /// </summary>
        [Input("installationId", required: true)]
        public Input<string> InstallationId { get; set; } = null!;

        /// <summary>
        /// This is the contents of the GitHub App private key PEM file.
        /// </summary>
        [Input("pemFile", required: true)]
        public Input<string> PemFile { get; set; } = null!;

        public GetAppTokenInvokeArgs()
        {
        }
        public static new GetAppTokenInvokeArgs Empty => new GetAppTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppTokenResult
    {
        public readonly string AppId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstallationId;
        public readonly string PemFile;
        /// <summary>
        /// The generated GitHub APP JWT.
        /// </summary>
        public readonly string Token;

        [OutputConstructor]
        private GetAppTokenResult(
            string appId,

            string id,

            string installationId,

            string pemFile,

            string token)
        {
            AppId = appId;
            Id = id;
            InstallationId = installationId;
            PemFile = pemFile;
            Token = token;
        }
    }
}
