// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    public static class GetOrganizationTeams
    {
        /// <summary>
        /// Use this data source to retrieve information about all GitHub teams in an organization.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// To retrieve *all* teams of the organization:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var all = Output.Create(Github.GetOrganizationTeams.InvokeAsync());
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// To retrieve only the team's at the root of the organization:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var rootTeams = Output.Create(Github.GetOrganizationTeams.InvokeAsync(new Github.GetOrganizationTeamsArgs
        ///         {
        ///             RootTeamsOnly = true,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOrganizationTeamsResult> InvokeAsync(GetOrganizationTeamsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationTeamsResult>("github:index/getOrganizationTeams:getOrganizationTeams", args ?? new GetOrganizationTeamsArgs(), options.WithVersion());
    }


    public sealed class GetOrganizationTeamsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Only return teams that are at the organization's root, i.e. no nested teams. Defaults to `false`.
        /// </summary>
        [Input("rootTeamsOnly")]
        public bool? RootTeamsOnly { get; set; }

        public GetOrganizationTeamsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOrganizationTeamsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Only return teams that are at the organization's root, i.e. no nested teams. Defaults to `false`.
        /// </summary>
        public readonly bool? RootTeamsOnly;
        /// <summary>
        /// An Array of GitHub Teams.  Each `team` block consists of the fields documented below.
        /// ___
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationTeamsTeamResult> Teams;

        [OutputConstructor]
        private GetOrganizationTeamsResult(
            string id,

            bool? rootTeamsOnly,

            ImmutableArray<Outputs.GetOrganizationTeamsTeamResult> teams)
        {
            Id = id;
            RootTeamsOnly = rootTeamsOnly;
            Teams = teams;
        }
    }
}
