// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github.Outputs
{

    [OutputType]
    public sealed class RepositoryRulesetRulesPullRequest
    {
        /// <summary>
        /// New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`.
        /// </summary>
        public readonly bool? DismissStaleReviewsOnPush;
        /// <summary>
        /// Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`.
        /// </summary>
        public readonly bool? RequireCodeOwnerReview;
        /// <summary>
        /// Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to `false`.
        /// </summary>
        public readonly bool? RequireLastPushApproval;
        /// <summary>
        /// The number of approving reviews that are required before a pull request can be merged. Defaults to `0`.
        /// </summary>
        public readonly int? RequiredApprovingReviewCount;
        /// <summary>
        /// All conversations on code must be resolved before a pull request can be merged. Defaults to `false`.
        /// </summary>
        public readonly bool? RequiredReviewThreadResolution;

        [OutputConstructor]
        private RepositoryRulesetRulesPullRequest(
            bool? dismissStaleReviewsOnPush,

            bool? requireCodeOwnerReview,

            bool? requireLastPushApproval,

            int? requiredApprovingReviewCount,

            bool? requiredReviewThreadResolution)
        {
            DismissStaleReviewsOnPush = dismissStaleReviewsOnPush;
            RequireCodeOwnerReview = requireCodeOwnerReview;
            RequireLastPushApproval = requireLastPushApproval;
            RequiredApprovingReviewCount = requiredApprovingReviewCount;
            RequiredReviewThreadResolution = requiredReviewThreadResolution;
        }
    }
}
