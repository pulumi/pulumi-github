// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github.Outputs
{

    [OutputType]
    public sealed class RepositoryRulesetRulesMergeQueue
    {
        /// <summary>
        /// Maximum time for a required status check to report a conclusion. After this much time has elapsed, checks that have not reported a conclusion will be assumed to have failed. Defaults to `60`.
        /// </summary>
        public readonly int? CheckResponseTimeoutMinutes;
        /// <summary>
        /// When set to ALLGREEN, the merge commit created by merge queue for each PR in the group must pass all required checks to merge. When set to HEADGREEN, only the commit at the head of the merge group, i.e. the commit containing changes from all of the PRs in the group, must pass its required checks to merge. Can be one of: ALLGREEN, HEADGREEN. Defaults to `ALLGREEN`.
        /// </summary>
        public readonly string? GroupingStrategy;
        /// <summary>
        /// Limit the number of queued pull requests requesting checks and workflow runs at the same time. Defaults to `5`.
        /// </summary>
        public readonly int? MaxEntriesToBuild;
        /// <summary>
        /// The maximum number of PRs that will be merged together in a group. Defaults to `5`.
        /// </summary>
        public readonly int? MaxEntriesToMerge;
        /// <summary>
        /// Method to use when merging changes from queued pull requests. Can be one of: MERGE, SQUASH, REBASE. Defaults to `MERGE`.
        /// </summary>
        public readonly string? MergeMethod;
        /// <summary>
        /// The minimum number of PRs that will be merged together in a group. Defaults to `1`.
        /// </summary>
        public readonly int? MinEntriesToMerge;
        /// <summary>
        /// The time merge queue should wait after the first PR is added to the queue for the minimum group size to be met. After this time has elapsed, the minimum group size will be ignored and a smaller group will be merged. Defaults to `5`.
        /// </summary>
        public readonly int? MinEntriesToMergeWaitMinutes;

        [OutputConstructor]
        private RepositoryRulesetRulesMergeQueue(
            int? checkResponseTimeoutMinutes,

            string? groupingStrategy,

            int? maxEntriesToBuild,

            int? maxEntriesToMerge,

            string? mergeMethod,

            int? minEntriesToMerge,

            int? minEntriesToMergeWaitMinutes)
        {
            CheckResponseTimeoutMinutes = checkResponseTimeoutMinutes;
            GroupingStrategy = groupingStrategy;
            MaxEntriesToBuild = maxEntriesToBuild;
            MaxEntriesToMerge = maxEntriesToMerge;
            MergeMethod = mergeMethod;
            MinEntriesToMerge = minEntriesToMerge;
            MinEntriesToMergeWaitMinutes = minEntriesToMergeWaitMinutes;
        }
    }
}
