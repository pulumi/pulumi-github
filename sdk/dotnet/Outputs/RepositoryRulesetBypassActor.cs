// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github.Outputs
{

    [OutputType]
    public sealed class RepositoryRulesetBypassActor
    {
        /// <summary>
        /// The ID of the actor that can bypass a ruleset. If `ActorType` is `Integration`, `ActorId` is a GitHub App ID. App ID can be obtained by following instructions from the [Get an App API docs](https://docs.github.com/en/rest/apps/apps?apiVersion=2022-11-28#get-an-app)
        /// </summary>
        public readonly int? ActorId;
        /// <summary>
        /// The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`, `DeployKey`.
        /// </summary>
        public readonly string ActorType;
        /// <summary>
        /// (String) When the specified actor can bypass the ruleset. PullRequest means that an actor can only bypass rules on pull requests. Can be one of: `Always`, `PullRequest`, `Exempt`.
        /// 
        /// &gt; Note: at the time of writing this, the following actor types correspond to the following actor IDs:
        /// 
        /// * `OrganizationAdmin` &gt; `1`
        /// * `RepositoryRole` (This is the actor type, the following are the base repository roles and their associated IDs.)
        /// </summary>
        public readonly string BypassMode;

        [OutputConstructor]
        private RepositoryRulesetBypassActor(
            int? actorId,

            string actorType,

            string bypassMode)
        {
            ActorId = actorId;
            ActorType = actorType;
            BypassMode = bypassMode;
        }
    }
}
