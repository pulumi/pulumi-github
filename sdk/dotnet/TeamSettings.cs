// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    /// <summary>
    /// This resource manages the team settings (in particular the request review delegation settings) within the organization
    /// 
    /// Creating this resource will alter the team Code Review settings.
    /// 
    /// The team must both belong to the same organization configured in the provider on GitHub.
    /// 
    /// &gt; **Note**: This resource relies on the v4 GraphQl GitHub API. If this API is not available, or the Stone Crop schema preview is not available, then this resource will not work as intended.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Github = Pulumi.Github;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Add a repository to the team
    ///     var someTeam = new Github.Team("some_team", new()
    ///     {
    ///         Name = "SomeTeam",
    ///         Description = "Some cool team",
    ///     });
    /// 
    ///     var codeReviewSettings = new Github.TeamSettings("code_review_settings", new()
    ///     {
    ///         TeamId = someTeam.Id,
    ///         ReviewRequestDelegation = new Github.Inputs.TeamSettingsReviewRequestDelegationArgs
    ///         {
    ///             Algorithm = "ROUND_ROBIN",
    ///             MemberCount = 1,
    ///             Notify = true,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// GitHub Teams can be imported using the GitHub team ID, or the team slug e.g.
    /// 
    /// ```sh
    /// $ pulumi import github:index/teamSettings:TeamSettings code_review_settings 1234567
    /// ```
    /// or,
    /// 
    /// ```sh
    /// $ pulumi import github:index/teamSettings:TeamSettings code_review_settings SomeTeam
    /// ```
    /// </summary>
    [GithubResourceType("github:index/teamSettings:TeamSettings")]
    public partial class TeamSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team. See GitHub Review Request Delegation below for details. See [GitHub's documentation](https://docs.github.com/en/organizations/organizing-members-into-teams/managing-code-review-settings-for-your-team#configuring-team-notifications) for more configuration details.
        /// </summary>
        [Output("reviewRequestDelegation")]
        public Output<Outputs.TeamSettingsReviewRequestDelegation?> ReviewRequestDelegation { get; private set; } = null!;

        /// <summary>
        /// The GitHub team id or the GitHub team slug
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;

        /// <summary>
        /// The slug of the Team within the Organization.
        /// </summary>
        [Output("teamSlug")]
        public Output<string> TeamSlug { get; private set; } = null!;

        /// <summary>
        /// The unique ID of the Team on GitHub. Corresponds to the ID of the 'github_team_settings' resource.
        /// </summary>
        [Output("teamUid")]
        public Output<string> TeamUid { get; private set; } = null!;


        /// <summary>
        /// Create a TeamSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TeamSettings(string name, TeamSettingsArgs args, CustomResourceOptions? options = null)
            : base("github:index/teamSettings:TeamSettings", name, args ?? new TeamSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TeamSettings(string name, Input<string> id, TeamSettingsState? state = null, CustomResourceOptions? options = null)
            : base("github:index/teamSettings:TeamSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TeamSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TeamSettings Get(string name, Input<string> id, TeamSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new TeamSettings(name, id, state, options);
        }
    }

    public sealed class TeamSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team. See GitHub Review Request Delegation below for details. See [GitHub's documentation](https://docs.github.com/en/organizations/organizing-members-into-teams/managing-code-review-settings-for-your-team#configuring-team-notifications) for more configuration details.
        /// </summary>
        [Input("reviewRequestDelegation")]
        public Input<Inputs.TeamSettingsReviewRequestDelegationArgs>? ReviewRequestDelegation { get; set; }

        /// <summary>
        /// The GitHub team id or the GitHub team slug
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        public TeamSettingsArgs()
        {
        }
        public static new TeamSettingsArgs Empty => new TeamSettingsArgs();
    }

    public sealed class TeamSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team. See GitHub Review Request Delegation below for details. See [GitHub's documentation](https://docs.github.com/en/organizations/organizing-members-into-teams/managing-code-review-settings-for-your-team#configuring-team-notifications) for more configuration details.
        /// </summary>
        [Input("reviewRequestDelegation")]
        public Input<Inputs.TeamSettingsReviewRequestDelegationGetArgs>? ReviewRequestDelegation { get; set; }

        /// <summary>
        /// The GitHub team id or the GitHub team slug
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// The slug of the Team within the Organization.
        /// </summary>
        [Input("teamSlug")]
        public Input<string>? TeamSlug { get; set; }

        /// <summary>
        /// The unique ID of the Team on GitHub. Corresponds to the ID of the 'github_team_settings' resource.
        /// </summary>
        [Input("teamUid")]
        public Input<string>? TeamUid { get; set; }

        public TeamSettingsState()
        {
        }
        public static new TeamSettingsState Empty => new TeamSettingsState();
    }
}
