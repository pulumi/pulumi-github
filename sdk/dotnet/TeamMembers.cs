// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    /// <summary>
    /// ## Import
    /// 
    /// GitHub Team Membership can be imported using the team ID `teamid` or team name, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import github:index/teamMembers:TeamMembers some_team 1234567
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import github:index/teamMembers:TeamMembers some_team Administrators
    /// ```
    /// </summary>
    [GithubResourceType("github:index/teamMembers:TeamMembers")]
    public partial class TeamMembers : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of team members. See Members below for details.
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<Outputs.TeamMembersMember>> Members { get; private set; } = null!;

        /// <summary>
        /// The GitHub team id or the GitHub team slug
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;


        /// <summary>
        /// Create a TeamMembers resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TeamMembers(string name, TeamMembersArgs args, CustomResourceOptions? options = null)
            : base("github:index/teamMembers:TeamMembers", name, args ?? new TeamMembersArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TeamMembers(string name, Input<string> id, TeamMembersState? state = null, CustomResourceOptions? options = null)
            : base("github:index/teamMembers:TeamMembers", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TeamMembers resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TeamMembers Get(string name, Input<string> id, TeamMembersState? state = null, CustomResourceOptions? options = null)
        {
            return new TeamMembers(name, id, state, options);
        }
    }

    public sealed class TeamMembersArgs : global::Pulumi.ResourceArgs
    {
        [Input("members", required: true)]
        private InputList<Inputs.TeamMembersMemberArgs>? _members;

        /// <summary>
        /// List of team members. See Members below for details.
        /// </summary>
        public InputList<Inputs.TeamMembersMemberArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.TeamMembersMemberArgs>());
            set => _members = value;
        }

        /// <summary>
        /// The GitHub team id or the GitHub team slug
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        public TeamMembersArgs()
        {
        }
        public static new TeamMembersArgs Empty => new TeamMembersArgs();
    }

    public sealed class TeamMembersState : global::Pulumi.ResourceArgs
    {
        [Input("members")]
        private InputList<Inputs.TeamMembersMemberGetArgs>? _members;

        /// <summary>
        /// List of team members. See Members below for details.
        /// </summary>
        public InputList<Inputs.TeamMembersMemberGetArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.TeamMembersMemberGetArgs>());
            set => _members = value;
        }

        /// <summary>
        /// The GitHub team id or the GitHub team slug
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public TeamMembersState()
        {
        }
        public static new TeamMembersState Empty => new TeamMembersState();
    }
}
