// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    /// <summary>
    /// Provides a GitHub branch default resource.
    /// 
    /// This resource allows you to set the default branch for a given repository.
    /// 
    /// Note that use of this resource is incompatible with the `default_branch` option of the `github.Repository` resource.  Using both will result in plans always showing a diff.
    /// 
    /// ## Import
    /// 
    /// GitHub Branch Defaults can be imported using an ID made up of `repository`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import github:index/branchDefault:BranchDefault branch_default my-repo
    /// ```
    /// </summary>
    [GithubResourceType("github:index/branchDefault:BranchDefault")]
    public partial class BranchDefault : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The branch (e.g. `main`)
        /// </summary>
        [Output("branch")]
        public Output<string> Branch { get; private set; } = null!;

        /// <summary>
        /// Indicate if it should rename the branch rather than use an existing branch. Defaults to `false`.
        /// </summary>
        [Output("rename")]
        public Output<bool?> Rename { get; private set; } = null!;

        /// <summary>
        /// The GitHub repository
        /// </summary>
        [Output("repository")]
        public Output<string> Repository { get; private set; } = null!;


        /// <summary>
        /// Create a BranchDefault resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BranchDefault(string name, BranchDefaultArgs args, CustomResourceOptions? options = null)
            : base("github:index/branchDefault:BranchDefault", name, args ?? new BranchDefaultArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BranchDefault(string name, Input<string> id, BranchDefaultState? state = null, CustomResourceOptions? options = null)
            : base("github:index/branchDefault:BranchDefault", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BranchDefault resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BranchDefault Get(string name, Input<string> id, BranchDefaultState? state = null, CustomResourceOptions? options = null)
        {
            return new BranchDefault(name, id, state, options);
        }
    }

    public sealed class BranchDefaultArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The branch (e.g. `main`)
        /// </summary>
        [Input("branch", required: true)]
        public Input<string> Branch { get; set; } = null!;

        /// <summary>
        /// Indicate if it should rename the branch rather than use an existing branch. Defaults to `false`.
        /// </summary>
        [Input("rename")]
        public Input<bool>? Rename { get; set; }

        /// <summary>
        /// The GitHub repository
        /// </summary>
        [Input("repository", required: true)]
        public Input<string> Repository { get; set; } = null!;

        public BranchDefaultArgs()
        {
        }
        public static new BranchDefaultArgs Empty => new BranchDefaultArgs();
    }

    public sealed class BranchDefaultState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The branch (e.g. `main`)
        /// </summary>
        [Input("branch")]
        public Input<string>? Branch { get; set; }

        /// <summary>
        /// Indicate if it should rename the branch rather than use an existing branch. Defaults to `false`.
        /// </summary>
        [Input("rename")]
        public Input<bool>? Rename { get; set; }

        /// <summary>
        /// The GitHub repository
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        public BranchDefaultState()
        {
        }
        public static new BranchDefaultState Empty => new BranchDefaultState();
    }
}
