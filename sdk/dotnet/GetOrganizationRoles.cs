// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    public static class GetOrganizationRoles
    {
        /// <summary>
        /// Lookup all custom roles in an organization.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Github.GetOrganizationRoles.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ## Nested Schema for `Roles`
        /// 
        /// ### Read-Only
        /// 
        /// - `RoleId` (Number) The ID of the organization role.
        /// - `Name` (String) The name of the organization role.
        /// - `Description` (String) The description of the organization role.
        /// - `Source` (String) The source of this role; one of `Predefined`, `Organization`, or `Enterprise`.
        /// - `BaseRole` (String) The system role from which this role inherits permissions.
        /// - `Permissions` (Set of String) The permissions included in this role.
        /// </summary>
        public static Task<GetOrganizationRolesResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationRolesResult>("github:index/getOrganizationRoles:getOrganizationRoles", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Lookup all custom roles in an organization.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Github.GetOrganizationRoles.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ## Nested Schema for `Roles`
        /// 
        /// ### Read-Only
        /// 
        /// - `RoleId` (Number) The ID of the organization role.
        /// - `Name` (String) The name of the organization role.
        /// - `Description` (String) The description of the organization role.
        /// - `Source` (String) The source of this role; one of `Predefined`, `Organization`, or `Enterprise`.
        /// - `BaseRole` (String) The system role from which this role inherits permissions.
        /// - `Permissions` (Set of String) The permissions included in this role.
        /// </summary>
        public static Output<GetOrganizationRolesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationRolesResult>("github:index/getOrganizationRoles:getOrganizationRoles", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Lookup all custom roles in an organization.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Github.GetOrganizationRoles.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ## Nested Schema for `Roles`
        /// 
        /// ### Read-Only
        /// 
        /// - `RoleId` (Number) The ID of the organization role.
        /// - `Name` (String) The name of the organization role.
        /// - `Description` (String) The description of the organization role.
        /// - `Source` (String) The source of this role; one of `Predefined`, `Organization`, or `Enterprise`.
        /// - `BaseRole` (String) The system role from which this role inherits permissions.
        /// - `Permissions` (Set of String) The permissions included in this role.
        /// </summary>
        public static Output<GetOrganizationRolesResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationRolesResult>("github:index/getOrganizationRoles:getOrganizationRoles", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetOrganizationRolesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Set of Object, see schema) Available organization roles.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationRolesRoleResult> Roles;

        [OutputConstructor]
        private GetOrganizationRolesResult(
            string id,

            ImmutableArray<Outputs.GetOrganizationRolesRoleResult> roles)
        {
            Id = id;
            Roles = roles;
        }
    }
}
