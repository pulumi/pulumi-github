// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    public static class GetCollaborators
    {
        public static Task<GetCollaboratorsResult> InvokeAsync(GetCollaboratorsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCollaboratorsResult>("github:index/getCollaborators:getCollaborators", args ?? new GetCollaboratorsArgs(), options.WithDefaults());

        public static Output<GetCollaboratorsResult> Invoke(GetCollaboratorsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCollaboratorsResult>("github:index/getCollaborators:getCollaborators", args ?? new GetCollaboratorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCollaboratorsArgs : global::Pulumi.InvokeArgs
    {
        [Input("affiliation")]
        public string? Affiliation { get; set; }

        [Input("owner", required: true)]
        public string Owner { get; set; } = null!;

        [Input("repository", required: true)]
        public string Repository { get; set; } = null!;

        public GetCollaboratorsArgs()
        {
        }
        public static new GetCollaboratorsArgs Empty => new GetCollaboratorsArgs();
    }

    public sealed class GetCollaboratorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("affiliation")]
        public Input<string>? Affiliation { get; set; }

        [Input("owner", required: true)]
        public Input<string> Owner { get; set; } = null!;

        [Input("repository", required: true)]
        public Input<string> Repository { get; set; } = null!;

        public GetCollaboratorsInvokeArgs()
        {
        }
        public static new GetCollaboratorsInvokeArgs Empty => new GetCollaboratorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetCollaboratorsResult
    {
        public readonly string? Affiliation;
        public readonly ImmutableArray<Outputs.GetCollaboratorsCollaboratorResult> Collaborators;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Owner;
        public readonly string Repository;

        [OutputConstructor]
        private GetCollaboratorsResult(
            string? affiliation,

            ImmutableArray<Outputs.GetCollaboratorsCollaboratorResult> collaborators,

            string id,

            string owner,

            string repository)
        {
            Affiliation = affiliation;
            Collaborators = collaborators;
            Id = id;
            Owner = owner;
            Repository = repository;
        }
    }
}
