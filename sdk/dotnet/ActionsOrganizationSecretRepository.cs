// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    /// <summary>
    /// This resource help you to allow/unallow a repository to use an existing GitHub Actions secrets within your GitHub organization.
    /// You must have write access to an organization secret to use this resource.
    /// 
    /// This resource is only applicable when `Visibility` of the existing organization secret has been set to `Selected`.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Github = Pulumi.Github;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var repo = Github.GetRepository.Invoke(new()
    ///     {
    ///         FullName = "my-org/repo",
    ///     });
    /// 
    ///     var orgSecretRepos = new Github.ActionsOrganizationSecretRepository("org_secret_repos", new()
    ///     {
    ///         SecretName = "EXAMPLE_SECRET_NAME",
    ///         RepositoryId = repoGithubRepository.RepoId,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource can be imported using an ID made up of the secret name:
    /// 
    /// ```sh
    /// $ pulumi import github:index/actionsOrganizationSecretRepository:ActionsOrganizationSecretRepository test_secret_repos test_secret_name:repo_id
    /// ```
    /// </summary>
    [GithubResourceType("github:index/actionsOrganizationSecretRepository:ActionsOrganizationSecretRepository")]
    public partial class ActionsOrganizationSecretRepository : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Repository id that can access the organization secret.
        /// </summary>
        [Output("repositoryId")]
        public Output<int> RepositoryId { get; private set; } = null!;

        /// <summary>
        /// Name of the existing secret
        /// </summary>
        [Output("secretName")]
        public Output<string> SecretName { get; private set; } = null!;


        /// <summary>
        /// Create a ActionsOrganizationSecretRepository resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ActionsOrganizationSecretRepository(string name, ActionsOrganizationSecretRepositoryArgs args, CustomResourceOptions? options = null)
            : base("github:index/actionsOrganizationSecretRepository:ActionsOrganizationSecretRepository", name, args ?? new ActionsOrganizationSecretRepositoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ActionsOrganizationSecretRepository(string name, Input<string> id, ActionsOrganizationSecretRepositoryState? state = null, CustomResourceOptions? options = null)
            : base("github:index/actionsOrganizationSecretRepository:ActionsOrganizationSecretRepository", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ActionsOrganizationSecretRepository resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ActionsOrganizationSecretRepository Get(string name, Input<string> id, ActionsOrganizationSecretRepositoryState? state = null, CustomResourceOptions? options = null)
        {
            return new ActionsOrganizationSecretRepository(name, id, state, options);
        }
    }

    public sealed class ActionsOrganizationSecretRepositoryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Repository id that can access the organization secret.
        /// </summary>
        [Input("repositoryId", required: true)]
        public Input<int> RepositoryId { get; set; } = null!;

        /// <summary>
        /// Name of the existing secret
        /// </summary>
        [Input("secretName", required: true)]
        public Input<string> SecretName { get; set; } = null!;

        public ActionsOrganizationSecretRepositoryArgs()
        {
        }
        public static new ActionsOrganizationSecretRepositoryArgs Empty => new ActionsOrganizationSecretRepositoryArgs();
    }

    public sealed class ActionsOrganizationSecretRepositoryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Repository id that can access the organization secret.
        /// </summary>
        [Input("repositoryId")]
        public Input<int>? RepositoryId { get; set; }

        /// <summary>
        /// Name of the existing secret
        /// </summary>
        [Input("secretName")]
        public Input<string>? SecretName { get; set; }

        public ActionsOrganizationSecretRepositoryState()
        {
        }
        public static new ActionsOrganizationSecretRepositoryState Empty => new ActionsOrganizationSecretRepositoryState();
    }
}
