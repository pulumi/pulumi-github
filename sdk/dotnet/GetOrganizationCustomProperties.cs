// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    public static class GetOrganizationCustomProperties
    {
        /// <summary>
        /// Use this data source to retrieve information about a GitHub organization custom property.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var environment = Github.GetOrganizationCustomProperties.Invoke(new()
        ///     {
        ///         PropertyName = "environment",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOrganizationCustomPropertiesResult> InvokeAsync(GetOrganizationCustomPropertiesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationCustomPropertiesResult>("github:index/getOrganizationCustomProperties:getOrganizationCustomProperties", args ?? new GetOrganizationCustomPropertiesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about a GitHub organization custom property.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var environment = Github.GetOrganizationCustomProperties.Invoke(new()
        ///     {
        ///         PropertyName = "environment",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationCustomPropertiesResult> Invoke(GetOrganizationCustomPropertiesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationCustomPropertiesResult>("github:index/getOrganizationCustomProperties:getOrganizationCustomProperties", args ?? new GetOrganizationCustomPropertiesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about a GitHub organization custom property.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var environment = Github.GetOrganizationCustomProperties.Invoke(new()
        ///     {
        ///         PropertyName = "environment",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationCustomPropertiesResult> Invoke(GetOrganizationCustomPropertiesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationCustomPropertiesResult>("github:index/getOrganizationCustomProperties:getOrganizationCustomProperties", args ?? new GetOrganizationCustomPropertiesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationCustomPropertiesArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowedValues")]
        private List<string>? _allowedValues;

        /// <summary>
        /// List of allowed values for the custom property. Only populated when `ValueType` is `SingleSelect` or `MultiSelect`.
        /// </summary>
        public List<string> AllowedValues
        {
            get => _allowedValues ?? (_allowedValues = new List<string>());
            set => _allowedValues = value;
        }

        /// <summary>
        /// The default value of the custom property.
        /// </summary>
        [Input("defaultValue")]
        public string? DefaultValue { get; set; }

        /// <summary>
        /// The description of the custom property.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// The name of the custom property to retrieve.
        /// </summary>
        [Input("propertyName", required: true)]
        public string PropertyName { get; set; } = null!;

        /// <summary>
        /// Whether the custom property is required.
        /// </summary>
        [Input("required")]
        public bool? Required { get; set; }

        /// <summary>
        /// The type of the custom property. Can be one of `String`, `SingleSelect`, `MultiSelect`, or `TrueFalse`.
        /// </summary>
        [Input("valueType")]
        public string? ValueType { get; set; }

        public GetOrganizationCustomPropertiesArgs()
        {
        }
        public static new GetOrganizationCustomPropertiesArgs Empty => new GetOrganizationCustomPropertiesArgs();
    }

    public sealed class GetOrganizationCustomPropertiesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowedValues")]
        private InputList<string>? _allowedValues;

        /// <summary>
        /// List of allowed values for the custom property. Only populated when `ValueType` is `SingleSelect` or `MultiSelect`.
        /// </summary>
        public InputList<string> AllowedValues
        {
            get => _allowedValues ?? (_allowedValues = new InputList<string>());
            set => _allowedValues = value;
        }

        /// <summary>
        /// The default value of the custom property.
        /// </summary>
        [Input("defaultValue")]
        public Input<string>? DefaultValue { get; set; }

        /// <summary>
        /// The description of the custom property.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the custom property to retrieve.
        /// </summary>
        [Input("propertyName", required: true)]
        public Input<string> PropertyName { get; set; } = null!;

        /// <summary>
        /// Whether the custom property is required.
        /// </summary>
        [Input("required")]
        public Input<bool>? Required { get; set; }

        /// <summary>
        /// The type of the custom property. Can be one of `String`, `SingleSelect`, `MultiSelect`, or `TrueFalse`.
        /// </summary>
        [Input("valueType")]
        public Input<string>? ValueType { get; set; }

        public GetOrganizationCustomPropertiesInvokeArgs()
        {
        }
        public static new GetOrganizationCustomPropertiesInvokeArgs Empty => new GetOrganizationCustomPropertiesInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationCustomPropertiesResult
    {
        /// <summary>
        /// List of allowed values for the custom property. Only populated when `ValueType` is `SingleSelect` or `MultiSelect`.
        /// </summary>
        public readonly ImmutableArray<string> AllowedValues;
        /// <summary>
        /// The default value of the custom property.
        /// </summary>
        public readonly string DefaultValue;
        /// <summary>
        /// The description of the custom property.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the custom property.
        /// </summary>
        public readonly string PropertyName;
        /// <summary>
        /// Whether the custom property is required.
        /// </summary>
        public readonly bool? Required;
        /// <summary>
        /// The type of the custom property. Can be one of `String`, `SingleSelect`, `MultiSelect`, or `TrueFalse`.
        /// </summary>
        public readonly string? ValueType;

        [OutputConstructor]
        private GetOrganizationCustomPropertiesResult(
            ImmutableArray<string> allowedValues,

            string defaultValue,

            string description,

            string id,

            string propertyName,

            bool? required,

            string? valueType)
        {
            AllowedValues = allowedValues;
            DefaultValue = defaultValue;
            Description = description;
            Id = id;
            PropertyName = propertyName;
            Required = required;
            ValueType = valueType;
        }
    }
}
