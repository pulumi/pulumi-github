// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    public static class GetOrganizationRoleUsers
    {
        /// <summary>
        /// Lookup all users assigned to a custom organization role.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Github.GetOrganizationRoleUsers.Invoke(new()
        ///     {
        ///         RoleId = 1234,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Nested Schema for `Users`
        /// 
        /// ### Read-Only
        /// 
        /// - `UserId` (Number) The ID of the user.
        /// - `Login` (String) The login for the GitHub user account.
        /// </summary>
        public static Task<GetOrganizationRoleUsersResult> InvokeAsync(GetOrganizationRoleUsersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationRoleUsersResult>("github:index/getOrganizationRoleUsers:getOrganizationRoleUsers", args ?? new GetOrganizationRoleUsersArgs(), options.WithDefaults());

        /// <summary>
        /// Lookup all users assigned to a custom organization role.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Github.GetOrganizationRoleUsers.Invoke(new()
        ///     {
        ///         RoleId = 1234,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Nested Schema for `Users`
        /// 
        /// ### Read-Only
        /// 
        /// - `UserId` (Number) The ID of the user.
        /// - `Login` (String) The login for the GitHub user account.
        /// </summary>
        public static Output<GetOrganizationRoleUsersResult> Invoke(GetOrganizationRoleUsersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationRoleUsersResult>("github:index/getOrganizationRoleUsers:getOrganizationRoleUsers", args ?? new GetOrganizationRoleUsersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Lookup all users assigned to a custom organization role.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Github = Pulumi.Github;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Github.GetOrganizationRoleUsers.Invoke(new()
        ///     {
        ///         RoleId = 1234,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Nested Schema for `Users`
        /// 
        /// ### Read-Only
        /// 
        /// - `UserId` (Number) The ID of the user.
        /// - `Login` (String) The login for the GitHub user account.
        /// </summary>
        public static Output<GetOrganizationRoleUsersResult> Invoke(GetOrganizationRoleUsersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationRoleUsersResult>("github:index/getOrganizationRoleUsers:getOrganizationRoleUsers", args ?? new GetOrganizationRoleUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationRoleUsersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the organization role.
        /// </summary>
        [Input("roleId", required: true)]
        public int RoleId { get; set; }

        public GetOrganizationRoleUsersArgs()
        {
        }
        public static new GetOrganizationRoleUsersArgs Empty => new GetOrganizationRoleUsersArgs();
    }

    public sealed class GetOrganizationRoleUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the organization role.
        /// </summary>
        [Input("roleId", required: true)]
        public Input<int> RoleId { get; set; } = null!;

        public GetOrganizationRoleUsersInvokeArgs()
        {
        }
        public static new GetOrganizationRoleUsersInvokeArgs Empty => new GetOrganizationRoleUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationRoleUsersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the organization role.
        /// </summary>
        public readonly int RoleId;
        /// <summary>
        /// (Set of Object, see schema) Users assigned to the organization role.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationRoleUsersUserResult> Users;

        [OutputConstructor]
        private GetOrganizationRoleUsersResult(
            string id,

            int roleId,

            ImmutableArray<Outputs.GetOrganizationRoleUsersUserResult> users)
        {
            Id = id;
            RoleId = roleId;
            Users = users;
        }
    }
}
