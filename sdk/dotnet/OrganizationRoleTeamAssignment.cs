// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    /// <summary>
    /// This resource manages relationships between teams and organization roles
    /// in your GitHub organization. This works on predefined roles, and custom roles, where the latter is an Enterprise feature.
    /// 
    /// Creating this resource assigns the role to a team.
    /// 
    /// The organization role and team must both belong to the same organization
    /// on GitHub.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Github = Pulumi.Github;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test_team = new Github.Team("test-team", new()
    ///     {
    ///         Name = "test-team",
    ///     });
    /// 
    ///     var test_team_role_assignment = new Github.OrganizationRoleTeamAssignment("test-team-role-assignment", new()
    ///     {
    ///         TeamSlug = test_team.Slug,
    ///         RoleId = "8132",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// GitHub Team Organization Role Assignment can be imported using an ID made up of `team_slug:role_id`
    /// 
    /// ```sh
    /// $ pulumi import github:index/organizationRoleTeamAssignment:OrganizationRoleTeamAssignment role_assignment test-team:8132
    /// ```
    /// </summary>
    [GithubResourceType("github:index/organizationRoleTeamAssignment:OrganizationRoleTeamAssignment")]
    public partial class OrganizationRoleTeamAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The GitHub organization role id
        /// </summary>
        [Output("roleId")]
        public Output<string> RoleId { get; private set; } = null!;

        /// <summary>
        /// The GitHub team slug
        /// </summary>
        [Output("teamSlug")]
        public Output<string> TeamSlug { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationRoleTeamAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationRoleTeamAssignment(string name, OrganizationRoleTeamAssignmentArgs args, CustomResourceOptions? options = null)
            : base("github:index/organizationRoleTeamAssignment:OrganizationRoleTeamAssignment", name, args ?? new OrganizationRoleTeamAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationRoleTeamAssignment(string name, Input<string> id, OrganizationRoleTeamAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("github:index/organizationRoleTeamAssignment:OrganizationRoleTeamAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationRoleTeamAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationRoleTeamAssignment Get(string name, Input<string> id, OrganizationRoleTeamAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationRoleTeamAssignment(name, id, state, options);
        }
    }

    public sealed class OrganizationRoleTeamAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The GitHub organization role id
        /// </summary>
        [Input("roleId", required: true)]
        public Input<string> RoleId { get; set; } = null!;

        /// <summary>
        /// The GitHub team slug
        /// </summary>
        [Input("teamSlug", required: true)]
        public Input<string> TeamSlug { get; set; } = null!;

        public OrganizationRoleTeamAssignmentArgs()
        {
        }
        public static new OrganizationRoleTeamAssignmentArgs Empty => new OrganizationRoleTeamAssignmentArgs();
    }

    public sealed class OrganizationRoleTeamAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The GitHub organization role id
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        /// <summary>
        /// The GitHub team slug
        /// </summary>
        [Input("teamSlug")]
        public Input<string>? TeamSlug { get; set; }

        public OrganizationRoleTeamAssignmentState()
        {
        }
        public static new OrganizationRoleTeamAssignmentState Empty => new OrganizationRoleTeamAssignmentState();
    }
}
