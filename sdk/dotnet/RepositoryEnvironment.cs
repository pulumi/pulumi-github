// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    [GithubResourceType("github:index/repositoryEnvironment:RepositoryEnvironment")]
    public partial class RepositoryEnvironment : global::Pulumi.CustomResource
    {
        [Output("deploymentBranchPolicy")]
        public Output<Outputs.RepositoryEnvironmentDeploymentBranchPolicy?> DeploymentBranchPolicy { get; private set; } = null!;

        [Output("environment")]
        public Output<string> Environment { get; private set; } = null!;

        [Output("repository")]
        public Output<string> Repository { get; private set; } = null!;

        [Output("reviewers")]
        public Output<ImmutableArray<Outputs.RepositoryEnvironmentReviewer>> Reviewers { get; private set; } = null!;

        [Output("waitTimer")]
        public Output<int?> WaitTimer { get; private set; } = null!;


        /// <summary>
        /// Create a RepositoryEnvironment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RepositoryEnvironment(string name, RepositoryEnvironmentArgs args, CustomResourceOptions? options = null)
            : base("github:index/repositoryEnvironment:RepositoryEnvironment", name, args ?? new RepositoryEnvironmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RepositoryEnvironment(string name, Input<string> id, RepositoryEnvironmentState? state = null, CustomResourceOptions? options = null)
            : base("github:index/repositoryEnvironment:RepositoryEnvironment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RepositoryEnvironment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RepositoryEnvironment Get(string name, Input<string> id, RepositoryEnvironmentState? state = null, CustomResourceOptions? options = null)
        {
            return new RepositoryEnvironment(name, id, state, options);
        }
    }

    public sealed class RepositoryEnvironmentArgs : global::Pulumi.ResourceArgs
    {
        [Input("deploymentBranchPolicy")]
        public Input<Inputs.RepositoryEnvironmentDeploymentBranchPolicyArgs>? DeploymentBranchPolicy { get; set; }

        [Input("environment", required: true)]
        public Input<string> Environment { get; set; } = null!;

        [Input("repository", required: true)]
        public Input<string> Repository { get; set; } = null!;

        [Input("reviewers")]
        private InputList<Inputs.RepositoryEnvironmentReviewerArgs>? _reviewers;
        public InputList<Inputs.RepositoryEnvironmentReviewerArgs> Reviewers
        {
            get => _reviewers ?? (_reviewers = new InputList<Inputs.RepositoryEnvironmentReviewerArgs>());
            set => _reviewers = value;
        }

        [Input("waitTimer")]
        public Input<int>? WaitTimer { get; set; }

        public RepositoryEnvironmentArgs()
        {
        }
        public static new RepositoryEnvironmentArgs Empty => new RepositoryEnvironmentArgs();
    }

    public sealed class RepositoryEnvironmentState : global::Pulumi.ResourceArgs
    {
        [Input("deploymentBranchPolicy")]
        public Input<Inputs.RepositoryEnvironmentDeploymentBranchPolicyGetArgs>? DeploymentBranchPolicy { get; set; }

        [Input("environment")]
        public Input<string>? Environment { get; set; }

        [Input("repository")]
        public Input<string>? Repository { get; set; }

        [Input("reviewers")]
        private InputList<Inputs.RepositoryEnvironmentReviewerGetArgs>? _reviewers;
        public InputList<Inputs.RepositoryEnvironmentReviewerGetArgs> Reviewers
        {
            get => _reviewers ?? (_reviewers = new InputList<Inputs.RepositoryEnvironmentReviewerGetArgs>());
            set => _reviewers = value;
        }

        [Input("waitTimer")]
        public Input<int>? WaitTimer { get; set; }

        public RepositoryEnvironmentState()
        {
        }
        public static new RepositoryEnvironmentState Empty => new RepositoryEnvironmentState();
    }
}
