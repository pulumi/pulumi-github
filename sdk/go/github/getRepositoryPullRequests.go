// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupRepositoryPullRequests(ctx *pulumi.Context, args *LookupRepositoryPullRequestsArgs, opts ...pulumi.InvokeOption) (*LookupRepositoryPullRequestsResult, error) {
	var rv LookupRepositoryPullRequestsResult
	err := ctx.Invoke("github:index/getRepositoryPullRequests:getRepositoryPullRequests", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryPullRequests.
type LookupRepositoryPullRequestsArgs struct {
	BaseRef        *string `pulumi:"baseRef"`
	BaseRepository string  `pulumi:"baseRepository"`
	HeadRef        *string `pulumi:"headRef"`
	Owner          *string `pulumi:"owner"`
	SortBy         *string `pulumi:"sortBy"`
	SortDirection  *string `pulumi:"sortDirection"`
	State          *string `pulumi:"state"`
}

// A collection of values returned by getRepositoryPullRequests.
type LookupRepositoryPullRequestsResult struct {
	BaseRef        *string `pulumi:"baseRef"`
	BaseRepository string  `pulumi:"baseRepository"`
	HeadRef        *string `pulumi:"headRef"`
	// The provider-assigned unique ID for this managed resource.
	Id            string                            `pulumi:"id"`
	Owner         *string                           `pulumi:"owner"`
	Results       []GetRepositoryPullRequestsResult `pulumi:"results"`
	SortBy        *string                           `pulumi:"sortBy"`
	SortDirection *string                           `pulumi:"sortDirection"`
	State         *string                           `pulumi:"state"`
}

func LookupRepositoryPullRequestsOutput(ctx *pulumi.Context, args LookupRepositoryPullRequestsOutputArgs, opts ...pulumi.InvokeOption) LookupRepositoryPullRequestsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRepositoryPullRequestsResult, error) {
			args := v.(LookupRepositoryPullRequestsArgs)
			r, err := LookupRepositoryPullRequests(ctx, &args, opts...)
			var s LookupRepositoryPullRequestsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRepositoryPullRequestsResultOutput)
}

// A collection of arguments for invoking getRepositoryPullRequests.
type LookupRepositoryPullRequestsOutputArgs struct {
	BaseRef        pulumi.StringPtrInput `pulumi:"baseRef"`
	BaseRepository pulumi.StringInput    `pulumi:"baseRepository"`
	HeadRef        pulumi.StringPtrInput `pulumi:"headRef"`
	Owner          pulumi.StringPtrInput `pulumi:"owner"`
	SortBy         pulumi.StringPtrInput `pulumi:"sortBy"`
	SortDirection  pulumi.StringPtrInput `pulumi:"sortDirection"`
	State          pulumi.StringPtrInput `pulumi:"state"`
}

func (LookupRepositoryPullRequestsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRepositoryPullRequestsArgs)(nil)).Elem()
}

// A collection of values returned by getRepositoryPullRequests.
type LookupRepositoryPullRequestsResultOutput struct{ *pulumi.OutputState }

func (LookupRepositoryPullRequestsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRepositoryPullRequestsResult)(nil)).Elem()
}

func (o LookupRepositoryPullRequestsResultOutput) ToLookupRepositoryPullRequestsResultOutput() LookupRepositoryPullRequestsResultOutput {
	return o
}

func (o LookupRepositoryPullRequestsResultOutput) ToLookupRepositoryPullRequestsResultOutputWithContext(ctx context.Context) LookupRepositoryPullRequestsResultOutput {
	return o
}

func (o LookupRepositoryPullRequestsResultOutput) BaseRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryPullRequestsResult) *string { return v.BaseRef }).(pulumi.StringPtrOutput)
}

func (o LookupRepositoryPullRequestsResultOutput) BaseRepository() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryPullRequestsResult) string { return v.BaseRepository }).(pulumi.StringOutput)
}

func (o LookupRepositoryPullRequestsResultOutput) HeadRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryPullRequestsResult) *string { return v.HeadRef }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRepositoryPullRequestsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryPullRequestsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRepositoryPullRequestsResultOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryPullRequestsResult) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o LookupRepositoryPullRequestsResultOutput) Results() GetRepositoryPullRequestsResultArrayOutput {
	return o.ApplyT(func(v LookupRepositoryPullRequestsResult) []GetRepositoryPullRequestsResult { return v.Results }).(GetRepositoryPullRequestsResultArrayOutput)
}

func (o LookupRepositoryPullRequestsResultOutput) SortBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryPullRequestsResult) *string { return v.SortBy }).(pulumi.StringPtrOutput)
}

func (o LookupRepositoryPullRequestsResultOutput) SortDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryPullRequestsResult) *string { return v.SortDirection }).(pulumi.StringPtrOutput)
}

func (o LookupRepositoryPullRequestsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryPullRequestsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRepositoryPullRequestsResultOutput{})
}
