// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a GitHub team resource.
//
// This resource allows you to add/remove teams from your organization. When applied,
// a new team will be created. When destroyed, that team will be removed.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-github/sdk/go/github"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := github.NewTeam(ctx, "someTeam", &github.TeamArgs{
// 			Description: pulumi.String("Some cool team"),
// 			Privacy:     pulumi.String("closed"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type Team struct {
	pulumi.CustomResourceState

	// A description of the team.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	Etag        pulumi.StringOutput    `pulumi:"etag"`
	// The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise.
	LdapDn pulumi.StringPtrOutput `pulumi:"ldapDn"`
	// The name of the team.
	Name   pulumi.StringOutput `pulumi:"name"`
	NodeId pulumi.StringOutput `pulumi:"nodeId"`
	// The ID of the parent team, if this is a nested team.
	ParentTeamId pulumi.IntPtrOutput `pulumi:"parentTeamId"`
	// The level of privacy for the team. Must be one of `secret` or `closed`.
	// Defaults to `secret`.
	Privacy pulumi.StringPtrOutput `pulumi:"privacy"`
	// The slug of the created team, which may or may not differ from `name`,
	// depending on whether `name` contains "URL-unsafe" characters.
	// Useful when referencing the team in [`BranchProtection`](https://www.terraform.io/docs/providers/github/r/branch_protection.html).
	Slug pulumi.StringOutput `pulumi:"slug"`
}

// NewTeam registers a new resource with the given unique name, arguments, and options.
func NewTeam(ctx *pulumi.Context,
	name string, args *TeamArgs, opts ...pulumi.ResourceOption) (*Team, error) {
	if args == nil {
		args = &TeamArgs{}
	}
	var resource Team
	err := ctx.RegisterResource("github:index/team:Team", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTeam gets an existing Team resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTeam(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TeamState, opts ...pulumi.ResourceOption) (*Team, error) {
	var resource Team
	err := ctx.ReadResource("github:index/team:Team", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Team resources.
type teamState struct {
	// A description of the team.
	Description *string `pulumi:"description"`
	Etag        *string `pulumi:"etag"`
	// The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise.
	LdapDn *string `pulumi:"ldapDn"`
	// The name of the team.
	Name   *string `pulumi:"name"`
	NodeId *string `pulumi:"nodeId"`
	// The ID of the parent team, if this is a nested team.
	ParentTeamId *int `pulumi:"parentTeamId"`
	// The level of privacy for the team. Must be one of `secret` or `closed`.
	// Defaults to `secret`.
	Privacy *string `pulumi:"privacy"`
	// The slug of the created team, which may or may not differ from `name`,
	// depending on whether `name` contains "URL-unsafe" characters.
	// Useful when referencing the team in [`BranchProtection`](https://www.terraform.io/docs/providers/github/r/branch_protection.html).
	Slug *string `pulumi:"slug"`
}

type TeamState struct {
	// A description of the team.
	Description pulumi.StringPtrInput
	Etag        pulumi.StringPtrInput
	// The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise.
	LdapDn pulumi.StringPtrInput
	// The name of the team.
	Name   pulumi.StringPtrInput
	NodeId pulumi.StringPtrInput
	// The ID of the parent team, if this is a nested team.
	ParentTeamId pulumi.IntPtrInput
	// The level of privacy for the team. Must be one of `secret` or `closed`.
	// Defaults to `secret`.
	Privacy pulumi.StringPtrInput
	// The slug of the created team, which may or may not differ from `name`,
	// depending on whether `name` contains "URL-unsafe" characters.
	// Useful when referencing the team in [`BranchProtection`](https://www.terraform.io/docs/providers/github/r/branch_protection.html).
	Slug pulumi.StringPtrInput
}

func (TeamState) ElementType() reflect.Type {
	return reflect.TypeOf((*teamState)(nil)).Elem()
}

type teamArgs struct {
	// A description of the team.
	Description *string `pulumi:"description"`
	// The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise.
	LdapDn *string `pulumi:"ldapDn"`
	// The name of the team.
	Name *string `pulumi:"name"`
	// The ID of the parent team, if this is a nested team.
	ParentTeamId *int `pulumi:"parentTeamId"`
	// The level of privacy for the team. Must be one of `secret` or `closed`.
	// Defaults to `secret`.
	Privacy *string `pulumi:"privacy"`
}

// The set of arguments for constructing a Team resource.
type TeamArgs struct {
	// A description of the team.
	Description pulumi.StringPtrInput
	// The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise.
	LdapDn pulumi.StringPtrInput
	// The name of the team.
	Name pulumi.StringPtrInput
	// The ID of the parent team, if this is a nested team.
	ParentTeamId pulumi.IntPtrInput
	// The level of privacy for the team. Must be one of `secret` or `closed`.
	// Defaults to `secret`.
	Privacy pulumi.StringPtrInput
}

func (TeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*teamArgs)(nil)).Elem()
}
