// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupRepositoryFile(ctx *pulumi.Context, args *LookupRepositoryFileArgs, opts ...pulumi.InvokeOption) (*LookupRepositoryFileResult, error) {
	var rv LookupRepositoryFileResult
	err := ctx.Invoke("github:index/getRepositoryFile:getRepositoryFile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryFile.
type LookupRepositoryFileArgs struct {
	Branch     *string `pulumi:"branch"`
	File       string  `pulumi:"file"`
	Repository string  `pulumi:"repository"`
}

// A collection of values returned by getRepositoryFile.
type LookupRepositoryFileResult struct {
	Branch        *string `pulumi:"branch"`
	CommitAuthor  string  `pulumi:"commitAuthor"`
	CommitEmail   string  `pulumi:"commitEmail"`
	CommitMessage string  `pulumi:"commitMessage"`
	CommitSha     string  `pulumi:"commitSha"`
	Content       string  `pulumi:"content"`
	File          string  `pulumi:"file"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Repository string `pulumi:"repository"`
	Sha        string `pulumi:"sha"`
}

func LookupRepositoryFileOutput(ctx *pulumi.Context, args LookupRepositoryFileOutputArgs, opts ...pulumi.InvokeOption) LookupRepositoryFileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRepositoryFileResult, error) {
			args := v.(LookupRepositoryFileArgs)
			r, err := LookupRepositoryFile(ctx, &args, opts...)
			var s LookupRepositoryFileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRepositoryFileResultOutput)
}

// A collection of arguments for invoking getRepositoryFile.
type LookupRepositoryFileOutputArgs struct {
	Branch     pulumi.StringPtrInput `pulumi:"branch"`
	File       pulumi.StringInput    `pulumi:"file"`
	Repository pulumi.StringInput    `pulumi:"repository"`
}

func (LookupRepositoryFileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRepositoryFileArgs)(nil)).Elem()
}

// A collection of values returned by getRepositoryFile.
type LookupRepositoryFileResultOutput struct{ *pulumi.OutputState }

func (LookupRepositoryFileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRepositoryFileResult)(nil)).Elem()
}

func (o LookupRepositoryFileResultOutput) ToLookupRepositoryFileResultOutput() LookupRepositoryFileResultOutput {
	return o
}

func (o LookupRepositoryFileResultOutput) ToLookupRepositoryFileResultOutputWithContext(ctx context.Context) LookupRepositoryFileResultOutput {
	return o
}

func (o LookupRepositoryFileResultOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryFileResult) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o LookupRepositoryFileResultOutput) CommitAuthor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryFileResult) string { return v.CommitAuthor }).(pulumi.StringOutput)
}

func (o LookupRepositoryFileResultOutput) CommitEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryFileResult) string { return v.CommitEmail }).(pulumi.StringOutput)
}

func (o LookupRepositoryFileResultOutput) CommitMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryFileResult) string { return v.CommitMessage }).(pulumi.StringOutput)
}

func (o LookupRepositoryFileResultOutput) CommitSha() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryFileResult) string { return v.CommitSha }).(pulumi.StringOutput)
}

func (o LookupRepositoryFileResultOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryFileResult) string { return v.Content }).(pulumi.StringOutput)
}

func (o LookupRepositoryFileResultOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryFileResult) string { return v.File }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRepositoryFileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryFileResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRepositoryFileResultOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryFileResult) string { return v.Repository }).(pulumi.StringOutput)
}

func (o LookupRepositoryFileResultOutput) Sha() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryFileResult) string { return v.Sha }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRepositoryFileResultOutput{})
}
