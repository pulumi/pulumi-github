// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Use this data source to find out if a user is a member of your organization, as well
// as what role they have within it.
// If the user's membership in the organization is pending their acceptance of an invite,
// the role they would have once they accept will be returned.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-github/sdk/go/github"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := github.LookupMembership(ctx, &github.LookupMembershipArgs{
// 			Username: "SomeUser",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupMembership(ctx *pulumi.Context, args *LookupMembershipArgs, opts ...pulumi.InvokeOption) (*LookupMembershipResult, error) {
	var rv LookupMembershipResult
	err := ctx.Invoke("github:index/getMembership:getMembership", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMembership.
type LookupMembershipArgs struct {
	// The username to lookup in the organization.
	Username string `pulumi:"username"`
}

// A collection of values returned by getMembership.
type LookupMembershipResult struct {
	// An etag representing the membership object.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// `admin` or `member` -- the role the user has within the organization.
	Role string `pulumi:"role"`
	// The username.
	Username string `pulumi:"username"`
}
