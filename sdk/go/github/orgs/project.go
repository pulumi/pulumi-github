// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package orgs

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// This resource allows you to create and manage projects for GitHub organization.
type Project struct {
	s *pulumi.ResourceState
}

// NewProject registers a new resource with the given unique name, arguments, and options.
func NewProject(ctx *pulumi.Context,
	name string, args *ProjectArgs, opts ...pulumi.ResourceOpt) (*Project, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["body"] = nil
		inputs["name"] = nil
	} else {
		inputs["body"] = args.Body
		inputs["name"] = args.Name
	}
	inputs["etag"] = nil
	inputs["url"] = nil
	s, err := ctx.RegisterResource("github:orgs/project:Project", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Project{s: s}, nil
}

// GetProject gets an existing Project resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProject(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ProjectState, opts ...pulumi.ResourceOpt) (*Project, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["body"] = state.Body
		inputs["etag"] = state.Etag
		inputs["name"] = state.Name
		inputs["url"] = state.Url
	}
	s, err := ctx.ReadResource("github:orgs/project:Project", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Project{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Project) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Project) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The body of the project.
func (r *Project) Body() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["body"])
}

func (r *Project) Etag() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["etag"])
}

// The name of the project.
func (r *Project) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// URL of the project
func (r *Project) Url() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["url"])
}

// Input properties used for looking up and filtering Project resources.
type ProjectState struct {
	// The body of the project.
	Body interface{}
	Etag interface{}
	// The name of the project.
	Name interface{}
	// URL of the project
	Url interface{}
}

// The set of arguments for constructing a Project resource.
type ProjectArgs struct {
	// The body of the project.
	Body interface{}
	// The name of the project.
	Name interface{}
}
