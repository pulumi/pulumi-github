// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package orgs

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// This resource allows you to create and manage blocks for GitHub organizations.
type Block struct {
	s *pulumi.ResourceState
}

// NewBlock registers a new resource with the given unique name, arguments, and options.
func NewBlock(ctx *pulumi.Context,
	name string, args *BlockArgs, opts ...pulumi.ResourceOpt) (*Block, error) {
	if args == nil || args.Username == nil {
		return nil, errors.New("missing required argument 'Username'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["username"] = nil
	} else {
		inputs["username"] = args.Username
	}
	inputs["etag"] = nil
	s, err := ctx.RegisterResource("github:orgs/block:Block", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Block{s: s}, nil
}

// GetBlock gets an existing Block resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBlock(ctx *pulumi.Context,
	name string, id pulumi.ID, state *BlockState, opts ...pulumi.ResourceOpt) (*Block, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["etag"] = state.Etag
		inputs["username"] = state.Username
	}
	s, err := ctx.ReadResource("github:orgs/block:Block", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Block{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Block) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Block) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *Block) Etag() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["etag"])
}

// The name of the user to block.
func (r *Block) Username() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["username"])
}

// Input properties used for looking up and filtering Block resources.
type BlockState struct {
	Etag interface{}
	// The name of the user to block.
	Username interface{}
}

// The set of arguments for constructing a Block resource.
type BlockArgs struct {
	// The name of the user to block.
	Username interface{}
}
