// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-github/sdk/v5/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve a specific organization member's SAML or SCIM user
// attributes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-github/sdk/v5/go/github"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := github.GetUserExternalIdentity(ctx, &github.GetUserExternalIdentityArgs{
//				Username: "example-user",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserExternalIdentity(ctx *pulumi.Context, args *GetUserExternalIdentityArgs, opts ...pulumi.InvokeOption) (*GetUserExternalIdentityResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserExternalIdentityResult
	err := ctx.Invoke("github:index/getUserExternalIdentity:getUserExternalIdentity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserExternalIdentity.
type GetUserExternalIdentityArgs struct {
	// The username of the member to fetch external identity for.
	Username string `pulumi:"username"`
}

// A collection of values returned by getUserExternalIdentity.
type GetUserExternalIdentityResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The username of the GitHub user
	Login string `pulumi:"login"`
	// An Object containing the user's SAML data. This object will
	// be empty if the user is not managed by SAML.
	SamlIdentity map[string]string `pulumi:"samlIdentity"`
	// An Object contining the user's SCIM data. This object will
	// be empty if the user is not managed by SCIM.
	ScimIdentity map[string]string `pulumi:"scimIdentity"`
	// The member's SAML Username
	Username string `pulumi:"username"`
}

func GetUserExternalIdentityOutput(ctx *pulumi.Context, args GetUserExternalIdentityOutputArgs, opts ...pulumi.InvokeOption) GetUserExternalIdentityResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUserExternalIdentityResult, error) {
			args := v.(GetUserExternalIdentityArgs)
			r, err := GetUserExternalIdentity(ctx, &args, opts...)
			var s GetUserExternalIdentityResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUserExternalIdentityResultOutput)
}

// A collection of arguments for invoking getUserExternalIdentity.
type GetUserExternalIdentityOutputArgs struct {
	// The username of the member to fetch external identity for.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetUserExternalIdentityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserExternalIdentityArgs)(nil)).Elem()
}

// A collection of values returned by getUserExternalIdentity.
type GetUserExternalIdentityResultOutput struct{ *pulumi.OutputState }

func (GetUserExternalIdentityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserExternalIdentityResult)(nil)).Elem()
}

func (o GetUserExternalIdentityResultOutput) ToGetUserExternalIdentityResultOutput() GetUserExternalIdentityResultOutput {
	return o
}

func (o GetUserExternalIdentityResultOutput) ToGetUserExternalIdentityResultOutputWithContext(ctx context.Context) GetUserExternalIdentityResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserExternalIdentityResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserExternalIdentityResult) string { return v.Id }).(pulumi.StringOutput)
}

// The username of the GitHub user
func (o GetUserExternalIdentityResultOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserExternalIdentityResult) string { return v.Login }).(pulumi.StringOutput)
}

// An Object containing the user's SAML data. This object will
// be empty if the user is not managed by SAML.
func (o GetUserExternalIdentityResultOutput) SamlIdentity() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserExternalIdentityResult) map[string]string { return v.SamlIdentity }).(pulumi.StringMapOutput)
}

// An Object contining the user's SCIM data. This object will
// be empty if the user is not managed by SCIM.
func (o GetUserExternalIdentityResultOutput) ScimIdentity() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserExternalIdentityResult) map[string]string { return v.ScimIdentity }).(pulumi.StringMapOutput)
}

// The member's SAML Username
func (o GetUserExternalIdentityResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserExternalIdentityResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserExternalIdentityResultOutput{})
}
