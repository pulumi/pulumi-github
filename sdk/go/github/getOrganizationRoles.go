// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-github/sdk/v6/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lookup all custom roles in an organization.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-github/sdk/v6/go/github"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := github.GetOrganizationRoles(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Nested Schema for `roles`
//
// ### Read-Only
//
// - `roleId` (Number) The ID of the organization role.
// - `name` (String) The name of the organization role.
// - `description` (String) The description of the organization role.
// - `source` (String) The source of this role; one of `Predefined`, `Organization`, or `Enterprise`.
// - `baseRole` (String) The system role from which this role inherits permissions.
// - `permissions` (Set of String) The permissions included in this role.
func GetOrganizationRoles(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetOrganizationRolesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrganizationRolesResult
	err := ctx.Invoke("github:index/getOrganizationRoles:getOrganizationRoles", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getOrganizationRoles.
type GetOrganizationRolesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Set of Object, see schema) Available organization roles.
	Roles []GetOrganizationRolesRole `pulumi:"roles"`
}

func GetOrganizationRolesOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetOrganizationRolesResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetOrganizationRolesResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("github:index/getOrganizationRoles:getOrganizationRoles", nil, GetOrganizationRolesResultOutput{}, options).(GetOrganizationRolesResultOutput), nil
	}).(GetOrganizationRolesResultOutput)
}

// A collection of values returned by getOrganizationRoles.
type GetOrganizationRolesResultOutput struct{ *pulumi.OutputState }

func (GetOrganizationRolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRolesResult)(nil)).Elem()
}

func (o GetOrganizationRolesResultOutput) ToGetOrganizationRolesResultOutput() GetOrganizationRolesResultOutput {
	return o
}

func (o GetOrganizationRolesResultOutput) ToGetOrganizationRolesResultOutputWithContext(ctx context.Context) GetOrganizationRolesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrganizationRolesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRolesResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Set of Object, see schema) Available organization roles.
func (o GetOrganizationRolesResultOutput) Roles() GetOrganizationRolesRoleArrayOutput {
	return o.ApplyT(func(v GetOrganizationRolesResult) []GetOrganizationRolesRole { return v.Roles }).(GetOrganizationRolesRoleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrganizationRolesResultOutput{})
}
