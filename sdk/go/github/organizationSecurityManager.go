// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-github/sdk/v6/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-github/sdk/v6/go/github"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			someTeam, err := github.NewTeam(ctx, "some_team", &github.TeamArgs{
//				Name:        pulumi.String("SomeTeam"),
//				Description: pulumi.String("Some cool team"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = github.NewOrganizationSecurityManager(ctx, "some_team", &github.OrganizationSecurityManagerArgs{
//				TeamSlug: someTeam.Slug,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// GitHub Security Manager Teams can be imported using the GitHub team ID e.g.
//
// ```sh
// $ pulumi import github:index/organizationSecurityManager:OrganizationSecurityManager core 1234567
// ```
type OrganizationSecurityManager struct {
	pulumi.CustomResourceState

	// The slug of the team to manage.
	TeamSlug pulumi.StringOutput `pulumi:"teamSlug"`
}

// NewOrganizationSecurityManager registers a new resource with the given unique name, arguments, and options.
func NewOrganizationSecurityManager(ctx *pulumi.Context,
	name string, args *OrganizationSecurityManagerArgs, opts ...pulumi.ResourceOption) (*OrganizationSecurityManager, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TeamSlug == nil {
		return nil, errors.New("invalid value for required argument 'TeamSlug'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationSecurityManager
	err := ctx.RegisterResource("github:index/organizationSecurityManager:OrganizationSecurityManager", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationSecurityManager gets an existing OrganizationSecurityManager resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationSecurityManager(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationSecurityManagerState, opts ...pulumi.ResourceOption) (*OrganizationSecurityManager, error) {
	var resource OrganizationSecurityManager
	err := ctx.ReadResource("github:index/organizationSecurityManager:OrganizationSecurityManager", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationSecurityManager resources.
type organizationSecurityManagerState struct {
	// The slug of the team to manage.
	TeamSlug *string `pulumi:"teamSlug"`
}

type OrganizationSecurityManagerState struct {
	// The slug of the team to manage.
	TeamSlug pulumi.StringPtrInput
}

func (OrganizationSecurityManagerState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSecurityManagerState)(nil)).Elem()
}

type organizationSecurityManagerArgs struct {
	// The slug of the team to manage.
	TeamSlug string `pulumi:"teamSlug"`
}

// The set of arguments for constructing a OrganizationSecurityManager resource.
type OrganizationSecurityManagerArgs struct {
	// The slug of the team to manage.
	TeamSlug pulumi.StringInput
}

func (OrganizationSecurityManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSecurityManagerArgs)(nil)).Elem()
}

type OrganizationSecurityManagerInput interface {
	pulumi.Input

	ToOrganizationSecurityManagerOutput() OrganizationSecurityManagerOutput
	ToOrganizationSecurityManagerOutputWithContext(ctx context.Context) OrganizationSecurityManagerOutput
}

func (*OrganizationSecurityManager) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationSecurityManager)(nil)).Elem()
}

func (i *OrganizationSecurityManager) ToOrganizationSecurityManagerOutput() OrganizationSecurityManagerOutput {
	return i.ToOrganizationSecurityManagerOutputWithContext(context.Background())
}

func (i *OrganizationSecurityManager) ToOrganizationSecurityManagerOutputWithContext(ctx context.Context) OrganizationSecurityManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSecurityManagerOutput)
}

// OrganizationSecurityManagerArrayInput is an input type that accepts OrganizationSecurityManagerArray and OrganizationSecurityManagerArrayOutput values.
// You can construct a concrete instance of `OrganizationSecurityManagerArrayInput` via:
//
//	OrganizationSecurityManagerArray{ OrganizationSecurityManagerArgs{...} }
type OrganizationSecurityManagerArrayInput interface {
	pulumi.Input

	ToOrganizationSecurityManagerArrayOutput() OrganizationSecurityManagerArrayOutput
	ToOrganizationSecurityManagerArrayOutputWithContext(context.Context) OrganizationSecurityManagerArrayOutput
}

type OrganizationSecurityManagerArray []OrganizationSecurityManagerInput

func (OrganizationSecurityManagerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationSecurityManager)(nil)).Elem()
}

func (i OrganizationSecurityManagerArray) ToOrganizationSecurityManagerArrayOutput() OrganizationSecurityManagerArrayOutput {
	return i.ToOrganizationSecurityManagerArrayOutputWithContext(context.Background())
}

func (i OrganizationSecurityManagerArray) ToOrganizationSecurityManagerArrayOutputWithContext(ctx context.Context) OrganizationSecurityManagerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSecurityManagerArrayOutput)
}

// OrganizationSecurityManagerMapInput is an input type that accepts OrganizationSecurityManagerMap and OrganizationSecurityManagerMapOutput values.
// You can construct a concrete instance of `OrganizationSecurityManagerMapInput` via:
//
//	OrganizationSecurityManagerMap{ "key": OrganizationSecurityManagerArgs{...} }
type OrganizationSecurityManagerMapInput interface {
	pulumi.Input

	ToOrganizationSecurityManagerMapOutput() OrganizationSecurityManagerMapOutput
	ToOrganizationSecurityManagerMapOutputWithContext(context.Context) OrganizationSecurityManagerMapOutput
}

type OrganizationSecurityManagerMap map[string]OrganizationSecurityManagerInput

func (OrganizationSecurityManagerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationSecurityManager)(nil)).Elem()
}

func (i OrganizationSecurityManagerMap) ToOrganizationSecurityManagerMapOutput() OrganizationSecurityManagerMapOutput {
	return i.ToOrganizationSecurityManagerMapOutputWithContext(context.Background())
}

func (i OrganizationSecurityManagerMap) ToOrganizationSecurityManagerMapOutputWithContext(ctx context.Context) OrganizationSecurityManagerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSecurityManagerMapOutput)
}

type OrganizationSecurityManagerOutput struct{ *pulumi.OutputState }

func (OrganizationSecurityManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationSecurityManager)(nil)).Elem()
}

func (o OrganizationSecurityManagerOutput) ToOrganizationSecurityManagerOutput() OrganizationSecurityManagerOutput {
	return o
}

func (o OrganizationSecurityManagerOutput) ToOrganizationSecurityManagerOutputWithContext(ctx context.Context) OrganizationSecurityManagerOutput {
	return o
}

// The slug of the team to manage.
func (o OrganizationSecurityManagerOutput) TeamSlug() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationSecurityManager) pulumi.StringOutput { return v.TeamSlug }).(pulumi.StringOutput)
}

type OrganizationSecurityManagerArrayOutput struct{ *pulumi.OutputState }

func (OrganizationSecurityManagerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationSecurityManager)(nil)).Elem()
}

func (o OrganizationSecurityManagerArrayOutput) ToOrganizationSecurityManagerArrayOutput() OrganizationSecurityManagerArrayOutput {
	return o
}

func (o OrganizationSecurityManagerArrayOutput) ToOrganizationSecurityManagerArrayOutputWithContext(ctx context.Context) OrganizationSecurityManagerArrayOutput {
	return o
}

func (o OrganizationSecurityManagerArrayOutput) Index(i pulumi.IntInput) OrganizationSecurityManagerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationSecurityManager {
		return vs[0].([]*OrganizationSecurityManager)[vs[1].(int)]
	}).(OrganizationSecurityManagerOutput)
}

type OrganizationSecurityManagerMapOutput struct{ *pulumi.OutputState }

func (OrganizationSecurityManagerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationSecurityManager)(nil)).Elem()
}

func (o OrganizationSecurityManagerMapOutput) ToOrganizationSecurityManagerMapOutput() OrganizationSecurityManagerMapOutput {
	return o
}

func (o OrganizationSecurityManagerMapOutput) ToOrganizationSecurityManagerMapOutputWithContext(ctx context.Context) OrganizationSecurityManagerMapOutput {
	return o
}

func (o OrganizationSecurityManagerMapOutput) MapIndex(k pulumi.StringInput) OrganizationSecurityManagerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationSecurityManager {
		return vs[0].(map[string]*OrganizationSecurityManager)[vs[1].(string)]
	}).(OrganizationSecurityManagerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSecurityManagerInput)(nil)).Elem(), &OrganizationSecurityManager{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSecurityManagerArrayInput)(nil)).Elem(), OrganizationSecurityManagerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSecurityManagerMapInput)(nil)).Elem(), OrganizationSecurityManagerMap{})
	pulumi.RegisterOutputType(OrganizationSecurityManagerOutput{})
	pulumi.RegisterOutputType(OrganizationSecurityManagerArrayOutput{})
	pulumi.RegisterOutputType(OrganizationSecurityManagerMapOutput{})
}
