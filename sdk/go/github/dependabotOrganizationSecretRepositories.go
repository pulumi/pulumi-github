// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-github/sdk/v5/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DependabotOrganizationSecretRepositories struct {
	pulumi.CustomResourceState

	// Name of the existing secret.
	SecretName pulumi.StringOutput `pulumi:"secretName"`
	// An array of repository ids that can access the organization secret.
	SelectedRepositoryIds pulumi.IntArrayOutput `pulumi:"selectedRepositoryIds"`
}

// NewDependabotOrganizationSecretRepositories registers a new resource with the given unique name, arguments, and options.
func NewDependabotOrganizationSecretRepositories(ctx *pulumi.Context,
	name string, args *DependabotOrganizationSecretRepositoriesArgs, opts ...pulumi.ResourceOption) (*DependabotOrganizationSecretRepositories, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecretName == nil {
		return nil, errors.New("invalid value for required argument 'SecretName'")
	}
	if args.SelectedRepositoryIds == nil {
		return nil, errors.New("invalid value for required argument 'SelectedRepositoryIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DependabotOrganizationSecretRepositories
	err := ctx.RegisterResource("github:index/dependabotOrganizationSecretRepositories:DependabotOrganizationSecretRepositories", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDependabotOrganizationSecretRepositories gets an existing DependabotOrganizationSecretRepositories resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDependabotOrganizationSecretRepositories(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DependabotOrganizationSecretRepositoriesState, opts ...pulumi.ResourceOption) (*DependabotOrganizationSecretRepositories, error) {
	var resource DependabotOrganizationSecretRepositories
	err := ctx.ReadResource("github:index/dependabotOrganizationSecretRepositories:DependabotOrganizationSecretRepositories", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DependabotOrganizationSecretRepositories resources.
type dependabotOrganizationSecretRepositoriesState struct {
	// Name of the existing secret.
	SecretName *string `pulumi:"secretName"`
	// An array of repository ids that can access the organization secret.
	SelectedRepositoryIds []int `pulumi:"selectedRepositoryIds"`
}

type DependabotOrganizationSecretRepositoriesState struct {
	// Name of the existing secret.
	SecretName pulumi.StringPtrInput
	// An array of repository ids that can access the organization secret.
	SelectedRepositoryIds pulumi.IntArrayInput
}

func (DependabotOrganizationSecretRepositoriesState) ElementType() reflect.Type {
	return reflect.TypeOf((*dependabotOrganizationSecretRepositoriesState)(nil)).Elem()
}

type dependabotOrganizationSecretRepositoriesArgs struct {
	// Name of the existing secret.
	SecretName string `pulumi:"secretName"`
	// An array of repository ids that can access the organization secret.
	SelectedRepositoryIds []int `pulumi:"selectedRepositoryIds"`
}

// The set of arguments for constructing a DependabotOrganizationSecretRepositories resource.
type DependabotOrganizationSecretRepositoriesArgs struct {
	// Name of the existing secret.
	SecretName pulumi.StringInput
	// An array of repository ids that can access the organization secret.
	SelectedRepositoryIds pulumi.IntArrayInput
}

func (DependabotOrganizationSecretRepositoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dependabotOrganizationSecretRepositoriesArgs)(nil)).Elem()
}

type DependabotOrganizationSecretRepositoriesInput interface {
	pulumi.Input

	ToDependabotOrganizationSecretRepositoriesOutput() DependabotOrganizationSecretRepositoriesOutput
	ToDependabotOrganizationSecretRepositoriesOutputWithContext(ctx context.Context) DependabotOrganizationSecretRepositoriesOutput
}

func (*DependabotOrganizationSecretRepositories) ElementType() reflect.Type {
	return reflect.TypeOf((**DependabotOrganizationSecretRepositories)(nil)).Elem()
}

func (i *DependabotOrganizationSecretRepositories) ToDependabotOrganizationSecretRepositoriesOutput() DependabotOrganizationSecretRepositoriesOutput {
	return i.ToDependabotOrganizationSecretRepositoriesOutputWithContext(context.Background())
}

func (i *DependabotOrganizationSecretRepositories) ToDependabotOrganizationSecretRepositoriesOutputWithContext(ctx context.Context) DependabotOrganizationSecretRepositoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DependabotOrganizationSecretRepositoriesOutput)
}

// DependabotOrganizationSecretRepositoriesArrayInput is an input type that accepts DependabotOrganizationSecretRepositoriesArray and DependabotOrganizationSecretRepositoriesArrayOutput values.
// You can construct a concrete instance of `DependabotOrganizationSecretRepositoriesArrayInput` via:
//
//	DependabotOrganizationSecretRepositoriesArray{ DependabotOrganizationSecretRepositoriesArgs{...} }
type DependabotOrganizationSecretRepositoriesArrayInput interface {
	pulumi.Input

	ToDependabotOrganizationSecretRepositoriesArrayOutput() DependabotOrganizationSecretRepositoriesArrayOutput
	ToDependabotOrganizationSecretRepositoriesArrayOutputWithContext(context.Context) DependabotOrganizationSecretRepositoriesArrayOutput
}

type DependabotOrganizationSecretRepositoriesArray []DependabotOrganizationSecretRepositoriesInput

func (DependabotOrganizationSecretRepositoriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DependabotOrganizationSecretRepositories)(nil)).Elem()
}

func (i DependabotOrganizationSecretRepositoriesArray) ToDependabotOrganizationSecretRepositoriesArrayOutput() DependabotOrganizationSecretRepositoriesArrayOutput {
	return i.ToDependabotOrganizationSecretRepositoriesArrayOutputWithContext(context.Background())
}

func (i DependabotOrganizationSecretRepositoriesArray) ToDependabotOrganizationSecretRepositoriesArrayOutputWithContext(ctx context.Context) DependabotOrganizationSecretRepositoriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DependabotOrganizationSecretRepositoriesArrayOutput)
}

// DependabotOrganizationSecretRepositoriesMapInput is an input type that accepts DependabotOrganizationSecretRepositoriesMap and DependabotOrganizationSecretRepositoriesMapOutput values.
// You can construct a concrete instance of `DependabotOrganizationSecretRepositoriesMapInput` via:
//
//	DependabotOrganizationSecretRepositoriesMap{ "key": DependabotOrganizationSecretRepositoriesArgs{...} }
type DependabotOrganizationSecretRepositoriesMapInput interface {
	pulumi.Input

	ToDependabotOrganizationSecretRepositoriesMapOutput() DependabotOrganizationSecretRepositoriesMapOutput
	ToDependabotOrganizationSecretRepositoriesMapOutputWithContext(context.Context) DependabotOrganizationSecretRepositoriesMapOutput
}

type DependabotOrganizationSecretRepositoriesMap map[string]DependabotOrganizationSecretRepositoriesInput

func (DependabotOrganizationSecretRepositoriesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DependabotOrganizationSecretRepositories)(nil)).Elem()
}

func (i DependabotOrganizationSecretRepositoriesMap) ToDependabotOrganizationSecretRepositoriesMapOutput() DependabotOrganizationSecretRepositoriesMapOutput {
	return i.ToDependabotOrganizationSecretRepositoriesMapOutputWithContext(context.Background())
}

func (i DependabotOrganizationSecretRepositoriesMap) ToDependabotOrganizationSecretRepositoriesMapOutputWithContext(ctx context.Context) DependabotOrganizationSecretRepositoriesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DependabotOrganizationSecretRepositoriesMapOutput)
}

type DependabotOrganizationSecretRepositoriesOutput struct{ *pulumi.OutputState }

func (DependabotOrganizationSecretRepositoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DependabotOrganizationSecretRepositories)(nil)).Elem()
}

func (o DependabotOrganizationSecretRepositoriesOutput) ToDependabotOrganizationSecretRepositoriesOutput() DependabotOrganizationSecretRepositoriesOutput {
	return o
}

func (o DependabotOrganizationSecretRepositoriesOutput) ToDependabotOrganizationSecretRepositoriesOutputWithContext(ctx context.Context) DependabotOrganizationSecretRepositoriesOutput {
	return o
}

// Name of the existing secret.
func (o DependabotOrganizationSecretRepositoriesOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v *DependabotOrganizationSecretRepositories) pulumi.StringOutput { return v.SecretName }).(pulumi.StringOutput)
}

// An array of repository ids that can access the organization secret.
func (o DependabotOrganizationSecretRepositoriesOutput) SelectedRepositoryIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *DependabotOrganizationSecretRepositories) pulumi.IntArrayOutput {
		return v.SelectedRepositoryIds
	}).(pulumi.IntArrayOutput)
}

type DependabotOrganizationSecretRepositoriesArrayOutput struct{ *pulumi.OutputState }

func (DependabotOrganizationSecretRepositoriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DependabotOrganizationSecretRepositories)(nil)).Elem()
}

func (o DependabotOrganizationSecretRepositoriesArrayOutput) ToDependabotOrganizationSecretRepositoriesArrayOutput() DependabotOrganizationSecretRepositoriesArrayOutput {
	return o
}

func (o DependabotOrganizationSecretRepositoriesArrayOutput) ToDependabotOrganizationSecretRepositoriesArrayOutputWithContext(ctx context.Context) DependabotOrganizationSecretRepositoriesArrayOutput {
	return o
}

func (o DependabotOrganizationSecretRepositoriesArrayOutput) Index(i pulumi.IntInput) DependabotOrganizationSecretRepositoriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DependabotOrganizationSecretRepositories {
		return vs[0].([]*DependabotOrganizationSecretRepositories)[vs[1].(int)]
	}).(DependabotOrganizationSecretRepositoriesOutput)
}

type DependabotOrganizationSecretRepositoriesMapOutput struct{ *pulumi.OutputState }

func (DependabotOrganizationSecretRepositoriesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DependabotOrganizationSecretRepositories)(nil)).Elem()
}

func (o DependabotOrganizationSecretRepositoriesMapOutput) ToDependabotOrganizationSecretRepositoriesMapOutput() DependabotOrganizationSecretRepositoriesMapOutput {
	return o
}

func (o DependabotOrganizationSecretRepositoriesMapOutput) ToDependabotOrganizationSecretRepositoriesMapOutputWithContext(ctx context.Context) DependabotOrganizationSecretRepositoriesMapOutput {
	return o
}

func (o DependabotOrganizationSecretRepositoriesMapOutput) MapIndex(k pulumi.StringInput) DependabotOrganizationSecretRepositoriesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DependabotOrganizationSecretRepositories {
		return vs[0].(map[string]*DependabotOrganizationSecretRepositories)[vs[1].(string)]
	}).(DependabotOrganizationSecretRepositoriesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DependabotOrganizationSecretRepositoriesInput)(nil)).Elem(), &DependabotOrganizationSecretRepositories{})
	pulumi.RegisterInputType(reflect.TypeOf((*DependabotOrganizationSecretRepositoriesArrayInput)(nil)).Elem(), DependabotOrganizationSecretRepositoriesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DependabotOrganizationSecretRepositoriesMapInput)(nil)).Elem(), DependabotOrganizationSecretRepositoriesMap{})
	pulumi.RegisterOutputType(DependabotOrganizationSecretRepositoriesOutput{})
	pulumi.RegisterOutputType(DependabotOrganizationSecretRepositoriesArrayOutput{})
	pulumi.RegisterOutputType(DependabotOrganizationSecretRepositoriesMapOutput{})
}
