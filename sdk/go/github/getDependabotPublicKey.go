// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-github/sdk/v6/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about a GitHub Dependabot public key. This data source is required to be used with other GitHub secrets interactions.
// Note that the provider `token` must have admin rights to a repository to retrieve it's Dependabot public key.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-github/sdk/v6/go/github"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := github.GetDependabotPublicKey(ctx, &github.GetDependabotPublicKeyArgs{
//				Repository: "example_repo",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDependabotPublicKey(ctx *pulumi.Context, args *GetDependabotPublicKeyArgs, opts ...pulumi.InvokeOption) (*GetDependabotPublicKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDependabotPublicKeyResult
	err := ctx.Invoke("github:index/getDependabotPublicKey:getDependabotPublicKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDependabotPublicKey.
type GetDependabotPublicKeyArgs struct {
	// Name of the repository to get public key from.
	Repository string `pulumi:"repository"`
}

// A collection of values returned by getDependabotPublicKey.
type GetDependabotPublicKeyResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Actual key retrieved.
	Key string `pulumi:"key"`
	// ID of the key that has been retrieved.
	KeyId      string `pulumi:"keyId"`
	Repository string `pulumi:"repository"`
}

func GetDependabotPublicKeyOutput(ctx *pulumi.Context, args GetDependabotPublicKeyOutputArgs, opts ...pulumi.InvokeOption) GetDependabotPublicKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDependabotPublicKeyResult, error) {
			args := v.(GetDependabotPublicKeyArgs)
			r, err := GetDependabotPublicKey(ctx, &args, opts...)
			var s GetDependabotPublicKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDependabotPublicKeyResultOutput)
}

// A collection of arguments for invoking getDependabotPublicKey.
type GetDependabotPublicKeyOutputArgs struct {
	// Name of the repository to get public key from.
	Repository pulumi.StringInput `pulumi:"repository"`
}

func (GetDependabotPublicKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependabotPublicKeyArgs)(nil)).Elem()
}

// A collection of values returned by getDependabotPublicKey.
type GetDependabotPublicKeyResultOutput struct{ *pulumi.OutputState }

func (GetDependabotPublicKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependabotPublicKeyResult)(nil)).Elem()
}

func (o GetDependabotPublicKeyResultOutput) ToGetDependabotPublicKeyResultOutput() GetDependabotPublicKeyResultOutput {
	return o
}

func (o GetDependabotPublicKeyResultOutput) ToGetDependabotPublicKeyResultOutputWithContext(ctx context.Context) GetDependabotPublicKeyResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetDependabotPublicKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependabotPublicKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// Actual key retrieved.
func (o GetDependabotPublicKeyResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependabotPublicKeyResult) string { return v.Key }).(pulumi.StringOutput)
}

// ID of the key that has been retrieved.
func (o GetDependabotPublicKeyResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependabotPublicKeyResult) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o GetDependabotPublicKeyResultOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependabotPublicKeyResult) string { return v.Repository }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDependabotPublicKeyResultOutput{})
}
