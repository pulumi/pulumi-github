// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetUser(ctx *pulumi.Context, args *GetUserArgs, opts ...pulumi.InvokeOption) (*GetUserResult, error) {
	var rv GetUserResult
	err := ctx.Invoke("github:index/getUser:getUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUser.
type GetUserArgs struct {
	Username string `pulumi:"username"`
}

// A collection of values returned by getUser.
type GetUserResult struct {
	AvatarUrl  string   `pulumi:"avatarUrl"`
	Bio        string   `pulumi:"bio"`
	Blog       string   `pulumi:"blog"`
	Company    string   `pulumi:"company"`
	CreatedAt  string   `pulumi:"createdAt"`
	Email      string   `pulumi:"email"`
	Followers  int      `pulumi:"followers"`
	Following  int      `pulumi:"following"`
	GpgKeys    []string `pulumi:"gpgKeys"`
	GravatarId string   `pulumi:"gravatarId"`
	// The provider-assigned unique ID for this managed resource.
	Id          string   `pulumi:"id"`
	Location    string   `pulumi:"location"`
	Login       string   `pulumi:"login"`
	Name        string   `pulumi:"name"`
	NodeId      string   `pulumi:"nodeId"`
	PublicGists int      `pulumi:"publicGists"`
	PublicRepos int      `pulumi:"publicRepos"`
	SiteAdmin   bool     `pulumi:"siteAdmin"`
	SshKeys     []string `pulumi:"sshKeys"`
	SuspendedAt string   `pulumi:"suspendedAt"`
	UpdatedAt   string   `pulumi:"updatedAt"`
	Username    string   `pulumi:"username"`
}

func GetUserOutput(ctx *pulumi.Context, args GetUserOutputArgs, opts ...pulumi.InvokeOption) GetUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUserResult, error) {
			args := v.(GetUserArgs)
			r, err := GetUser(ctx, &args, opts...)
			var s GetUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUserResultOutput)
}

// A collection of arguments for invoking getUser.
type GetUserOutputArgs struct {
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserArgs)(nil)).Elem()
}

// A collection of values returned by getUser.
type GetUserResultOutput struct{ *pulumi.OutputState }

func (GetUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserResult)(nil)).Elem()
}

func (o GetUserResultOutput) ToGetUserResultOutput() GetUserResultOutput {
	return o
}

func (o GetUserResultOutput) ToGetUserResultOutputWithContext(ctx context.Context) GetUserResultOutput {
	return o
}

func (o GetUserResultOutput) AvatarUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.AvatarUrl }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) Bio() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.Bio }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) Blog() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.Blog }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) Company() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.Company }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.Email }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) Followers() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserResult) int { return v.Followers }).(pulumi.IntOutput)
}

func (o GetUserResultOutput) Following() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserResult) int { return v.Following }).(pulumi.IntOutput)
}

func (o GetUserResultOutput) GpgKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserResult) []string { return v.GpgKeys }).(pulumi.StringArrayOutput)
}

func (o GetUserResultOutput) GravatarId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.GravatarId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.Login }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.NodeId }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) PublicGists() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserResult) int { return v.PublicGists }).(pulumi.IntOutput)
}

func (o GetUserResultOutput) PublicRepos() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserResult) int { return v.PublicRepos }).(pulumi.IntOutput)
}

func (o GetUserResultOutput) SiteAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserResult) bool { return v.SiteAdmin }).(pulumi.BoolOutput)
}

func (o GetUserResultOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserResult) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

func (o GetUserResultOutput) SuspendedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.SuspendedAt }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o GetUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserResultOutput{})
}
