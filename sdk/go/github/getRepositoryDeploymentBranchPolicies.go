// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-github/sdk/v6/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve deployment branch policies for a repository / environment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-github/sdk/v6/go/github"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := github.GetRepositoryDeploymentBranchPolicies(ctx, &github.GetRepositoryDeploymentBranchPoliciesArgs{
//				Repository:      "example-repository",
//				EnvironmentName: "env_name",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRepositoryDeploymentBranchPolicies(ctx *pulumi.Context, args *GetRepositoryDeploymentBranchPoliciesArgs, opts ...pulumi.InvokeOption) (*GetRepositoryDeploymentBranchPoliciesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRepositoryDeploymentBranchPoliciesResult
	err := ctx.Invoke("github:index/getRepositoryDeploymentBranchPolicies:getRepositoryDeploymentBranchPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryDeploymentBranchPolicies.
type GetRepositoryDeploymentBranchPoliciesArgs struct {
	// Name of the environment to retrieve the deployment branch policies  from.
	EnvironmentName string `pulumi:"environmentName"`
	// Name of the repository to retrieve the deployment branch policies from.
	Repository string `pulumi:"repository"`
}

// A collection of values returned by getRepositoryDeploymentBranchPolicies.
type GetRepositoryDeploymentBranchPoliciesResult struct {
	// The list of this repository / environment deployment policies. Each element of `deploymentBranchPolicies` has the following attributes:
	DeploymentBranchPolicies []GetRepositoryDeploymentBranchPoliciesDeploymentBranchPolicy `pulumi:"deploymentBranchPolicies"`
	EnvironmentName          string                                                        `pulumi:"environmentName"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Repository string `pulumi:"repository"`
}

func GetRepositoryDeploymentBranchPoliciesOutput(ctx *pulumi.Context, args GetRepositoryDeploymentBranchPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetRepositoryDeploymentBranchPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRepositoryDeploymentBranchPoliciesResult, error) {
			args := v.(GetRepositoryDeploymentBranchPoliciesArgs)
			r, err := GetRepositoryDeploymentBranchPolicies(ctx, &args, opts...)
			var s GetRepositoryDeploymentBranchPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRepositoryDeploymentBranchPoliciesResultOutput)
}

// A collection of arguments for invoking getRepositoryDeploymentBranchPolicies.
type GetRepositoryDeploymentBranchPoliciesOutputArgs struct {
	// Name of the environment to retrieve the deployment branch policies  from.
	EnvironmentName pulumi.StringInput `pulumi:"environmentName"`
	// Name of the repository to retrieve the deployment branch policies from.
	Repository pulumi.StringInput `pulumi:"repository"`
}

func (GetRepositoryDeploymentBranchPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryDeploymentBranchPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getRepositoryDeploymentBranchPolicies.
type GetRepositoryDeploymentBranchPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetRepositoryDeploymentBranchPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryDeploymentBranchPoliciesResult)(nil)).Elem()
}

func (o GetRepositoryDeploymentBranchPoliciesResultOutput) ToGetRepositoryDeploymentBranchPoliciesResultOutput() GetRepositoryDeploymentBranchPoliciesResultOutput {
	return o
}

func (o GetRepositoryDeploymentBranchPoliciesResultOutput) ToGetRepositoryDeploymentBranchPoliciesResultOutputWithContext(ctx context.Context) GetRepositoryDeploymentBranchPoliciesResultOutput {
	return o
}

// The list of this repository / environment deployment policies. Each element of `deploymentBranchPolicies` has the following attributes:
func (o GetRepositoryDeploymentBranchPoliciesResultOutput) DeploymentBranchPolicies() GetRepositoryDeploymentBranchPoliciesDeploymentBranchPolicyArrayOutput {
	return o.ApplyT(func(v GetRepositoryDeploymentBranchPoliciesResult) []GetRepositoryDeploymentBranchPoliciesDeploymentBranchPolicy {
		return v.DeploymentBranchPolicies
	}).(GetRepositoryDeploymentBranchPoliciesDeploymentBranchPolicyArrayOutput)
}

func (o GetRepositoryDeploymentBranchPoliciesResultOutput) EnvironmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryDeploymentBranchPoliciesResult) string { return v.EnvironmentName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRepositoryDeploymentBranchPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryDeploymentBranchPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRepositoryDeploymentBranchPoliciesResultOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryDeploymentBranchPoliciesResult) string { return v.Repository }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRepositoryDeploymentBranchPoliciesResultOutput{})
}
