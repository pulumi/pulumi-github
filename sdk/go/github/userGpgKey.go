// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a GitHub user's GPG key resource.
//
// This resource allows you to add/remove GPG keys from your user account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-github/sdk/go/github"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := github.NewUserGpgKey(ctx, "example", &github.UserGpgKeyArgs{
// 			ArmoredPublicKey: pulumi.String(fmt.Sprintf("%v%v%v", "-----BEGIN PGP PUBLIC KEY BLOCK-----\n", "...\n", "-----END PGP PUBLIC KEY BLOCK-----\n")),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type UserGpgKey struct {
	pulumi.CustomResourceState

	// Your public GPG key, generated in ASCII-armored format.
	// See [Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/) for help on creating a GPG key.
	ArmoredPublicKey pulumi.StringOutput `pulumi:"armoredPublicKey"`
	Etag             pulumi.StringOutput `pulumi:"etag"`
	// The key ID of the GPG key, e.g. `3262EFF25BA0D270`
	KeyId pulumi.StringOutput `pulumi:"keyId"`
}

// NewUserGpgKey registers a new resource with the given unique name, arguments, and options.
func NewUserGpgKey(ctx *pulumi.Context,
	name string, args *UserGpgKeyArgs, opts ...pulumi.ResourceOption) (*UserGpgKey, error) {
	if args == nil || args.ArmoredPublicKey == nil {
		return nil, errors.New("missing required argument 'ArmoredPublicKey'")
	}
	if args == nil {
		args = &UserGpgKeyArgs{}
	}
	var resource UserGpgKey
	err := ctx.RegisterResource("github:index/userGpgKey:UserGpgKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserGpgKey gets an existing UserGpgKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserGpgKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserGpgKeyState, opts ...pulumi.ResourceOption) (*UserGpgKey, error) {
	var resource UserGpgKey
	err := ctx.ReadResource("github:index/userGpgKey:UserGpgKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserGpgKey resources.
type userGpgKeyState struct {
	// Your public GPG key, generated in ASCII-armored format.
	// See [Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/) for help on creating a GPG key.
	ArmoredPublicKey *string `pulumi:"armoredPublicKey"`
	Etag             *string `pulumi:"etag"`
	// The key ID of the GPG key, e.g. `3262EFF25BA0D270`
	KeyId *string `pulumi:"keyId"`
}

type UserGpgKeyState struct {
	// Your public GPG key, generated in ASCII-armored format.
	// See [Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/) for help on creating a GPG key.
	ArmoredPublicKey pulumi.StringPtrInput
	Etag             pulumi.StringPtrInput
	// The key ID of the GPG key, e.g. `3262EFF25BA0D270`
	KeyId pulumi.StringPtrInput
}

func (UserGpgKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*userGpgKeyState)(nil)).Elem()
}

type userGpgKeyArgs struct {
	// Your public GPG key, generated in ASCII-armored format.
	// See [Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/) for help on creating a GPG key.
	ArmoredPublicKey string `pulumi:"armoredPublicKey"`
}

// The set of arguments for constructing a UserGpgKey resource.
type UserGpgKeyArgs struct {
	// Your public GPG key, generated in ASCII-armored format.
	// See [Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/) for help on creating a GPG key.
	ArmoredPublicKey pulumi.StringInput
}

func (UserGpgKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userGpgKeyArgs)(nil)).Elem()
}
