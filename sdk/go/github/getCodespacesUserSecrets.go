// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-github/sdk/v5/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to retrieve the list of codespaces secrets of the user.
func GetCodespacesUserSecrets(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetCodespacesUserSecretsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCodespacesUserSecretsResult
	err := ctx.Invoke("github:index/getCodespacesUserSecrets:getCodespacesUserSecrets", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getCodespacesUserSecrets.
type GetCodespacesUserSecretsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// list of secrets for the repository
	Secrets []GetCodespacesUserSecretsSecret `pulumi:"secrets"`
}

func GetCodespacesUserSecretsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetCodespacesUserSecretsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetCodespacesUserSecretsResult, error) {
		r, err := GetCodespacesUserSecrets(ctx, opts...)
		var s GetCodespacesUserSecretsResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(GetCodespacesUserSecretsResultOutput)
}

// A collection of values returned by getCodespacesUserSecrets.
type GetCodespacesUserSecretsResultOutput struct{ *pulumi.OutputState }

func (GetCodespacesUserSecretsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCodespacesUserSecretsResult)(nil)).Elem()
}

func (o GetCodespacesUserSecretsResultOutput) ToGetCodespacesUserSecretsResultOutput() GetCodespacesUserSecretsResultOutput {
	return o
}

func (o GetCodespacesUserSecretsResultOutput) ToGetCodespacesUserSecretsResultOutputWithContext(ctx context.Context) GetCodespacesUserSecretsResultOutput {
	return o
}

func (o GetCodespacesUserSecretsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetCodespacesUserSecretsResult] {
	return pulumix.Output[GetCodespacesUserSecretsResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetCodespacesUserSecretsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCodespacesUserSecretsResult) string { return v.Id }).(pulumi.StringOutput)
}

// list of secrets for the repository
func (o GetCodespacesUserSecretsResultOutput) Secrets() GetCodespacesUserSecretsSecretArrayOutput {
	return o.ApplyT(func(v GetCodespacesUserSecretsResult) []GetCodespacesUserSecretsSecret { return v.Secrets }).(GetCodespacesUserSecretsSecretArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCodespacesUserSecretsResultOutput{})
}
