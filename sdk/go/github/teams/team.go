// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package teams

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a GitHub team resource.
// 
// This resource allows you to add/remove teams from your organization. When applied,
// a new team will be created. When destroyed, that team will be removed.
type Team struct {
	s *pulumi.ResourceState
}

// NewTeam registers a new resource with the given unique name, arguments, and options.
func NewTeam(ctx *pulumi.Context,
	name string, args *TeamArgs, opts ...pulumi.ResourceOpt) (*Team, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["ldapDn"] = nil
		inputs["name"] = nil
		inputs["parentTeamId"] = nil
		inputs["privacy"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["ldapDn"] = args.LdapDn
		inputs["name"] = args.Name
		inputs["parentTeamId"] = args.ParentTeamId
		inputs["privacy"] = args.Privacy
	}
	inputs["etag"] = nil
	inputs["slug"] = nil
	s, err := ctx.RegisterResource("github:teams/team:Team", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Team{s: s}, nil
}

// GetTeam gets an existing Team resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTeam(ctx *pulumi.Context,
	name string, id pulumi.ID, state *TeamState, opts ...pulumi.ResourceOpt) (*Team, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["etag"] = state.Etag
		inputs["ldapDn"] = state.LdapDn
		inputs["name"] = state.Name
		inputs["parentTeamId"] = state.ParentTeamId
		inputs["privacy"] = state.Privacy
		inputs["slug"] = state.Slug
	}
	s, err := ctx.ReadResource("github:teams/team:Team", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Team{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Team) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Team) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// A description of the team.
func (r *Team) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

func (r *Team) Etag() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["etag"])
}

// The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise.
func (r *Team) LdapDn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ldapDn"])
}

// The name of the team.
func (r *Team) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The ID of the parent team, if this is a nested team.
func (r *Team) ParentTeamId() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["parentTeamId"])
}

// The level of privacy for the team. Must be one of `secret` or `closed`.
// Defaults to `secret`.
func (r *Team) Privacy() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["privacy"])
}

// The slug of the created team, which may or may not differ from `name`,
// depending on whether `name` contains "URL-unsafe" characters.
// Useful when referencing the team in [`github_branch_protection`](https://www.terraform.io/docs/providers/github/r/branch_protection.html).
func (r *Team) Slug() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["slug"])
}

// Input properties used for looking up and filtering Team resources.
type TeamState struct {
	// A description of the team.
	Description interface{}
	Etag interface{}
	// The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise.
	LdapDn interface{}
	// The name of the team.
	Name interface{}
	// The ID of the parent team, if this is a nested team.
	ParentTeamId interface{}
	// The level of privacy for the team. Must be one of `secret` or `closed`.
	// Defaults to `secret`.
	Privacy interface{}
	// The slug of the created team, which may or may not differ from `name`,
	// depending on whether `name` contains "URL-unsafe" characters.
	// Useful when referencing the team in [`github_branch_protection`](https://www.terraform.io/docs/providers/github/r/branch_protection.html).
	Slug interface{}
}

// The set of arguments for constructing a Team resource.
type TeamArgs struct {
	// A description of the team.
	Description interface{}
	// The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise.
	LdapDn interface{}
	// The name of the team.
	Name interface{}
	// The ID of the parent team, if this is a nested team.
	ParentTeamId interface{}
	// The level of privacy for the team. Must be one of `secret` or `closed`.
	// Defaults to `secret`.
	Privacy interface{}
}
