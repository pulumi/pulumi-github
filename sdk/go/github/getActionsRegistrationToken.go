// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-github/sdk/v5/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to retrieve a GitHub Actions repository registration token. This token can then be used to register a self-hosted runner.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-github/sdk/v5/go/github"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := github.GetActionsRegistrationToken(ctx, &github.GetActionsRegistrationTokenArgs{
//				Repository: "example_repo",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetActionsRegistrationToken(ctx *pulumi.Context, args *GetActionsRegistrationTokenArgs, opts ...pulumi.InvokeOption) (*GetActionsRegistrationTokenResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetActionsRegistrationTokenResult
	err := ctx.Invoke("github:index/getActionsRegistrationToken:getActionsRegistrationToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getActionsRegistrationToken.
type GetActionsRegistrationTokenArgs struct {
	// Name of the repository to get a GitHub Actions registration token for.
	Repository string `pulumi:"repository"`
}

// A collection of values returned by getActionsRegistrationToken.
type GetActionsRegistrationTokenResult struct {
	// The token expiration date.
	ExpiresAt int `pulumi:"expiresAt"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Repository string `pulumi:"repository"`
	// The token that has been retrieved.
	Token string `pulumi:"token"`
}

func GetActionsRegistrationTokenOutput(ctx *pulumi.Context, args GetActionsRegistrationTokenOutputArgs, opts ...pulumi.InvokeOption) GetActionsRegistrationTokenResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetActionsRegistrationTokenResult, error) {
			args := v.(GetActionsRegistrationTokenArgs)
			r, err := GetActionsRegistrationToken(ctx, &args, opts...)
			var s GetActionsRegistrationTokenResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetActionsRegistrationTokenResultOutput)
}

// A collection of arguments for invoking getActionsRegistrationToken.
type GetActionsRegistrationTokenOutputArgs struct {
	// Name of the repository to get a GitHub Actions registration token for.
	Repository pulumi.StringInput `pulumi:"repository"`
}

func (GetActionsRegistrationTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsRegistrationTokenArgs)(nil)).Elem()
}

// A collection of values returned by getActionsRegistrationToken.
type GetActionsRegistrationTokenResultOutput struct{ *pulumi.OutputState }

func (GetActionsRegistrationTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsRegistrationTokenResult)(nil)).Elem()
}

func (o GetActionsRegistrationTokenResultOutput) ToGetActionsRegistrationTokenResultOutput() GetActionsRegistrationTokenResultOutput {
	return o
}

func (o GetActionsRegistrationTokenResultOutput) ToGetActionsRegistrationTokenResultOutputWithContext(ctx context.Context) GetActionsRegistrationTokenResultOutput {
	return o
}

func (o GetActionsRegistrationTokenResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetActionsRegistrationTokenResult] {
	return pulumix.Output[GetActionsRegistrationTokenResult]{
		OutputState: o.OutputState,
	}
}

// The token expiration date.
func (o GetActionsRegistrationTokenResultOutput) ExpiresAt() pulumi.IntOutput {
	return o.ApplyT(func(v GetActionsRegistrationTokenResult) int { return v.ExpiresAt }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetActionsRegistrationTokenResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionsRegistrationTokenResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetActionsRegistrationTokenResultOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionsRegistrationTokenResult) string { return v.Repository }).(pulumi.StringOutput)
}

// The token that has been retrieved.
func (o GetActionsRegistrationTokenResultOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionsRegistrationTokenResult) string { return v.Token }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetActionsRegistrationTokenResultOutput{})
}
