// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-github/sdk/v6/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve the security managers for an organization.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-github/sdk/v6/go/github"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := github.GetOrganizationSecurityManagers(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOrganizationSecurityManagers(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetOrganizationSecurityManagersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrganizationSecurityManagersResult
	err := ctx.Invoke("github:index/getOrganizationSecurityManagers:getOrganizationSecurityManagers", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getOrganizationSecurityManagers.
type GetOrganizationSecurityManagersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// An list of GitHub teams.  Each `team` block consists of the fields documented below.
	Teams []GetOrganizationSecurityManagersTeam `pulumi:"teams"`
}

func GetOrganizationSecurityManagersOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetOrganizationSecurityManagersResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetOrganizationSecurityManagersResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("github:index/getOrganizationSecurityManagers:getOrganizationSecurityManagers", nil, GetOrganizationSecurityManagersResultOutput{}, options).(GetOrganizationSecurityManagersResultOutput), nil
	}).(GetOrganizationSecurityManagersResultOutput)
}

// A collection of values returned by getOrganizationSecurityManagers.
type GetOrganizationSecurityManagersResultOutput struct{ *pulumi.OutputState }

func (GetOrganizationSecurityManagersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationSecurityManagersResult)(nil)).Elem()
}

func (o GetOrganizationSecurityManagersResultOutput) ToGetOrganizationSecurityManagersResultOutput() GetOrganizationSecurityManagersResultOutput {
	return o
}

func (o GetOrganizationSecurityManagersResultOutput) ToGetOrganizationSecurityManagersResultOutputWithContext(ctx context.Context) GetOrganizationSecurityManagersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrganizationSecurityManagersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationSecurityManagersResult) string { return v.Id }).(pulumi.StringOutput)
}

// An list of GitHub teams.  Each `team` block consists of the fields documented below.
func (o GetOrganizationSecurityManagersResultOutput) Teams() GetOrganizationSecurityManagersTeamArrayOutput {
	return o.ApplyT(func(v GetOrganizationSecurityManagersResult) []GetOrganizationSecurityManagersTeam { return v.Teams }).(GetOrganizationSecurityManagersTeamArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrganizationSecurityManagersResultOutput{})
}
