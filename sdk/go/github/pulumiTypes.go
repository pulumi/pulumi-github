// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type BranchProtectionRequiredPullRequestReview struct {
	DismissStaleReviews          *bool    `pulumi:"dismissStaleReviews"`
	DismissalRestrictions        []string `pulumi:"dismissalRestrictions"`
	RequireCodeOwnerReviews      *bool    `pulumi:"requireCodeOwnerReviews"`
	RequiredApprovingReviewCount *int     `pulumi:"requiredApprovingReviewCount"`
}

// BranchProtectionRequiredPullRequestReviewInput is an input type that accepts BranchProtectionRequiredPullRequestReviewArgs and BranchProtectionRequiredPullRequestReviewOutput values.
// You can construct a concrete instance of `BranchProtectionRequiredPullRequestReviewInput` via:
//
//          BranchProtectionRequiredPullRequestReviewArgs{...}
type BranchProtectionRequiredPullRequestReviewInput interface {
	pulumi.Input

	ToBranchProtectionRequiredPullRequestReviewOutput() BranchProtectionRequiredPullRequestReviewOutput
	ToBranchProtectionRequiredPullRequestReviewOutputWithContext(context.Context) BranchProtectionRequiredPullRequestReviewOutput
}

type BranchProtectionRequiredPullRequestReviewArgs struct {
	DismissStaleReviews          pulumi.BoolPtrInput     `pulumi:"dismissStaleReviews"`
	DismissalRestrictions        pulumi.StringArrayInput `pulumi:"dismissalRestrictions"`
	RequireCodeOwnerReviews      pulumi.BoolPtrInput     `pulumi:"requireCodeOwnerReviews"`
	RequiredApprovingReviewCount pulumi.IntPtrInput      `pulumi:"requiredApprovingReviewCount"`
}

func (BranchProtectionRequiredPullRequestReviewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionRequiredPullRequestReview)(nil)).Elem()
}

func (i BranchProtectionRequiredPullRequestReviewArgs) ToBranchProtectionRequiredPullRequestReviewOutput() BranchProtectionRequiredPullRequestReviewOutput {
	return i.ToBranchProtectionRequiredPullRequestReviewOutputWithContext(context.Background())
}

func (i BranchProtectionRequiredPullRequestReviewArgs) ToBranchProtectionRequiredPullRequestReviewOutputWithContext(ctx context.Context) BranchProtectionRequiredPullRequestReviewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionRequiredPullRequestReviewOutput)
}

// BranchProtectionRequiredPullRequestReviewArrayInput is an input type that accepts BranchProtectionRequiredPullRequestReviewArray and BranchProtectionRequiredPullRequestReviewArrayOutput values.
// You can construct a concrete instance of `BranchProtectionRequiredPullRequestReviewArrayInput` via:
//
//          BranchProtectionRequiredPullRequestReviewArray{ BranchProtectionRequiredPullRequestReviewArgs{...} }
type BranchProtectionRequiredPullRequestReviewArrayInput interface {
	pulumi.Input

	ToBranchProtectionRequiredPullRequestReviewArrayOutput() BranchProtectionRequiredPullRequestReviewArrayOutput
	ToBranchProtectionRequiredPullRequestReviewArrayOutputWithContext(context.Context) BranchProtectionRequiredPullRequestReviewArrayOutput
}

type BranchProtectionRequiredPullRequestReviewArray []BranchProtectionRequiredPullRequestReviewInput

func (BranchProtectionRequiredPullRequestReviewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionRequiredPullRequestReview)(nil)).Elem()
}

func (i BranchProtectionRequiredPullRequestReviewArray) ToBranchProtectionRequiredPullRequestReviewArrayOutput() BranchProtectionRequiredPullRequestReviewArrayOutput {
	return i.ToBranchProtectionRequiredPullRequestReviewArrayOutputWithContext(context.Background())
}

func (i BranchProtectionRequiredPullRequestReviewArray) ToBranchProtectionRequiredPullRequestReviewArrayOutputWithContext(ctx context.Context) BranchProtectionRequiredPullRequestReviewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionRequiredPullRequestReviewArrayOutput)
}

type BranchProtectionRequiredPullRequestReviewOutput struct{ *pulumi.OutputState }

func (BranchProtectionRequiredPullRequestReviewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionRequiredPullRequestReview)(nil)).Elem()
}

func (o BranchProtectionRequiredPullRequestReviewOutput) ToBranchProtectionRequiredPullRequestReviewOutput() BranchProtectionRequiredPullRequestReviewOutput {
	return o
}

func (o BranchProtectionRequiredPullRequestReviewOutput) ToBranchProtectionRequiredPullRequestReviewOutputWithContext(ctx context.Context) BranchProtectionRequiredPullRequestReviewOutput {
	return o
}

func (o BranchProtectionRequiredPullRequestReviewOutput) DismissStaleReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionRequiredPullRequestReview) *bool { return v.DismissStaleReviews }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionRequiredPullRequestReviewOutput) DismissalRestrictions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionRequiredPullRequestReview) []string { return v.DismissalRestrictions }).(pulumi.StringArrayOutput)
}

func (o BranchProtectionRequiredPullRequestReviewOutput) RequireCodeOwnerReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionRequiredPullRequestReview) *bool { return v.RequireCodeOwnerReviews }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionRequiredPullRequestReviewOutput) RequiredApprovingReviewCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BranchProtectionRequiredPullRequestReview) *int { return v.RequiredApprovingReviewCount }).(pulumi.IntPtrOutput)
}

type BranchProtectionRequiredPullRequestReviewArrayOutput struct{ *pulumi.OutputState }

func (BranchProtectionRequiredPullRequestReviewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionRequiredPullRequestReview)(nil)).Elem()
}

func (o BranchProtectionRequiredPullRequestReviewArrayOutput) ToBranchProtectionRequiredPullRequestReviewArrayOutput() BranchProtectionRequiredPullRequestReviewArrayOutput {
	return o
}

func (o BranchProtectionRequiredPullRequestReviewArrayOutput) ToBranchProtectionRequiredPullRequestReviewArrayOutputWithContext(ctx context.Context) BranchProtectionRequiredPullRequestReviewArrayOutput {
	return o
}

func (o BranchProtectionRequiredPullRequestReviewArrayOutput) Index(i pulumi.IntInput) BranchProtectionRequiredPullRequestReviewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BranchProtectionRequiredPullRequestReview {
		return vs[0].([]BranchProtectionRequiredPullRequestReview)[vs[1].(int)]
	}).(BranchProtectionRequiredPullRequestReviewOutput)
}

type BranchProtectionRequiredStatusCheck struct {
	Contexts []string `pulumi:"contexts"`
	Strict   *bool    `pulumi:"strict"`
}

// BranchProtectionRequiredStatusCheckInput is an input type that accepts BranchProtectionRequiredStatusCheckArgs and BranchProtectionRequiredStatusCheckOutput values.
// You can construct a concrete instance of `BranchProtectionRequiredStatusCheckInput` via:
//
//          BranchProtectionRequiredStatusCheckArgs{...}
type BranchProtectionRequiredStatusCheckInput interface {
	pulumi.Input

	ToBranchProtectionRequiredStatusCheckOutput() BranchProtectionRequiredStatusCheckOutput
	ToBranchProtectionRequiredStatusCheckOutputWithContext(context.Context) BranchProtectionRequiredStatusCheckOutput
}

type BranchProtectionRequiredStatusCheckArgs struct {
	Contexts pulumi.StringArrayInput `pulumi:"contexts"`
	Strict   pulumi.BoolPtrInput     `pulumi:"strict"`
}

func (BranchProtectionRequiredStatusCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionRequiredStatusCheck)(nil)).Elem()
}

func (i BranchProtectionRequiredStatusCheckArgs) ToBranchProtectionRequiredStatusCheckOutput() BranchProtectionRequiredStatusCheckOutput {
	return i.ToBranchProtectionRequiredStatusCheckOutputWithContext(context.Background())
}

func (i BranchProtectionRequiredStatusCheckArgs) ToBranchProtectionRequiredStatusCheckOutputWithContext(ctx context.Context) BranchProtectionRequiredStatusCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionRequiredStatusCheckOutput)
}

// BranchProtectionRequiredStatusCheckArrayInput is an input type that accepts BranchProtectionRequiredStatusCheckArray and BranchProtectionRequiredStatusCheckArrayOutput values.
// You can construct a concrete instance of `BranchProtectionRequiredStatusCheckArrayInput` via:
//
//          BranchProtectionRequiredStatusCheckArray{ BranchProtectionRequiredStatusCheckArgs{...} }
type BranchProtectionRequiredStatusCheckArrayInput interface {
	pulumi.Input

	ToBranchProtectionRequiredStatusCheckArrayOutput() BranchProtectionRequiredStatusCheckArrayOutput
	ToBranchProtectionRequiredStatusCheckArrayOutputWithContext(context.Context) BranchProtectionRequiredStatusCheckArrayOutput
}

type BranchProtectionRequiredStatusCheckArray []BranchProtectionRequiredStatusCheckInput

func (BranchProtectionRequiredStatusCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionRequiredStatusCheck)(nil)).Elem()
}

func (i BranchProtectionRequiredStatusCheckArray) ToBranchProtectionRequiredStatusCheckArrayOutput() BranchProtectionRequiredStatusCheckArrayOutput {
	return i.ToBranchProtectionRequiredStatusCheckArrayOutputWithContext(context.Background())
}

func (i BranchProtectionRequiredStatusCheckArray) ToBranchProtectionRequiredStatusCheckArrayOutputWithContext(ctx context.Context) BranchProtectionRequiredStatusCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionRequiredStatusCheckArrayOutput)
}

type BranchProtectionRequiredStatusCheckOutput struct{ *pulumi.OutputState }

func (BranchProtectionRequiredStatusCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionRequiredStatusCheck)(nil)).Elem()
}

func (o BranchProtectionRequiredStatusCheckOutput) ToBranchProtectionRequiredStatusCheckOutput() BranchProtectionRequiredStatusCheckOutput {
	return o
}

func (o BranchProtectionRequiredStatusCheckOutput) ToBranchProtectionRequiredStatusCheckOutputWithContext(ctx context.Context) BranchProtectionRequiredStatusCheckOutput {
	return o
}

func (o BranchProtectionRequiredStatusCheckOutput) Contexts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionRequiredStatusCheck) []string { return v.Contexts }).(pulumi.StringArrayOutput)
}

func (o BranchProtectionRequiredStatusCheckOutput) Strict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionRequiredStatusCheck) *bool { return v.Strict }).(pulumi.BoolPtrOutput)
}

type BranchProtectionRequiredStatusCheckArrayOutput struct{ *pulumi.OutputState }

func (BranchProtectionRequiredStatusCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionRequiredStatusCheck)(nil)).Elem()
}

func (o BranchProtectionRequiredStatusCheckArrayOutput) ToBranchProtectionRequiredStatusCheckArrayOutput() BranchProtectionRequiredStatusCheckArrayOutput {
	return o
}

func (o BranchProtectionRequiredStatusCheckArrayOutput) ToBranchProtectionRequiredStatusCheckArrayOutputWithContext(ctx context.Context) BranchProtectionRequiredStatusCheckArrayOutput {
	return o
}

func (o BranchProtectionRequiredStatusCheckArrayOutput) Index(i pulumi.IntInput) BranchProtectionRequiredStatusCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BranchProtectionRequiredStatusCheck {
		return vs[0].([]BranchProtectionRequiredStatusCheck)[vs[1].(int)]
	}).(BranchProtectionRequiredStatusCheckOutput)
}

type BranchProtectionV3RequiredPullRequestReviews struct {
	DismissStaleReviews *bool    `pulumi:"dismissStaleReviews"`
	DismissalTeams      []string `pulumi:"dismissalTeams"`
	DismissalUsers      []string `pulumi:"dismissalUsers"`
	// Deprecated: Use enforce_admins instead
	IncludeAdmins                *bool `pulumi:"includeAdmins"`
	RequireCodeOwnerReviews      *bool `pulumi:"requireCodeOwnerReviews"`
	RequiredApprovingReviewCount *int  `pulumi:"requiredApprovingReviewCount"`
}

// BranchProtectionV3RequiredPullRequestReviewsInput is an input type that accepts BranchProtectionV3RequiredPullRequestReviewsArgs and BranchProtectionV3RequiredPullRequestReviewsOutput values.
// You can construct a concrete instance of `BranchProtectionV3RequiredPullRequestReviewsInput` via:
//
//          BranchProtectionV3RequiredPullRequestReviewsArgs{...}
type BranchProtectionV3RequiredPullRequestReviewsInput interface {
	pulumi.Input

	ToBranchProtectionV3RequiredPullRequestReviewsOutput() BranchProtectionV3RequiredPullRequestReviewsOutput
	ToBranchProtectionV3RequiredPullRequestReviewsOutputWithContext(context.Context) BranchProtectionV3RequiredPullRequestReviewsOutput
}

type BranchProtectionV3RequiredPullRequestReviewsArgs struct {
	DismissStaleReviews pulumi.BoolPtrInput     `pulumi:"dismissStaleReviews"`
	DismissalTeams      pulumi.StringArrayInput `pulumi:"dismissalTeams"`
	DismissalUsers      pulumi.StringArrayInput `pulumi:"dismissalUsers"`
	// Deprecated: Use enforce_admins instead
	IncludeAdmins                pulumi.BoolPtrInput `pulumi:"includeAdmins"`
	RequireCodeOwnerReviews      pulumi.BoolPtrInput `pulumi:"requireCodeOwnerReviews"`
	RequiredApprovingReviewCount pulumi.IntPtrInput  `pulumi:"requiredApprovingReviewCount"`
}

func (BranchProtectionV3RequiredPullRequestReviewsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3RequiredPullRequestReviews)(nil)).Elem()
}

func (i BranchProtectionV3RequiredPullRequestReviewsArgs) ToBranchProtectionV3RequiredPullRequestReviewsOutput() BranchProtectionV3RequiredPullRequestReviewsOutput {
	return i.ToBranchProtectionV3RequiredPullRequestReviewsOutputWithContext(context.Background())
}

func (i BranchProtectionV3RequiredPullRequestReviewsArgs) ToBranchProtectionV3RequiredPullRequestReviewsOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredPullRequestReviewsOutput)
}

func (i BranchProtectionV3RequiredPullRequestReviewsArgs) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutput() BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return i.ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(context.Background())
}

func (i BranchProtectionV3RequiredPullRequestReviewsArgs) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredPullRequestReviewsOutput).ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(ctx)
}

// BranchProtectionV3RequiredPullRequestReviewsPtrInput is an input type that accepts BranchProtectionV3RequiredPullRequestReviewsArgs, BranchProtectionV3RequiredPullRequestReviewsPtr and BranchProtectionV3RequiredPullRequestReviewsPtrOutput values.
// You can construct a concrete instance of `BranchProtectionV3RequiredPullRequestReviewsPtrInput` via:
//
//          BranchProtectionV3RequiredPullRequestReviewsArgs{...}
//
//  or:
//
//          nil
type BranchProtectionV3RequiredPullRequestReviewsPtrInput interface {
	pulumi.Input

	ToBranchProtectionV3RequiredPullRequestReviewsPtrOutput() BranchProtectionV3RequiredPullRequestReviewsPtrOutput
	ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(context.Context) BranchProtectionV3RequiredPullRequestReviewsPtrOutput
}

type branchProtectionV3RequiredPullRequestReviewsPtrType BranchProtectionV3RequiredPullRequestReviewsArgs

func BranchProtectionV3RequiredPullRequestReviewsPtr(v *BranchProtectionV3RequiredPullRequestReviewsArgs) BranchProtectionV3RequiredPullRequestReviewsPtrInput {
	return (*branchProtectionV3RequiredPullRequestReviewsPtrType)(v)
}

func (*branchProtectionV3RequiredPullRequestReviewsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3RequiredPullRequestReviews)(nil)).Elem()
}

func (i *branchProtectionV3RequiredPullRequestReviewsPtrType) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutput() BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return i.ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(context.Background())
}

func (i *branchProtectionV3RequiredPullRequestReviewsPtrType) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredPullRequestReviewsPtrOutput)
}

type BranchProtectionV3RequiredPullRequestReviewsOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RequiredPullRequestReviewsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3RequiredPullRequestReviews)(nil)).Elem()
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) ToBranchProtectionV3RequiredPullRequestReviewsOutput() BranchProtectionV3RequiredPullRequestReviewsOutput {
	return o
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) ToBranchProtectionV3RequiredPullRequestReviewsOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsOutput {
	return o
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutput() BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return o.ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(context.Background())
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) *BranchProtectionV3RequiredPullRequestReviews {
		return &v
	}).(BranchProtectionV3RequiredPullRequestReviewsPtrOutput)
}
func (o BranchProtectionV3RequiredPullRequestReviewsOutput) DismissStaleReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) *bool { return v.DismissStaleReviews }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) DismissalTeams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) []string { return v.DismissalTeams }).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) DismissalUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) []string { return v.DismissalUsers }).(pulumi.StringArrayOutput)
}

// Deprecated: Use enforce_admins instead
func (o BranchProtectionV3RequiredPullRequestReviewsOutput) IncludeAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) *bool { return v.IncludeAdmins }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) RequireCodeOwnerReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) *bool { return v.RequireCodeOwnerReviews }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) RequiredApprovingReviewCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) *int { return v.RequiredApprovingReviewCount }).(pulumi.IntPtrOutput)
}

type BranchProtectionV3RequiredPullRequestReviewsPtrOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RequiredPullRequestReviewsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3RequiredPullRequestReviews)(nil)).Elem()
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutput() BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return o
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return o
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) Elem() BranchProtectionV3RequiredPullRequestReviewsOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) BranchProtectionV3RequiredPullRequestReviews {
		return *v
	}).(BranchProtectionV3RequiredPullRequestReviewsOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) DismissStaleReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) *bool {
		if v == nil {
			return nil
		}
		return v.DismissStaleReviews
	}).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) DismissalTeams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) []string {
		if v == nil {
			return nil
		}
		return v.DismissalTeams
	}).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) DismissalUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) []string {
		if v == nil {
			return nil
		}
		return v.DismissalUsers
	}).(pulumi.StringArrayOutput)
}

// Deprecated: Use enforce_admins instead
func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) IncludeAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAdmins
	}).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) RequireCodeOwnerReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) *bool {
		if v == nil {
			return nil
		}
		return v.RequireCodeOwnerReviews
	}).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) RequiredApprovingReviewCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) *int {
		if v == nil {
			return nil
		}
		return v.RequiredApprovingReviewCount
	}).(pulumi.IntPtrOutput)
}

type BranchProtectionV3RequiredStatusChecks struct {
	Contexts []string `pulumi:"contexts"`
	// Deprecated: Use enforce_admins instead
	IncludeAdmins *bool `pulumi:"includeAdmins"`
	Strict        *bool `pulumi:"strict"`
}

// BranchProtectionV3RequiredStatusChecksInput is an input type that accepts BranchProtectionV3RequiredStatusChecksArgs and BranchProtectionV3RequiredStatusChecksOutput values.
// You can construct a concrete instance of `BranchProtectionV3RequiredStatusChecksInput` via:
//
//          BranchProtectionV3RequiredStatusChecksArgs{...}
type BranchProtectionV3RequiredStatusChecksInput interface {
	pulumi.Input

	ToBranchProtectionV3RequiredStatusChecksOutput() BranchProtectionV3RequiredStatusChecksOutput
	ToBranchProtectionV3RequiredStatusChecksOutputWithContext(context.Context) BranchProtectionV3RequiredStatusChecksOutput
}

type BranchProtectionV3RequiredStatusChecksArgs struct {
	Contexts pulumi.StringArrayInput `pulumi:"contexts"`
	// Deprecated: Use enforce_admins instead
	IncludeAdmins pulumi.BoolPtrInput `pulumi:"includeAdmins"`
	Strict        pulumi.BoolPtrInput `pulumi:"strict"`
}

func (BranchProtectionV3RequiredStatusChecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3RequiredStatusChecks)(nil)).Elem()
}

func (i BranchProtectionV3RequiredStatusChecksArgs) ToBranchProtectionV3RequiredStatusChecksOutput() BranchProtectionV3RequiredStatusChecksOutput {
	return i.ToBranchProtectionV3RequiredStatusChecksOutputWithContext(context.Background())
}

func (i BranchProtectionV3RequiredStatusChecksArgs) ToBranchProtectionV3RequiredStatusChecksOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredStatusChecksOutput)
}

func (i BranchProtectionV3RequiredStatusChecksArgs) ToBranchProtectionV3RequiredStatusChecksPtrOutput() BranchProtectionV3RequiredStatusChecksPtrOutput {
	return i.ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(context.Background())
}

func (i BranchProtectionV3RequiredStatusChecksArgs) ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredStatusChecksOutput).ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(ctx)
}

// BranchProtectionV3RequiredStatusChecksPtrInput is an input type that accepts BranchProtectionV3RequiredStatusChecksArgs, BranchProtectionV3RequiredStatusChecksPtr and BranchProtectionV3RequiredStatusChecksPtrOutput values.
// You can construct a concrete instance of `BranchProtectionV3RequiredStatusChecksPtrInput` via:
//
//          BranchProtectionV3RequiredStatusChecksArgs{...}
//
//  or:
//
//          nil
type BranchProtectionV3RequiredStatusChecksPtrInput interface {
	pulumi.Input

	ToBranchProtectionV3RequiredStatusChecksPtrOutput() BranchProtectionV3RequiredStatusChecksPtrOutput
	ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(context.Context) BranchProtectionV3RequiredStatusChecksPtrOutput
}

type branchProtectionV3RequiredStatusChecksPtrType BranchProtectionV3RequiredStatusChecksArgs

func BranchProtectionV3RequiredStatusChecksPtr(v *BranchProtectionV3RequiredStatusChecksArgs) BranchProtectionV3RequiredStatusChecksPtrInput {
	return (*branchProtectionV3RequiredStatusChecksPtrType)(v)
}

func (*branchProtectionV3RequiredStatusChecksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3RequiredStatusChecks)(nil)).Elem()
}

func (i *branchProtectionV3RequiredStatusChecksPtrType) ToBranchProtectionV3RequiredStatusChecksPtrOutput() BranchProtectionV3RequiredStatusChecksPtrOutput {
	return i.ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(context.Background())
}

func (i *branchProtectionV3RequiredStatusChecksPtrType) ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredStatusChecksPtrOutput)
}

type BranchProtectionV3RequiredStatusChecksOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RequiredStatusChecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3RequiredStatusChecks)(nil)).Elem()
}

func (o BranchProtectionV3RequiredStatusChecksOutput) ToBranchProtectionV3RequiredStatusChecksOutput() BranchProtectionV3RequiredStatusChecksOutput {
	return o
}

func (o BranchProtectionV3RequiredStatusChecksOutput) ToBranchProtectionV3RequiredStatusChecksOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksOutput {
	return o
}

func (o BranchProtectionV3RequiredStatusChecksOutput) ToBranchProtectionV3RequiredStatusChecksPtrOutput() BranchProtectionV3RequiredStatusChecksPtrOutput {
	return o.ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(context.Background())
}

func (o BranchProtectionV3RequiredStatusChecksOutput) ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredStatusChecks) *BranchProtectionV3RequiredStatusChecks {
		return &v
	}).(BranchProtectionV3RequiredStatusChecksPtrOutput)
}
func (o BranchProtectionV3RequiredStatusChecksOutput) Contexts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredStatusChecks) []string { return v.Contexts }).(pulumi.StringArrayOutput)
}

// Deprecated: Use enforce_admins instead
func (o BranchProtectionV3RequiredStatusChecksOutput) IncludeAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredStatusChecks) *bool { return v.IncludeAdmins }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredStatusChecksOutput) Strict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredStatusChecks) *bool { return v.Strict }).(pulumi.BoolPtrOutput)
}

type BranchProtectionV3RequiredStatusChecksPtrOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RequiredStatusChecksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3RequiredStatusChecks)(nil)).Elem()
}

func (o BranchProtectionV3RequiredStatusChecksPtrOutput) ToBranchProtectionV3RequiredStatusChecksPtrOutput() BranchProtectionV3RequiredStatusChecksPtrOutput {
	return o
}

func (o BranchProtectionV3RequiredStatusChecksPtrOutput) ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksPtrOutput {
	return o
}

func (o BranchProtectionV3RequiredStatusChecksPtrOutput) Elem() BranchProtectionV3RequiredStatusChecksOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredStatusChecks) BranchProtectionV3RequiredStatusChecks { return *v }).(BranchProtectionV3RequiredStatusChecksOutput)
}

func (o BranchProtectionV3RequiredStatusChecksPtrOutput) Contexts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredStatusChecks) []string {
		if v == nil {
			return nil
		}
		return v.Contexts
	}).(pulumi.StringArrayOutput)
}

// Deprecated: Use enforce_admins instead
func (o BranchProtectionV3RequiredStatusChecksPtrOutput) IncludeAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredStatusChecks) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAdmins
	}).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredStatusChecksPtrOutput) Strict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredStatusChecks) *bool {
		if v == nil {
			return nil
		}
		return v.Strict
	}).(pulumi.BoolPtrOutput)
}

type BranchProtectionV3Restrictions struct {
	Apps  []string `pulumi:"apps"`
	Teams []string `pulumi:"teams"`
	Users []string `pulumi:"users"`
}

// BranchProtectionV3RestrictionsInput is an input type that accepts BranchProtectionV3RestrictionsArgs and BranchProtectionV3RestrictionsOutput values.
// You can construct a concrete instance of `BranchProtectionV3RestrictionsInput` via:
//
//          BranchProtectionV3RestrictionsArgs{...}
type BranchProtectionV3RestrictionsInput interface {
	pulumi.Input

	ToBranchProtectionV3RestrictionsOutput() BranchProtectionV3RestrictionsOutput
	ToBranchProtectionV3RestrictionsOutputWithContext(context.Context) BranchProtectionV3RestrictionsOutput
}

type BranchProtectionV3RestrictionsArgs struct {
	Apps  pulumi.StringArrayInput `pulumi:"apps"`
	Teams pulumi.StringArrayInput `pulumi:"teams"`
	Users pulumi.StringArrayInput `pulumi:"users"`
}

func (BranchProtectionV3RestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3Restrictions)(nil)).Elem()
}

func (i BranchProtectionV3RestrictionsArgs) ToBranchProtectionV3RestrictionsOutput() BranchProtectionV3RestrictionsOutput {
	return i.ToBranchProtectionV3RestrictionsOutputWithContext(context.Background())
}

func (i BranchProtectionV3RestrictionsArgs) ToBranchProtectionV3RestrictionsOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RestrictionsOutput)
}

func (i BranchProtectionV3RestrictionsArgs) ToBranchProtectionV3RestrictionsPtrOutput() BranchProtectionV3RestrictionsPtrOutput {
	return i.ToBranchProtectionV3RestrictionsPtrOutputWithContext(context.Background())
}

func (i BranchProtectionV3RestrictionsArgs) ToBranchProtectionV3RestrictionsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RestrictionsOutput).ToBranchProtectionV3RestrictionsPtrOutputWithContext(ctx)
}

// BranchProtectionV3RestrictionsPtrInput is an input type that accepts BranchProtectionV3RestrictionsArgs, BranchProtectionV3RestrictionsPtr and BranchProtectionV3RestrictionsPtrOutput values.
// You can construct a concrete instance of `BranchProtectionV3RestrictionsPtrInput` via:
//
//          BranchProtectionV3RestrictionsArgs{...}
//
//  or:
//
//          nil
type BranchProtectionV3RestrictionsPtrInput interface {
	pulumi.Input

	ToBranchProtectionV3RestrictionsPtrOutput() BranchProtectionV3RestrictionsPtrOutput
	ToBranchProtectionV3RestrictionsPtrOutputWithContext(context.Context) BranchProtectionV3RestrictionsPtrOutput
}

type branchProtectionV3RestrictionsPtrType BranchProtectionV3RestrictionsArgs

func BranchProtectionV3RestrictionsPtr(v *BranchProtectionV3RestrictionsArgs) BranchProtectionV3RestrictionsPtrInput {
	return (*branchProtectionV3RestrictionsPtrType)(v)
}

func (*branchProtectionV3RestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3Restrictions)(nil)).Elem()
}

func (i *branchProtectionV3RestrictionsPtrType) ToBranchProtectionV3RestrictionsPtrOutput() BranchProtectionV3RestrictionsPtrOutput {
	return i.ToBranchProtectionV3RestrictionsPtrOutputWithContext(context.Background())
}

func (i *branchProtectionV3RestrictionsPtrType) ToBranchProtectionV3RestrictionsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RestrictionsPtrOutput)
}

type BranchProtectionV3RestrictionsOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3Restrictions)(nil)).Elem()
}

func (o BranchProtectionV3RestrictionsOutput) ToBranchProtectionV3RestrictionsOutput() BranchProtectionV3RestrictionsOutput {
	return o
}

func (o BranchProtectionV3RestrictionsOutput) ToBranchProtectionV3RestrictionsOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsOutput {
	return o
}

func (o BranchProtectionV3RestrictionsOutput) ToBranchProtectionV3RestrictionsPtrOutput() BranchProtectionV3RestrictionsPtrOutput {
	return o.ToBranchProtectionV3RestrictionsPtrOutputWithContext(context.Background())
}

func (o BranchProtectionV3RestrictionsOutput) ToBranchProtectionV3RestrictionsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3Restrictions) *BranchProtectionV3Restrictions {
		return &v
	}).(BranchProtectionV3RestrictionsPtrOutput)
}
func (o BranchProtectionV3RestrictionsOutput) Apps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3Restrictions) []string { return v.Apps }).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RestrictionsOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3Restrictions) []string { return v.Teams }).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RestrictionsOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3Restrictions) []string { return v.Users }).(pulumi.StringArrayOutput)
}

type BranchProtectionV3RestrictionsPtrOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3Restrictions)(nil)).Elem()
}

func (o BranchProtectionV3RestrictionsPtrOutput) ToBranchProtectionV3RestrictionsPtrOutput() BranchProtectionV3RestrictionsPtrOutput {
	return o
}

func (o BranchProtectionV3RestrictionsPtrOutput) ToBranchProtectionV3RestrictionsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsPtrOutput {
	return o
}

func (o BranchProtectionV3RestrictionsPtrOutput) Elem() BranchProtectionV3RestrictionsOutput {
	return o.ApplyT(func(v *BranchProtectionV3Restrictions) BranchProtectionV3Restrictions { return *v }).(BranchProtectionV3RestrictionsOutput)
}

func (o BranchProtectionV3RestrictionsPtrOutput) Apps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3Restrictions) []string {
		if v == nil {
			return nil
		}
		return v.Apps
	}).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RestrictionsPtrOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3Restrictions) []string {
		if v == nil {
			return nil
		}
		return v.Teams
	}).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RestrictionsPtrOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3Restrictions) []string {
		if v == nil {
			return nil
		}
		return v.Users
	}).(pulumi.StringArrayOutput)
}

type OrganizationWebhookConfiguration struct {
	ContentType *string `pulumi:"contentType"`
	InsecureSsl *bool   `pulumi:"insecureSsl"`
	Secret      *string `pulumi:"secret"`
	// URL of the webhook
	Url string `pulumi:"url"`
}

// OrganizationWebhookConfigurationInput is an input type that accepts OrganizationWebhookConfigurationArgs and OrganizationWebhookConfigurationOutput values.
// You can construct a concrete instance of `OrganizationWebhookConfigurationInput` via:
//
//          OrganizationWebhookConfigurationArgs{...}
type OrganizationWebhookConfigurationInput interface {
	pulumi.Input

	ToOrganizationWebhookConfigurationOutput() OrganizationWebhookConfigurationOutput
	ToOrganizationWebhookConfigurationOutputWithContext(context.Context) OrganizationWebhookConfigurationOutput
}

type OrganizationWebhookConfigurationArgs struct {
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	InsecureSsl pulumi.BoolPtrInput   `pulumi:"insecureSsl"`
	Secret      pulumi.StringPtrInput `pulumi:"secret"`
	// URL of the webhook
	Url pulumi.StringInput `pulumi:"url"`
}

func (OrganizationWebhookConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationWebhookConfiguration)(nil)).Elem()
}

func (i OrganizationWebhookConfigurationArgs) ToOrganizationWebhookConfigurationOutput() OrganizationWebhookConfigurationOutput {
	return i.ToOrganizationWebhookConfigurationOutputWithContext(context.Background())
}

func (i OrganizationWebhookConfigurationArgs) ToOrganizationWebhookConfigurationOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationWebhookConfigurationOutput)
}

func (i OrganizationWebhookConfigurationArgs) ToOrganizationWebhookConfigurationPtrOutput() OrganizationWebhookConfigurationPtrOutput {
	return i.ToOrganizationWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (i OrganizationWebhookConfigurationArgs) ToOrganizationWebhookConfigurationPtrOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationWebhookConfigurationOutput).ToOrganizationWebhookConfigurationPtrOutputWithContext(ctx)
}

// OrganizationWebhookConfigurationPtrInput is an input type that accepts OrganizationWebhookConfigurationArgs, OrganizationWebhookConfigurationPtr and OrganizationWebhookConfigurationPtrOutput values.
// You can construct a concrete instance of `OrganizationWebhookConfigurationPtrInput` via:
//
//          OrganizationWebhookConfigurationArgs{...}
//
//  or:
//
//          nil
type OrganizationWebhookConfigurationPtrInput interface {
	pulumi.Input

	ToOrganizationWebhookConfigurationPtrOutput() OrganizationWebhookConfigurationPtrOutput
	ToOrganizationWebhookConfigurationPtrOutputWithContext(context.Context) OrganizationWebhookConfigurationPtrOutput
}

type organizationWebhookConfigurationPtrType OrganizationWebhookConfigurationArgs

func OrganizationWebhookConfigurationPtr(v *OrganizationWebhookConfigurationArgs) OrganizationWebhookConfigurationPtrInput {
	return (*organizationWebhookConfigurationPtrType)(v)
}

func (*organizationWebhookConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationWebhookConfiguration)(nil)).Elem()
}

func (i *organizationWebhookConfigurationPtrType) ToOrganizationWebhookConfigurationPtrOutput() OrganizationWebhookConfigurationPtrOutput {
	return i.ToOrganizationWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (i *organizationWebhookConfigurationPtrType) ToOrganizationWebhookConfigurationPtrOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationWebhookConfigurationPtrOutput)
}

type OrganizationWebhookConfigurationOutput struct{ *pulumi.OutputState }

func (OrganizationWebhookConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationWebhookConfiguration)(nil)).Elem()
}

func (o OrganizationWebhookConfigurationOutput) ToOrganizationWebhookConfigurationOutput() OrganizationWebhookConfigurationOutput {
	return o
}

func (o OrganizationWebhookConfigurationOutput) ToOrganizationWebhookConfigurationOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationOutput {
	return o
}

func (o OrganizationWebhookConfigurationOutput) ToOrganizationWebhookConfigurationPtrOutput() OrganizationWebhookConfigurationPtrOutput {
	return o.ToOrganizationWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (o OrganizationWebhookConfigurationOutput) ToOrganizationWebhookConfigurationPtrOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationPtrOutput {
	return o.ApplyT(func(v OrganizationWebhookConfiguration) *OrganizationWebhookConfiguration {
		return &v
	}).(OrganizationWebhookConfigurationPtrOutput)
}
func (o OrganizationWebhookConfigurationOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationWebhookConfiguration) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

func (o OrganizationWebhookConfigurationOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationWebhookConfiguration) *bool { return v.InsecureSsl }).(pulumi.BoolPtrOutput)
}

func (o OrganizationWebhookConfigurationOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationWebhookConfiguration) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// URL of the webhook
func (o OrganizationWebhookConfigurationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationWebhookConfiguration) string { return v.Url }).(pulumi.StringOutput)
}

type OrganizationWebhookConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OrganizationWebhookConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationWebhookConfiguration)(nil)).Elem()
}

func (o OrganizationWebhookConfigurationPtrOutput) ToOrganizationWebhookConfigurationPtrOutput() OrganizationWebhookConfigurationPtrOutput {
	return o
}

func (o OrganizationWebhookConfigurationPtrOutput) ToOrganizationWebhookConfigurationPtrOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationPtrOutput {
	return o
}

func (o OrganizationWebhookConfigurationPtrOutput) Elem() OrganizationWebhookConfigurationOutput {
	return o.ApplyT(func(v *OrganizationWebhookConfiguration) OrganizationWebhookConfiguration { return *v }).(OrganizationWebhookConfigurationOutput)
}

func (o OrganizationWebhookConfigurationPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationWebhookConfigurationPtrOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationWebhookConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSsl
	}).(pulumi.BoolPtrOutput)
}

func (o OrganizationWebhookConfigurationPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// URL of the webhook
func (o OrganizationWebhookConfigurationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type RepositoryPages struct {
	// The custom domain for the repository. This can only be set after the repository has been created.
	Cname *string `pulumi:"cname"`
	// Whether the rendered GitHub Pages site has a custom 404 page.
	Custom404 *bool `pulumi:"custom404"`
	// The absolute URL (including scheme) of the rendered GitHub Pages site e.g. `https://username.github.io`.
	HtmlUrl *string `pulumi:"htmlUrl"`
	// The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
	Source RepositoryPagesSource `pulumi:"source"`
	// The GitHub Pages site's build status e.g. `building` or `built`.
	Status *string `pulumi:"status"`
	Url    *string `pulumi:"url"`
}

// RepositoryPagesInput is an input type that accepts RepositoryPagesArgs and RepositoryPagesOutput values.
// You can construct a concrete instance of `RepositoryPagesInput` via:
//
//          RepositoryPagesArgs{...}
type RepositoryPagesInput interface {
	pulumi.Input

	ToRepositoryPagesOutput() RepositoryPagesOutput
	ToRepositoryPagesOutputWithContext(context.Context) RepositoryPagesOutput
}

type RepositoryPagesArgs struct {
	// The custom domain for the repository. This can only be set after the repository has been created.
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// Whether the rendered GitHub Pages site has a custom 404 page.
	Custom404 pulumi.BoolPtrInput `pulumi:"custom404"`
	// The absolute URL (including scheme) of the rendered GitHub Pages site e.g. `https://username.github.io`.
	HtmlUrl pulumi.StringPtrInput `pulumi:"htmlUrl"`
	// The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
	Source RepositoryPagesSourceInput `pulumi:"source"`
	// The GitHub Pages site's build status e.g. `building` or `built`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	Url    pulumi.StringPtrInput `pulumi:"url"`
}

func (RepositoryPagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPages)(nil)).Elem()
}

func (i RepositoryPagesArgs) ToRepositoryPagesOutput() RepositoryPagesOutput {
	return i.ToRepositoryPagesOutputWithContext(context.Background())
}

func (i RepositoryPagesArgs) ToRepositoryPagesOutputWithContext(ctx context.Context) RepositoryPagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesOutput)
}

func (i RepositoryPagesArgs) ToRepositoryPagesPtrOutput() RepositoryPagesPtrOutput {
	return i.ToRepositoryPagesPtrOutputWithContext(context.Background())
}

func (i RepositoryPagesArgs) ToRepositoryPagesPtrOutputWithContext(ctx context.Context) RepositoryPagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesOutput).ToRepositoryPagesPtrOutputWithContext(ctx)
}

// RepositoryPagesPtrInput is an input type that accepts RepositoryPagesArgs, RepositoryPagesPtr and RepositoryPagesPtrOutput values.
// You can construct a concrete instance of `RepositoryPagesPtrInput` via:
//
//          RepositoryPagesArgs{...}
//
//  or:
//
//          nil
type RepositoryPagesPtrInput interface {
	pulumi.Input

	ToRepositoryPagesPtrOutput() RepositoryPagesPtrOutput
	ToRepositoryPagesPtrOutputWithContext(context.Context) RepositoryPagesPtrOutput
}

type repositoryPagesPtrType RepositoryPagesArgs

func RepositoryPagesPtr(v *RepositoryPagesArgs) RepositoryPagesPtrInput {
	return (*repositoryPagesPtrType)(v)
}

func (*repositoryPagesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryPages)(nil)).Elem()
}

func (i *repositoryPagesPtrType) ToRepositoryPagesPtrOutput() RepositoryPagesPtrOutput {
	return i.ToRepositoryPagesPtrOutputWithContext(context.Background())
}

func (i *repositoryPagesPtrType) ToRepositoryPagesPtrOutputWithContext(ctx context.Context) RepositoryPagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesPtrOutput)
}

type RepositoryPagesOutput struct{ *pulumi.OutputState }

func (RepositoryPagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPages)(nil)).Elem()
}

func (o RepositoryPagesOutput) ToRepositoryPagesOutput() RepositoryPagesOutput {
	return o
}

func (o RepositoryPagesOutput) ToRepositoryPagesOutputWithContext(ctx context.Context) RepositoryPagesOutput {
	return o
}

func (o RepositoryPagesOutput) ToRepositoryPagesPtrOutput() RepositoryPagesPtrOutput {
	return o.ToRepositoryPagesPtrOutputWithContext(context.Background())
}

func (o RepositoryPagesOutput) ToRepositoryPagesPtrOutputWithContext(ctx context.Context) RepositoryPagesPtrOutput {
	return o.ApplyT(func(v RepositoryPages) *RepositoryPages {
		return &v
	}).(RepositoryPagesPtrOutput)
}

// The custom domain for the repository. This can only be set after the repository has been created.
func (o RepositoryPagesOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPages) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// Whether the rendered GitHub Pages site has a custom 404 page.
func (o RepositoryPagesOutput) Custom404() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepositoryPages) *bool { return v.Custom404 }).(pulumi.BoolPtrOutput)
}

// The absolute URL (including scheme) of the rendered GitHub Pages site e.g. `https://username.github.io`.
func (o RepositoryPagesOutput) HtmlUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPages) *string { return v.HtmlUrl }).(pulumi.StringPtrOutput)
}

// The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
func (o RepositoryPagesOutput) Source() RepositoryPagesSourceOutput {
	return o.ApplyT(func(v RepositoryPages) RepositoryPagesSource { return v.Source }).(RepositoryPagesSourceOutput)
}

// The GitHub Pages site's build status e.g. `building` or `built`.
func (o RepositoryPagesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPages) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o RepositoryPagesOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPages) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type RepositoryPagesPtrOutput struct{ *pulumi.OutputState }

func (RepositoryPagesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryPages)(nil)).Elem()
}

func (o RepositoryPagesPtrOutput) ToRepositoryPagesPtrOutput() RepositoryPagesPtrOutput {
	return o
}

func (o RepositoryPagesPtrOutput) ToRepositoryPagesPtrOutputWithContext(ctx context.Context) RepositoryPagesPtrOutput {
	return o
}

func (o RepositoryPagesPtrOutput) Elem() RepositoryPagesOutput {
	return o.ApplyT(func(v *RepositoryPages) RepositoryPages { return *v }).(RepositoryPagesOutput)
}

// The custom domain for the repository. This can only be set after the repository has been created.
func (o RepositoryPagesPtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// Whether the rendered GitHub Pages site has a custom 404 page.
func (o RepositoryPagesPtrOutput) Custom404() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *bool {
		if v == nil {
			return nil
		}
		return v.Custom404
	}).(pulumi.BoolPtrOutput)
}

// The absolute URL (including scheme) of the rendered GitHub Pages site e.g. `https://username.github.io`.
func (o RepositoryPagesPtrOutput) HtmlUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *string {
		if v == nil {
			return nil
		}
		return v.HtmlUrl
	}).(pulumi.StringPtrOutput)
}

// The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
func (o RepositoryPagesPtrOutput) Source() RepositoryPagesSourcePtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *RepositoryPagesSource {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(RepositoryPagesSourcePtrOutput)
}

// The GitHub Pages site's build status e.g. `building` or `built`.
func (o RepositoryPagesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryPagesPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type RepositoryPagesSource struct {
	// The repository branch used to publish the site's source files. (i.e. `main` or `gh-pages`.
	Branch string `pulumi:"branch"`
	// The repository directory from which the site publishes (Default: `/`).
	Path *string `pulumi:"path"`
}

// RepositoryPagesSourceInput is an input type that accepts RepositoryPagesSourceArgs and RepositoryPagesSourceOutput values.
// You can construct a concrete instance of `RepositoryPagesSourceInput` via:
//
//          RepositoryPagesSourceArgs{...}
type RepositoryPagesSourceInput interface {
	pulumi.Input

	ToRepositoryPagesSourceOutput() RepositoryPagesSourceOutput
	ToRepositoryPagesSourceOutputWithContext(context.Context) RepositoryPagesSourceOutput
}

type RepositoryPagesSourceArgs struct {
	// The repository branch used to publish the site's source files. (i.e. `main` or `gh-pages`.
	Branch pulumi.StringInput `pulumi:"branch"`
	// The repository directory from which the site publishes (Default: `/`).
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (RepositoryPagesSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPagesSource)(nil)).Elem()
}

func (i RepositoryPagesSourceArgs) ToRepositoryPagesSourceOutput() RepositoryPagesSourceOutput {
	return i.ToRepositoryPagesSourceOutputWithContext(context.Background())
}

func (i RepositoryPagesSourceArgs) ToRepositoryPagesSourceOutputWithContext(ctx context.Context) RepositoryPagesSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesSourceOutput)
}

func (i RepositoryPagesSourceArgs) ToRepositoryPagesSourcePtrOutput() RepositoryPagesSourcePtrOutput {
	return i.ToRepositoryPagesSourcePtrOutputWithContext(context.Background())
}

func (i RepositoryPagesSourceArgs) ToRepositoryPagesSourcePtrOutputWithContext(ctx context.Context) RepositoryPagesSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesSourceOutput).ToRepositoryPagesSourcePtrOutputWithContext(ctx)
}

// RepositoryPagesSourcePtrInput is an input type that accepts RepositoryPagesSourceArgs, RepositoryPagesSourcePtr and RepositoryPagesSourcePtrOutput values.
// You can construct a concrete instance of `RepositoryPagesSourcePtrInput` via:
//
//          RepositoryPagesSourceArgs{...}
//
//  or:
//
//          nil
type RepositoryPagesSourcePtrInput interface {
	pulumi.Input

	ToRepositoryPagesSourcePtrOutput() RepositoryPagesSourcePtrOutput
	ToRepositoryPagesSourcePtrOutputWithContext(context.Context) RepositoryPagesSourcePtrOutput
}

type repositoryPagesSourcePtrType RepositoryPagesSourceArgs

func RepositoryPagesSourcePtr(v *RepositoryPagesSourceArgs) RepositoryPagesSourcePtrInput {
	return (*repositoryPagesSourcePtrType)(v)
}

func (*repositoryPagesSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryPagesSource)(nil)).Elem()
}

func (i *repositoryPagesSourcePtrType) ToRepositoryPagesSourcePtrOutput() RepositoryPagesSourcePtrOutput {
	return i.ToRepositoryPagesSourcePtrOutputWithContext(context.Background())
}

func (i *repositoryPagesSourcePtrType) ToRepositoryPagesSourcePtrOutputWithContext(ctx context.Context) RepositoryPagesSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesSourcePtrOutput)
}

type RepositoryPagesSourceOutput struct{ *pulumi.OutputState }

func (RepositoryPagesSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPagesSource)(nil)).Elem()
}

func (o RepositoryPagesSourceOutput) ToRepositoryPagesSourceOutput() RepositoryPagesSourceOutput {
	return o
}

func (o RepositoryPagesSourceOutput) ToRepositoryPagesSourceOutputWithContext(ctx context.Context) RepositoryPagesSourceOutput {
	return o
}

func (o RepositoryPagesSourceOutput) ToRepositoryPagesSourcePtrOutput() RepositoryPagesSourcePtrOutput {
	return o.ToRepositoryPagesSourcePtrOutputWithContext(context.Background())
}

func (o RepositoryPagesSourceOutput) ToRepositoryPagesSourcePtrOutputWithContext(ctx context.Context) RepositoryPagesSourcePtrOutput {
	return o.ApplyT(func(v RepositoryPagesSource) *RepositoryPagesSource {
		return &v
	}).(RepositoryPagesSourcePtrOutput)
}

// The repository branch used to publish the site's source files. (i.e. `main` or `gh-pages`.
func (o RepositoryPagesSourceOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryPagesSource) string { return v.Branch }).(pulumi.StringOutput)
}

// The repository directory from which the site publishes (Default: `/`).
func (o RepositoryPagesSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPagesSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type RepositoryPagesSourcePtrOutput struct{ *pulumi.OutputState }

func (RepositoryPagesSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryPagesSource)(nil)).Elem()
}

func (o RepositoryPagesSourcePtrOutput) ToRepositoryPagesSourcePtrOutput() RepositoryPagesSourcePtrOutput {
	return o
}

func (o RepositoryPagesSourcePtrOutput) ToRepositoryPagesSourcePtrOutputWithContext(ctx context.Context) RepositoryPagesSourcePtrOutput {
	return o
}

func (o RepositoryPagesSourcePtrOutput) Elem() RepositoryPagesSourceOutput {
	return o.ApplyT(func(v *RepositoryPagesSource) RepositoryPagesSource { return *v }).(RepositoryPagesSourceOutput)
}

// The repository branch used to publish the site's source files. (i.e. `main` or `gh-pages`.
func (o RepositoryPagesSourcePtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPagesSource) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

// The repository directory from which the site publishes (Default: `/`).
func (o RepositoryPagesSourcePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPagesSource) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type RepositoryTemplate struct {
	Owner      string `pulumi:"owner"`
	Repository string `pulumi:"repository"`
}

// RepositoryTemplateInput is an input type that accepts RepositoryTemplateArgs and RepositoryTemplateOutput values.
// You can construct a concrete instance of `RepositoryTemplateInput` via:
//
//          RepositoryTemplateArgs{...}
type RepositoryTemplateInput interface {
	pulumi.Input

	ToRepositoryTemplateOutput() RepositoryTemplateOutput
	ToRepositoryTemplateOutputWithContext(context.Context) RepositoryTemplateOutput
}

type RepositoryTemplateArgs struct {
	Owner      pulumi.StringInput `pulumi:"owner"`
	Repository pulumi.StringInput `pulumi:"repository"`
}

func (RepositoryTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryTemplate)(nil)).Elem()
}

func (i RepositoryTemplateArgs) ToRepositoryTemplateOutput() RepositoryTemplateOutput {
	return i.ToRepositoryTemplateOutputWithContext(context.Background())
}

func (i RepositoryTemplateArgs) ToRepositoryTemplateOutputWithContext(ctx context.Context) RepositoryTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryTemplateOutput)
}

func (i RepositoryTemplateArgs) ToRepositoryTemplatePtrOutput() RepositoryTemplatePtrOutput {
	return i.ToRepositoryTemplatePtrOutputWithContext(context.Background())
}

func (i RepositoryTemplateArgs) ToRepositoryTemplatePtrOutputWithContext(ctx context.Context) RepositoryTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryTemplateOutput).ToRepositoryTemplatePtrOutputWithContext(ctx)
}

// RepositoryTemplatePtrInput is an input type that accepts RepositoryTemplateArgs, RepositoryTemplatePtr and RepositoryTemplatePtrOutput values.
// You can construct a concrete instance of `RepositoryTemplatePtrInput` via:
//
//          RepositoryTemplateArgs{...}
//
//  or:
//
//          nil
type RepositoryTemplatePtrInput interface {
	pulumi.Input

	ToRepositoryTemplatePtrOutput() RepositoryTemplatePtrOutput
	ToRepositoryTemplatePtrOutputWithContext(context.Context) RepositoryTemplatePtrOutput
}

type repositoryTemplatePtrType RepositoryTemplateArgs

func RepositoryTemplatePtr(v *RepositoryTemplateArgs) RepositoryTemplatePtrInput {
	return (*repositoryTemplatePtrType)(v)
}

func (*repositoryTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryTemplate)(nil)).Elem()
}

func (i *repositoryTemplatePtrType) ToRepositoryTemplatePtrOutput() RepositoryTemplatePtrOutput {
	return i.ToRepositoryTemplatePtrOutputWithContext(context.Background())
}

func (i *repositoryTemplatePtrType) ToRepositoryTemplatePtrOutputWithContext(ctx context.Context) RepositoryTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryTemplatePtrOutput)
}

type RepositoryTemplateOutput struct{ *pulumi.OutputState }

func (RepositoryTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryTemplate)(nil)).Elem()
}

func (o RepositoryTemplateOutput) ToRepositoryTemplateOutput() RepositoryTemplateOutput {
	return o
}

func (o RepositoryTemplateOutput) ToRepositoryTemplateOutputWithContext(ctx context.Context) RepositoryTemplateOutput {
	return o
}

func (o RepositoryTemplateOutput) ToRepositoryTemplatePtrOutput() RepositoryTemplatePtrOutput {
	return o.ToRepositoryTemplatePtrOutputWithContext(context.Background())
}

func (o RepositoryTemplateOutput) ToRepositoryTemplatePtrOutputWithContext(ctx context.Context) RepositoryTemplatePtrOutput {
	return o.ApplyT(func(v RepositoryTemplate) *RepositoryTemplate {
		return &v
	}).(RepositoryTemplatePtrOutput)
}
func (o RepositoryTemplateOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryTemplate) string { return v.Owner }).(pulumi.StringOutput)
}

func (o RepositoryTemplateOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryTemplate) string { return v.Repository }).(pulumi.StringOutput)
}

type RepositoryTemplatePtrOutput struct{ *pulumi.OutputState }

func (RepositoryTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryTemplate)(nil)).Elem()
}

func (o RepositoryTemplatePtrOutput) ToRepositoryTemplatePtrOutput() RepositoryTemplatePtrOutput {
	return o
}

func (o RepositoryTemplatePtrOutput) ToRepositoryTemplatePtrOutputWithContext(ctx context.Context) RepositoryTemplatePtrOutput {
	return o
}

func (o RepositoryTemplatePtrOutput) Elem() RepositoryTemplateOutput {
	return o.ApplyT(func(v *RepositoryTemplate) RepositoryTemplate { return *v }).(RepositoryTemplateOutput)
}

func (o RepositoryTemplatePtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Owner
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryTemplatePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

type RepositoryWebhookConfiguration struct {
	ContentType *string `pulumi:"contentType"`
	InsecureSsl *bool   `pulumi:"insecureSsl"`
	Secret      *string `pulumi:"secret"`
	// URL of the webhook.  This is a sensitive attribute because it may include basic auth credentials.
	Url string `pulumi:"url"`
}

// RepositoryWebhookConfigurationInput is an input type that accepts RepositoryWebhookConfigurationArgs and RepositoryWebhookConfigurationOutput values.
// You can construct a concrete instance of `RepositoryWebhookConfigurationInput` via:
//
//          RepositoryWebhookConfigurationArgs{...}
type RepositoryWebhookConfigurationInput interface {
	pulumi.Input

	ToRepositoryWebhookConfigurationOutput() RepositoryWebhookConfigurationOutput
	ToRepositoryWebhookConfigurationOutputWithContext(context.Context) RepositoryWebhookConfigurationOutput
}

type RepositoryWebhookConfigurationArgs struct {
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	InsecureSsl pulumi.BoolPtrInput   `pulumi:"insecureSsl"`
	Secret      pulumi.StringPtrInput `pulumi:"secret"`
	// URL of the webhook.  This is a sensitive attribute because it may include basic auth credentials.
	Url pulumi.StringInput `pulumi:"url"`
}

func (RepositoryWebhookConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWebhookConfiguration)(nil)).Elem()
}

func (i RepositoryWebhookConfigurationArgs) ToRepositoryWebhookConfigurationOutput() RepositoryWebhookConfigurationOutput {
	return i.ToRepositoryWebhookConfigurationOutputWithContext(context.Background())
}

func (i RepositoryWebhookConfigurationArgs) ToRepositoryWebhookConfigurationOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWebhookConfigurationOutput)
}

func (i RepositoryWebhookConfigurationArgs) ToRepositoryWebhookConfigurationPtrOutput() RepositoryWebhookConfigurationPtrOutput {
	return i.ToRepositoryWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (i RepositoryWebhookConfigurationArgs) ToRepositoryWebhookConfigurationPtrOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWebhookConfigurationOutput).ToRepositoryWebhookConfigurationPtrOutputWithContext(ctx)
}

// RepositoryWebhookConfigurationPtrInput is an input type that accepts RepositoryWebhookConfigurationArgs, RepositoryWebhookConfigurationPtr and RepositoryWebhookConfigurationPtrOutput values.
// You can construct a concrete instance of `RepositoryWebhookConfigurationPtrInput` via:
//
//          RepositoryWebhookConfigurationArgs{...}
//
//  or:
//
//          nil
type RepositoryWebhookConfigurationPtrInput interface {
	pulumi.Input

	ToRepositoryWebhookConfigurationPtrOutput() RepositoryWebhookConfigurationPtrOutput
	ToRepositoryWebhookConfigurationPtrOutputWithContext(context.Context) RepositoryWebhookConfigurationPtrOutput
}

type repositoryWebhookConfigurationPtrType RepositoryWebhookConfigurationArgs

func RepositoryWebhookConfigurationPtr(v *RepositoryWebhookConfigurationArgs) RepositoryWebhookConfigurationPtrInput {
	return (*repositoryWebhookConfigurationPtrType)(v)
}

func (*repositoryWebhookConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryWebhookConfiguration)(nil)).Elem()
}

func (i *repositoryWebhookConfigurationPtrType) ToRepositoryWebhookConfigurationPtrOutput() RepositoryWebhookConfigurationPtrOutput {
	return i.ToRepositoryWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (i *repositoryWebhookConfigurationPtrType) ToRepositoryWebhookConfigurationPtrOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWebhookConfigurationPtrOutput)
}

type RepositoryWebhookConfigurationOutput struct{ *pulumi.OutputState }

func (RepositoryWebhookConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWebhookConfiguration)(nil)).Elem()
}

func (o RepositoryWebhookConfigurationOutput) ToRepositoryWebhookConfigurationOutput() RepositoryWebhookConfigurationOutput {
	return o
}

func (o RepositoryWebhookConfigurationOutput) ToRepositoryWebhookConfigurationOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationOutput {
	return o
}

func (o RepositoryWebhookConfigurationOutput) ToRepositoryWebhookConfigurationPtrOutput() RepositoryWebhookConfigurationPtrOutput {
	return o.ToRepositoryWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (o RepositoryWebhookConfigurationOutput) ToRepositoryWebhookConfigurationPtrOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationPtrOutput {
	return o.ApplyT(func(v RepositoryWebhookConfiguration) *RepositoryWebhookConfiguration {
		return &v
	}).(RepositoryWebhookConfigurationPtrOutput)
}
func (o RepositoryWebhookConfigurationOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWebhookConfiguration) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

func (o RepositoryWebhookConfigurationOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepositoryWebhookConfiguration) *bool { return v.InsecureSsl }).(pulumi.BoolPtrOutput)
}

func (o RepositoryWebhookConfigurationOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWebhookConfiguration) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// URL of the webhook.  This is a sensitive attribute because it may include basic auth credentials.
func (o RepositoryWebhookConfigurationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryWebhookConfiguration) string { return v.Url }).(pulumi.StringOutput)
}

type RepositoryWebhookConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RepositoryWebhookConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryWebhookConfiguration)(nil)).Elem()
}

func (o RepositoryWebhookConfigurationPtrOutput) ToRepositoryWebhookConfigurationPtrOutput() RepositoryWebhookConfigurationPtrOutput {
	return o
}

func (o RepositoryWebhookConfigurationPtrOutput) ToRepositoryWebhookConfigurationPtrOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationPtrOutput {
	return o
}

func (o RepositoryWebhookConfigurationPtrOutput) Elem() RepositoryWebhookConfigurationOutput {
	return o.ApplyT(func(v *RepositoryWebhookConfiguration) RepositoryWebhookConfiguration { return *v }).(RepositoryWebhookConfigurationOutput)
}

func (o RepositoryWebhookConfigurationPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryWebhookConfigurationPtrOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RepositoryWebhookConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSsl
	}).(pulumi.BoolPtrOutput)
}

func (o RepositoryWebhookConfigurationPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// URL of the webhook.  This is a sensitive attribute because it may include basic auth credentials.
func (o RepositoryWebhookConfigurationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type TeamSyncGroupMappingGroup struct {
	// The description of the IdP group.
	GroupDescription string `pulumi:"groupDescription"`
	// The ID of the IdP group.
	GroupId string `pulumi:"groupId"`
	// The name of the IdP group.
	GroupName string `pulumi:"groupName"`
}

// TeamSyncGroupMappingGroupInput is an input type that accepts TeamSyncGroupMappingGroupArgs and TeamSyncGroupMappingGroupOutput values.
// You can construct a concrete instance of `TeamSyncGroupMappingGroupInput` via:
//
//          TeamSyncGroupMappingGroupArgs{...}
type TeamSyncGroupMappingGroupInput interface {
	pulumi.Input

	ToTeamSyncGroupMappingGroupOutput() TeamSyncGroupMappingGroupOutput
	ToTeamSyncGroupMappingGroupOutputWithContext(context.Context) TeamSyncGroupMappingGroupOutput
}

type TeamSyncGroupMappingGroupArgs struct {
	// The description of the IdP group.
	GroupDescription pulumi.StringInput `pulumi:"groupDescription"`
	// The ID of the IdP group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The name of the IdP group.
	GroupName pulumi.StringInput `pulumi:"groupName"`
}

func (TeamSyncGroupMappingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamSyncGroupMappingGroup)(nil)).Elem()
}

func (i TeamSyncGroupMappingGroupArgs) ToTeamSyncGroupMappingGroupOutput() TeamSyncGroupMappingGroupOutput {
	return i.ToTeamSyncGroupMappingGroupOutputWithContext(context.Background())
}

func (i TeamSyncGroupMappingGroupArgs) ToTeamSyncGroupMappingGroupOutputWithContext(ctx context.Context) TeamSyncGroupMappingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamSyncGroupMappingGroupOutput)
}

// TeamSyncGroupMappingGroupArrayInput is an input type that accepts TeamSyncGroupMappingGroupArray and TeamSyncGroupMappingGroupArrayOutput values.
// You can construct a concrete instance of `TeamSyncGroupMappingGroupArrayInput` via:
//
//          TeamSyncGroupMappingGroupArray{ TeamSyncGroupMappingGroupArgs{...} }
type TeamSyncGroupMappingGroupArrayInput interface {
	pulumi.Input

	ToTeamSyncGroupMappingGroupArrayOutput() TeamSyncGroupMappingGroupArrayOutput
	ToTeamSyncGroupMappingGroupArrayOutputWithContext(context.Context) TeamSyncGroupMappingGroupArrayOutput
}

type TeamSyncGroupMappingGroupArray []TeamSyncGroupMappingGroupInput

func (TeamSyncGroupMappingGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamSyncGroupMappingGroup)(nil)).Elem()
}

func (i TeamSyncGroupMappingGroupArray) ToTeamSyncGroupMappingGroupArrayOutput() TeamSyncGroupMappingGroupArrayOutput {
	return i.ToTeamSyncGroupMappingGroupArrayOutputWithContext(context.Background())
}

func (i TeamSyncGroupMappingGroupArray) ToTeamSyncGroupMappingGroupArrayOutputWithContext(ctx context.Context) TeamSyncGroupMappingGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamSyncGroupMappingGroupArrayOutput)
}

type TeamSyncGroupMappingGroupOutput struct{ *pulumi.OutputState }

func (TeamSyncGroupMappingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamSyncGroupMappingGroup)(nil)).Elem()
}

func (o TeamSyncGroupMappingGroupOutput) ToTeamSyncGroupMappingGroupOutput() TeamSyncGroupMappingGroupOutput {
	return o
}

func (o TeamSyncGroupMappingGroupOutput) ToTeamSyncGroupMappingGroupOutputWithContext(ctx context.Context) TeamSyncGroupMappingGroupOutput {
	return o
}

// The description of the IdP group.
func (o TeamSyncGroupMappingGroupOutput) GroupDescription() pulumi.StringOutput {
	return o.ApplyT(func(v TeamSyncGroupMappingGroup) string { return v.GroupDescription }).(pulumi.StringOutput)
}

// The ID of the IdP group.
func (o TeamSyncGroupMappingGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v TeamSyncGroupMappingGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// The name of the IdP group.
func (o TeamSyncGroupMappingGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v TeamSyncGroupMappingGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

type TeamSyncGroupMappingGroupArrayOutput struct{ *pulumi.OutputState }

func (TeamSyncGroupMappingGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamSyncGroupMappingGroup)(nil)).Elem()
}

func (o TeamSyncGroupMappingGroupArrayOutput) ToTeamSyncGroupMappingGroupArrayOutput() TeamSyncGroupMappingGroupArrayOutput {
	return o
}

func (o TeamSyncGroupMappingGroupArrayOutput) ToTeamSyncGroupMappingGroupArrayOutputWithContext(ctx context.Context) TeamSyncGroupMappingGroupArrayOutput {
	return o
}

func (o TeamSyncGroupMappingGroupArrayOutput) Index(i pulumi.IntInput) TeamSyncGroupMappingGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TeamSyncGroupMappingGroup {
		return vs[0].([]TeamSyncGroupMappingGroup)[vs[1].(int)]
	}).(TeamSyncGroupMappingGroupOutput)
}

type GetCollaboratorsCollaborator struct {
	// The GitHub API URL for the collaborator's events.
	EventsUrl string `pulumi:"eventsUrl"`
	// The GitHub API URL for the collaborator's followers.
	FollowersUrl string `pulumi:"followersUrl"`
	// The GitHub API URL for those following the collaborator.
	FollowingUrl string `pulumi:"followingUrl"`
	// The GitHub API URL for the collaborator's gists.
	GistsUrl string `pulumi:"gistsUrl"`
	// The GitHub HTML URL for the collaborator.
	HtmlUrl string `pulumi:"htmlUrl"`
	// The ID of the collaborator.
	Id int `pulumi:"id"`
	// The collaborator's login.
	Login string `pulumi:"login"`
	// The GitHub API URL for the collaborator's organizations.
	OrganizationsUrl string `pulumi:"organizationsUrl"`
	// The permission of the collaborator.
	Permission string `pulumi:"permission"`
	// The GitHub API URL for the collaborator's received events.
	ReceivedEventsUrl string `pulumi:"receivedEventsUrl"`
	// The GitHub API URL for the collaborator's repositories.
	ReposUrl string `pulumi:"reposUrl"`
	// Whether the user is a GitHub admin.
	SiteAdmin bool `pulumi:"siteAdmin"`
	// The GitHub API URL for the collaborator's starred repositories.
	StarredUrl string `pulumi:"starredUrl"`
	// The GitHub API URL for the collaborator's subscribed repositories.
	SubscriptionsUrl string `pulumi:"subscriptionsUrl"`
	// The type of the collaborator (ex. `user`).
	Type string `pulumi:"type"`
	// The GitHub API URL for the collaborator.
	Url string `pulumi:"url"`
}

// GetCollaboratorsCollaboratorInput is an input type that accepts GetCollaboratorsCollaboratorArgs and GetCollaboratorsCollaboratorOutput values.
// You can construct a concrete instance of `GetCollaboratorsCollaboratorInput` via:
//
//          GetCollaboratorsCollaboratorArgs{...}
type GetCollaboratorsCollaboratorInput interface {
	pulumi.Input

	ToGetCollaboratorsCollaboratorOutput() GetCollaboratorsCollaboratorOutput
	ToGetCollaboratorsCollaboratorOutputWithContext(context.Context) GetCollaboratorsCollaboratorOutput
}

type GetCollaboratorsCollaboratorArgs struct {
	// The GitHub API URL for the collaborator's events.
	EventsUrl pulumi.StringInput `pulumi:"eventsUrl"`
	// The GitHub API URL for the collaborator's followers.
	FollowersUrl pulumi.StringInput `pulumi:"followersUrl"`
	// The GitHub API URL for those following the collaborator.
	FollowingUrl pulumi.StringInput `pulumi:"followingUrl"`
	// The GitHub API URL for the collaborator's gists.
	GistsUrl pulumi.StringInput `pulumi:"gistsUrl"`
	// The GitHub HTML URL for the collaborator.
	HtmlUrl pulumi.StringInput `pulumi:"htmlUrl"`
	// The ID of the collaborator.
	Id pulumi.IntInput `pulumi:"id"`
	// The collaborator's login.
	Login pulumi.StringInput `pulumi:"login"`
	// The GitHub API URL for the collaborator's organizations.
	OrganizationsUrl pulumi.StringInput `pulumi:"organizationsUrl"`
	// The permission of the collaborator.
	Permission pulumi.StringInput `pulumi:"permission"`
	// The GitHub API URL for the collaborator's received events.
	ReceivedEventsUrl pulumi.StringInput `pulumi:"receivedEventsUrl"`
	// The GitHub API URL for the collaborator's repositories.
	ReposUrl pulumi.StringInput `pulumi:"reposUrl"`
	// Whether the user is a GitHub admin.
	SiteAdmin pulumi.BoolInput `pulumi:"siteAdmin"`
	// The GitHub API URL for the collaborator's starred repositories.
	StarredUrl pulumi.StringInput `pulumi:"starredUrl"`
	// The GitHub API URL for the collaborator's subscribed repositories.
	SubscriptionsUrl pulumi.StringInput `pulumi:"subscriptionsUrl"`
	// The type of the collaborator (ex. `user`).
	Type pulumi.StringInput `pulumi:"type"`
	// The GitHub API URL for the collaborator.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetCollaboratorsCollaboratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCollaboratorsCollaborator)(nil)).Elem()
}

func (i GetCollaboratorsCollaboratorArgs) ToGetCollaboratorsCollaboratorOutput() GetCollaboratorsCollaboratorOutput {
	return i.ToGetCollaboratorsCollaboratorOutputWithContext(context.Background())
}

func (i GetCollaboratorsCollaboratorArgs) ToGetCollaboratorsCollaboratorOutputWithContext(ctx context.Context) GetCollaboratorsCollaboratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCollaboratorsCollaboratorOutput)
}

// GetCollaboratorsCollaboratorArrayInput is an input type that accepts GetCollaboratorsCollaboratorArray and GetCollaboratorsCollaboratorArrayOutput values.
// You can construct a concrete instance of `GetCollaboratorsCollaboratorArrayInput` via:
//
//          GetCollaboratorsCollaboratorArray{ GetCollaboratorsCollaboratorArgs{...} }
type GetCollaboratorsCollaboratorArrayInput interface {
	pulumi.Input

	ToGetCollaboratorsCollaboratorArrayOutput() GetCollaboratorsCollaboratorArrayOutput
	ToGetCollaboratorsCollaboratorArrayOutputWithContext(context.Context) GetCollaboratorsCollaboratorArrayOutput
}

type GetCollaboratorsCollaboratorArray []GetCollaboratorsCollaboratorInput

func (GetCollaboratorsCollaboratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCollaboratorsCollaborator)(nil)).Elem()
}

func (i GetCollaboratorsCollaboratorArray) ToGetCollaboratorsCollaboratorArrayOutput() GetCollaboratorsCollaboratorArrayOutput {
	return i.ToGetCollaboratorsCollaboratorArrayOutputWithContext(context.Background())
}

func (i GetCollaboratorsCollaboratorArray) ToGetCollaboratorsCollaboratorArrayOutputWithContext(ctx context.Context) GetCollaboratorsCollaboratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCollaboratorsCollaboratorArrayOutput)
}

type GetCollaboratorsCollaboratorOutput struct{ *pulumi.OutputState }

func (GetCollaboratorsCollaboratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCollaboratorsCollaborator)(nil)).Elem()
}

func (o GetCollaboratorsCollaboratorOutput) ToGetCollaboratorsCollaboratorOutput() GetCollaboratorsCollaboratorOutput {
	return o
}

func (o GetCollaboratorsCollaboratorOutput) ToGetCollaboratorsCollaboratorOutputWithContext(ctx context.Context) GetCollaboratorsCollaboratorOutput {
	return o
}

// The GitHub API URL for the collaborator's events.
func (o GetCollaboratorsCollaboratorOutput) EventsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.EventsUrl }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's followers.
func (o GetCollaboratorsCollaboratorOutput) FollowersUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.FollowersUrl }).(pulumi.StringOutput)
}

// The GitHub API URL for those following the collaborator.
func (o GetCollaboratorsCollaboratorOutput) FollowingUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.FollowingUrl }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's gists.
func (o GetCollaboratorsCollaboratorOutput) GistsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.GistsUrl }).(pulumi.StringOutput)
}

// The GitHub HTML URL for the collaborator.
func (o GetCollaboratorsCollaboratorOutput) HtmlUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.HtmlUrl }).(pulumi.StringOutput)
}

// The ID of the collaborator.
func (o GetCollaboratorsCollaboratorOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) int { return v.Id }).(pulumi.IntOutput)
}

// The collaborator's login.
func (o GetCollaboratorsCollaboratorOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.Login }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's organizations.
func (o GetCollaboratorsCollaboratorOutput) OrganizationsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.OrganizationsUrl }).(pulumi.StringOutput)
}

// The permission of the collaborator.
func (o GetCollaboratorsCollaboratorOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.Permission }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's received events.
func (o GetCollaboratorsCollaboratorOutput) ReceivedEventsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.ReceivedEventsUrl }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's repositories.
func (o GetCollaboratorsCollaboratorOutput) ReposUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.ReposUrl }).(pulumi.StringOutput)
}

// Whether the user is a GitHub admin.
func (o GetCollaboratorsCollaboratorOutput) SiteAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) bool { return v.SiteAdmin }).(pulumi.BoolOutput)
}

// The GitHub API URL for the collaborator's starred repositories.
func (o GetCollaboratorsCollaboratorOutput) StarredUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.StarredUrl }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's subscribed repositories.
func (o GetCollaboratorsCollaboratorOutput) SubscriptionsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.SubscriptionsUrl }).(pulumi.StringOutput)
}

// The type of the collaborator (ex. `user`).
func (o GetCollaboratorsCollaboratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.Type }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator.
func (o GetCollaboratorsCollaboratorOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.Url }).(pulumi.StringOutput)
}

type GetCollaboratorsCollaboratorArrayOutput struct{ *pulumi.OutputState }

func (GetCollaboratorsCollaboratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCollaboratorsCollaborator)(nil)).Elem()
}

func (o GetCollaboratorsCollaboratorArrayOutput) ToGetCollaboratorsCollaboratorArrayOutput() GetCollaboratorsCollaboratorArrayOutput {
	return o
}

func (o GetCollaboratorsCollaboratorArrayOutput) ToGetCollaboratorsCollaboratorArrayOutputWithContext(ctx context.Context) GetCollaboratorsCollaboratorArrayOutput {
	return o
}

func (o GetCollaboratorsCollaboratorArrayOutput) Index(i pulumi.IntInput) GetCollaboratorsCollaboratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCollaboratorsCollaborator {
		return vs[0].([]GetCollaboratorsCollaborator)[vs[1].(int)]
	}).(GetCollaboratorsCollaboratorOutput)
}

type GetOrganizationTeamSyncGroupsGroup struct {
	// The description of the IdP group.
	GroupDescription string `pulumi:"groupDescription"`
	// The ID of the IdP group.
	GroupId string `pulumi:"groupId"`
	// The name of the IdP group.
	GroupName string `pulumi:"groupName"`
}

// GetOrganizationTeamSyncGroupsGroupInput is an input type that accepts GetOrganizationTeamSyncGroupsGroupArgs and GetOrganizationTeamSyncGroupsGroupOutput values.
// You can construct a concrete instance of `GetOrganizationTeamSyncGroupsGroupInput` via:
//
//          GetOrganizationTeamSyncGroupsGroupArgs{...}
type GetOrganizationTeamSyncGroupsGroupInput interface {
	pulumi.Input

	ToGetOrganizationTeamSyncGroupsGroupOutput() GetOrganizationTeamSyncGroupsGroupOutput
	ToGetOrganizationTeamSyncGroupsGroupOutputWithContext(context.Context) GetOrganizationTeamSyncGroupsGroupOutput
}

type GetOrganizationTeamSyncGroupsGroupArgs struct {
	// The description of the IdP group.
	GroupDescription pulumi.StringInput `pulumi:"groupDescription"`
	// The ID of the IdP group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The name of the IdP group.
	GroupName pulumi.StringInput `pulumi:"groupName"`
}

func (GetOrganizationTeamSyncGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTeamSyncGroupsGroup)(nil)).Elem()
}

func (i GetOrganizationTeamSyncGroupsGroupArgs) ToGetOrganizationTeamSyncGroupsGroupOutput() GetOrganizationTeamSyncGroupsGroupOutput {
	return i.ToGetOrganizationTeamSyncGroupsGroupOutputWithContext(context.Background())
}

func (i GetOrganizationTeamSyncGroupsGroupArgs) ToGetOrganizationTeamSyncGroupsGroupOutputWithContext(ctx context.Context) GetOrganizationTeamSyncGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTeamSyncGroupsGroupOutput)
}

// GetOrganizationTeamSyncGroupsGroupArrayInput is an input type that accepts GetOrganizationTeamSyncGroupsGroupArray and GetOrganizationTeamSyncGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetOrganizationTeamSyncGroupsGroupArrayInput` via:
//
//          GetOrganizationTeamSyncGroupsGroupArray{ GetOrganizationTeamSyncGroupsGroupArgs{...} }
type GetOrganizationTeamSyncGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetOrganizationTeamSyncGroupsGroupArrayOutput() GetOrganizationTeamSyncGroupsGroupArrayOutput
	ToGetOrganizationTeamSyncGroupsGroupArrayOutputWithContext(context.Context) GetOrganizationTeamSyncGroupsGroupArrayOutput
}

type GetOrganizationTeamSyncGroupsGroupArray []GetOrganizationTeamSyncGroupsGroupInput

func (GetOrganizationTeamSyncGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTeamSyncGroupsGroup)(nil)).Elem()
}

func (i GetOrganizationTeamSyncGroupsGroupArray) ToGetOrganizationTeamSyncGroupsGroupArrayOutput() GetOrganizationTeamSyncGroupsGroupArrayOutput {
	return i.ToGetOrganizationTeamSyncGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetOrganizationTeamSyncGroupsGroupArray) ToGetOrganizationTeamSyncGroupsGroupArrayOutputWithContext(ctx context.Context) GetOrganizationTeamSyncGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTeamSyncGroupsGroupArrayOutput)
}

type GetOrganizationTeamSyncGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetOrganizationTeamSyncGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTeamSyncGroupsGroup)(nil)).Elem()
}

func (o GetOrganizationTeamSyncGroupsGroupOutput) ToGetOrganizationTeamSyncGroupsGroupOutput() GetOrganizationTeamSyncGroupsGroupOutput {
	return o
}

func (o GetOrganizationTeamSyncGroupsGroupOutput) ToGetOrganizationTeamSyncGroupsGroupOutputWithContext(ctx context.Context) GetOrganizationTeamSyncGroupsGroupOutput {
	return o
}

// The description of the IdP group.
func (o GetOrganizationTeamSyncGroupsGroupOutput) GroupDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTeamSyncGroupsGroup) string { return v.GroupDescription }).(pulumi.StringOutput)
}

// The ID of the IdP group.
func (o GetOrganizationTeamSyncGroupsGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTeamSyncGroupsGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// The name of the IdP group.
func (o GetOrganizationTeamSyncGroupsGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTeamSyncGroupsGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

type GetOrganizationTeamSyncGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationTeamSyncGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTeamSyncGroupsGroup)(nil)).Elem()
}

func (o GetOrganizationTeamSyncGroupsGroupArrayOutput) ToGetOrganizationTeamSyncGroupsGroupArrayOutput() GetOrganizationTeamSyncGroupsGroupArrayOutput {
	return o
}

func (o GetOrganizationTeamSyncGroupsGroupArrayOutput) ToGetOrganizationTeamSyncGroupsGroupArrayOutputWithContext(ctx context.Context) GetOrganizationTeamSyncGroupsGroupArrayOutput {
	return o
}

func (o GetOrganizationTeamSyncGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetOrganizationTeamSyncGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationTeamSyncGroupsGroup {
		return vs[0].([]GetOrganizationTeamSyncGroupsGroup)[vs[1].(int)]
	}).(GetOrganizationTeamSyncGroupsGroupOutput)
}

type GetRepositoryPage struct {
	Cname     string `pulumi:"cname"`
	Custom404 bool   `pulumi:"custom404"`
	// URL to the repository on the web.
	HtmlUrl string                    `pulumi:"htmlUrl"`
	Sources []GetRepositoryPageSource `pulumi:"sources"`
	Status  string                    `pulumi:"status"`
	Url     string                    `pulumi:"url"`
}

// GetRepositoryPageInput is an input type that accepts GetRepositoryPageArgs and GetRepositoryPageOutput values.
// You can construct a concrete instance of `GetRepositoryPageInput` via:
//
//          GetRepositoryPageArgs{...}
type GetRepositoryPageInput interface {
	pulumi.Input

	ToGetRepositoryPageOutput() GetRepositoryPageOutput
	ToGetRepositoryPageOutputWithContext(context.Context) GetRepositoryPageOutput
}

type GetRepositoryPageArgs struct {
	Cname     pulumi.StringInput `pulumi:"cname"`
	Custom404 pulumi.BoolInput   `pulumi:"custom404"`
	// URL to the repository on the web.
	HtmlUrl pulumi.StringInput                `pulumi:"htmlUrl"`
	Sources GetRepositoryPageSourceArrayInput `pulumi:"sources"`
	Status  pulumi.StringInput                `pulumi:"status"`
	Url     pulumi.StringInput                `pulumi:"url"`
}

func (GetRepositoryPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryPage)(nil)).Elem()
}

func (i GetRepositoryPageArgs) ToGetRepositoryPageOutput() GetRepositoryPageOutput {
	return i.ToGetRepositoryPageOutputWithContext(context.Background())
}

func (i GetRepositoryPageArgs) ToGetRepositoryPageOutputWithContext(ctx context.Context) GetRepositoryPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryPageOutput)
}

// GetRepositoryPageArrayInput is an input type that accepts GetRepositoryPageArray and GetRepositoryPageArrayOutput values.
// You can construct a concrete instance of `GetRepositoryPageArrayInput` via:
//
//          GetRepositoryPageArray{ GetRepositoryPageArgs{...} }
type GetRepositoryPageArrayInput interface {
	pulumi.Input

	ToGetRepositoryPageArrayOutput() GetRepositoryPageArrayOutput
	ToGetRepositoryPageArrayOutputWithContext(context.Context) GetRepositoryPageArrayOutput
}

type GetRepositoryPageArray []GetRepositoryPageInput

func (GetRepositoryPageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryPage)(nil)).Elem()
}

func (i GetRepositoryPageArray) ToGetRepositoryPageArrayOutput() GetRepositoryPageArrayOutput {
	return i.ToGetRepositoryPageArrayOutputWithContext(context.Background())
}

func (i GetRepositoryPageArray) ToGetRepositoryPageArrayOutputWithContext(ctx context.Context) GetRepositoryPageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryPageArrayOutput)
}

type GetRepositoryPageOutput struct{ *pulumi.OutputState }

func (GetRepositoryPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryPage)(nil)).Elem()
}

func (o GetRepositoryPageOutput) ToGetRepositoryPageOutput() GetRepositoryPageOutput {
	return o
}

func (o GetRepositoryPageOutput) ToGetRepositoryPageOutputWithContext(ctx context.Context) GetRepositoryPageOutput {
	return o
}

func (o GetRepositoryPageOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPage) string { return v.Cname }).(pulumi.StringOutput)
}

func (o GetRepositoryPageOutput) Custom404() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRepositoryPage) bool { return v.Custom404 }).(pulumi.BoolOutput)
}

// URL to the repository on the web.
func (o GetRepositoryPageOutput) HtmlUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPage) string { return v.HtmlUrl }).(pulumi.StringOutput)
}

func (o GetRepositoryPageOutput) Sources() GetRepositoryPageSourceArrayOutput {
	return o.ApplyT(func(v GetRepositoryPage) []GetRepositoryPageSource { return v.Sources }).(GetRepositoryPageSourceArrayOutput)
}

func (o GetRepositoryPageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPage) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetRepositoryPageOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPage) string { return v.Url }).(pulumi.StringOutput)
}

type GetRepositoryPageArrayOutput struct{ *pulumi.OutputState }

func (GetRepositoryPageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryPage)(nil)).Elem()
}

func (o GetRepositoryPageArrayOutput) ToGetRepositoryPageArrayOutput() GetRepositoryPageArrayOutput {
	return o
}

func (o GetRepositoryPageArrayOutput) ToGetRepositoryPageArrayOutputWithContext(ctx context.Context) GetRepositoryPageArrayOutput {
	return o
}

func (o GetRepositoryPageArrayOutput) Index(i pulumi.IntInput) GetRepositoryPageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRepositoryPage {
		return vs[0].([]GetRepositoryPage)[vs[1].(int)]
	}).(GetRepositoryPageOutput)
}

type GetRepositoryPageSource struct {
	Branch string `pulumi:"branch"`
	Path   string `pulumi:"path"`
}

// GetRepositoryPageSourceInput is an input type that accepts GetRepositoryPageSourceArgs and GetRepositoryPageSourceOutput values.
// You can construct a concrete instance of `GetRepositoryPageSourceInput` via:
//
//          GetRepositoryPageSourceArgs{...}
type GetRepositoryPageSourceInput interface {
	pulumi.Input

	ToGetRepositoryPageSourceOutput() GetRepositoryPageSourceOutput
	ToGetRepositoryPageSourceOutputWithContext(context.Context) GetRepositoryPageSourceOutput
}

type GetRepositoryPageSourceArgs struct {
	Branch pulumi.StringInput `pulumi:"branch"`
	Path   pulumi.StringInput `pulumi:"path"`
}

func (GetRepositoryPageSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryPageSource)(nil)).Elem()
}

func (i GetRepositoryPageSourceArgs) ToGetRepositoryPageSourceOutput() GetRepositoryPageSourceOutput {
	return i.ToGetRepositoryPageSourceOutputWithContext(context.Background())
}

func (i GetRepositoryPageSourceArgs) ToGetRepositoryPageSourceOutputWithContext(ctx context.Context) GetRepositoryPageSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryPageSourceOutput)
}

// GetRepositoryPageSourceArrayInput is an input type that accepts GetRepositoryPageSourceArray and GetRepositoryPageSourceArrayOutput values.
// You can construct a concrete instance of `GetRepositoryPageSourceArrayInput` via:
//
//          GetRepositoryPageSourceArray{ GetRepositoryPageSourceArgs{...} }
type GetRepositoryPageSourceArrayInput interface {
	pulumi.Input

	ToGetRepositoryPageSourceArrayOutput() GetRepositoryPageSourceArrayOutput
	ToGetRepositoryPageSourceArrayOutputWithContext(context.Context) GetRepositoryPageSourceArrayOutput
}

type GetRepositoryPageSourceArray []GetRepositoryPageSourceInput

func (GetRepositoryPageSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryPageSource)(nil)).Elem()
}

func (i GetRepositoryPageSourceArray) ToGetRepositoryPageSourceArrayOutput() GetRepositoryPageSourceArrayOutput {
	return i.ToGetRepositoryPageSourceArrayOutputWithContext(context.Background())
}

func (i GetRepositoryPageSourceArray) ToGetRepositoryPageSourceArrayOutputWithContext(ctx context.Context) GetRepositoryPageSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryPageSourceArrayOutput)
}

type GetRepositoryPageSourceOutput struct{ *pulumi.OutputState }

func (GetRepositoryPageSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryPageSource)(nil)).Elem()
}

func (o GetRepositoryPageSourceOutput) ToGetRepositoryPageSourceOutput() GetRepositoryPageSourceOutput {
	return o
}

func (o GetRepositoryPageSourceOutput) ToGetRepositoryPageSourceOutputWithContext(ctx context.Context) GetRepositoryPageSourceOutput {
	return o
}

func (o GetRepositoryPageSourceOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPageSource) string { return v.Branch }).(pulumi.StringOutput)
}

func (o GetRepositoryPageSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPageSource) string { return v.Path }).(pulumi.StringOutput)
}

type GetRepositoryPageSourceArrayOutput struct{ *pulumi.OutputState }

func (GetRepositoryPageSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryPageSource)(nil)).Elem()
}

func (o GetRepositoryPageSourceArrayOutput) ToGetRepositoryPageSourceArrayOutput() GetRepositoryPageSourceArrayOutput {
	return o
}

func (o GetRepositoryPageSourceArrayOutput) ToGetRepositoryPageSourceArrayOutputWithContext(ctx context.Context) GetRepositoryPageSourceArrayOutput {
	return o
}

func (o GetRepositoryPageSourceArrayOutput) Index(i pulumi.IntInput) GetRepositoryPageSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRepositoryPageSource {
		return vs[0].([]GetRepositoryPageSource)[vs[1].(int)]
	}).(GetRepositoryPageSourceOutput)
}

func init() {
	pulumi.RegisterOutputType(BranchProtectionRequiredPullRequestReviewOutput{})
	pulumi.RegisterOutputType(BranchProtectionRequiredPullRequestReviewArrayOutput{})
	pulumi.RegisterOutputType(BranchProtectionRequiredStatusCheckOutput{})
	pulumi.RegisterOutputType(BranchProtectionRequiredStatusCheckArrayOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RequiredPullRequestReviewsOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RequiredPullRequestReviewsPtrOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RequiredStatusChecksOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RequiredStatusChecksPtrOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RestrictionsOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RestrictionsPtrOutput{})
	pulumi.RegisterOutputType(OrganizationWebhookConfigurationOutput{})
	pulumi.RegisterOutputType(OrganizationWebhookConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RepositoryPagesOutput{})
	pulumi.RegisterOutputType(RepositoryPagesPtrOutput{})
	pulumi.RegisterOutputType(RepositoryPagesSourceOutput{})
	pulumi.RegisterOutputType(RepositoryPagesSourcePtrOutput{})
	pulumi.RegisterOutputType(RepositoryTemplateOutput{})
	pulumi.RegisterOutputType(RepositoryTemplatePtrOutput{})
	pulumi.RegisterOutputType(RepositoryWebhookConfigurationOutput{})
	pulumi.RegisterOutputType(RepositoryWebhookConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TeamSyncGroupMappingGroupOutput{})
	pulumi.RegisterOutputType(TeamSyncGroupMappingGroupArrayOutput{})
	pulumi.RegisterOutputType(GetCollaboratorsCollaboratorOutput{})
	pulumi.RegisterOutputType(GetCollaboratorsCollaboratorArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationTeamSyncGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetOrganizationTeamSyncGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetRepositoryPageOutput{})
	pulumi.RegisterOutputType(GetRepositoryPageArrayOutput{})
	pulumi.RegisterOutputType(GetRepositoryPageSourceOutput{})
	pulumi.RegisterOutputType(GetRepositoryPageSourceArrayOutput{})
}
