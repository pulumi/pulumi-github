// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ActionsOrganizationPermissionsAllowedActionsConfig struct {
	// Whether GitHub-owned actions are allowed in the organization.
	GithubOwnedAllowed bool `pulumi:"githubOwnedAllowed"`
	// Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, monalisa/octocat@*, monalisa/octocat@v2, monalisa/*."
	PatternsAlloweds []string `pulumi:"patternsAlloweds"`
	// Whether actions in GitHub Marketplace from verified creators are allowed. Set to true to allow all GitHub Marketplace actions by verified creators.
	VerifiedAllowed *bool `pulumi:"verifiedAllowed"`
}

// ActionsOrganizationPermissionsAllowedActionsConfigInput is an input type that accepts ActionsOrganizationPermissionsAllowedActionsConfigArgs and ActionsOrganizationPermissionsAllowedActionsConfigOutput values.
// You can construct a concrete instance of `ActionsOrganizationPermissionsAllowedActionsConfigInput` via:
//
//          ActionsOrganizationPermissionsAllowedActionsConfigArgs{...}
type ActionsOrganizationPermissionsAllowedActionsConfigInput interface {
	pulumi.Input

	ToActionsOrganizationPermissionsAllowedActionsConfigOutput() ActionsOrganizationPermissionsAllowedActionsConfigOutput
	ToActionsOrganizationPermissionsAllowedActionsConfigOutputWithContext(context.Context) ActionsOrganizationPermissionsAllowedActionsConfigOutput
}

type ActionsOrganizationPermissionsAllowedActionsConfigArgs struct {
	// Whether GitHub-owned actions are allowed in the organization.
	GithubOwnedAllowed pulumi.BoolInput `pulumi:"githubOwnedAllowed"`
	// Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, monalisa/octocat@*, monalisa/octocat@v2, monalisa/*."
	PatternsAlloweds pulumi.StringArrayInput `pulumi:"patternsAlloweds"`
	// Whether actions in GitHub Marketplace from verified creators are allowed. Set to true to allow all GitHub Marketplace actions by verified creators.
	VerifiedAllowed pulumi.BoolPtrInput `pulumi:"verifiedAllowed"`
}

func (ActionsOrganizationPermissionsAllowedActionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionsOrganizationPermissionsAllowedActionsConfig)(nil)).Elem()
}

func (i ActionsOrganizationPermissionsAllowedActionsConfigArgs) ToActionsOrganizationPermissionsAllowedActionsConfigOutput() ActionsOrganizationPermissionsAllowedActionsConfigOutput {
	return i.ToActionsOrganizationPermissionsAllowedActionsConfigOutputWithContext(context.Background())
}

func (i ActionsOrganizationPermissionsAllowedActionsConfigArgs) ToActionsOrganizationPermissionsAllowedActionsConfigOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsAllowedActionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionsOrganizationPermissionsAllowedActionsConfigOutput)
}

func (i ActionsOrganizationPermissionsAllowedActionsConfigArgs) ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutput() ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput {
	return i.ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutputWithContext(context.Background())
}

func (i ActionsOrganizationPermissionsAllowedActionsConfigArgs) ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionsOrganizationPermissionsAllowedActionsConfigOutput).ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutputWithContext(ctx)
}

// ActionsOrganizationPermissionsAllowedActionsConfigPtrInput is an input type that accepts ActionsOrganizationPermissionsAllowedActionsConfigArgs, ActionsOrganizationPermissionsAllowedActionsConfigPtr and ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput values.
// You can construct a concrete instance of `ActionsOrganizationPermissionsAllowedActionsConfigPtrInput` via:
//
//          ActionsOrganizationPermissionsAllowedActionsConfigArgs{...}
//
//  or:
//
//          nil
type ActionsOrganizationPermissionsAllowedActionsConfigPtrInput interface {
	pulumi.Input

	ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutput() ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput
	ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutputWithContext(context.Context) ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput
}

type actionsOrganizationPermissionsAllowedActionsConfigPtrType ActionsOrganizationPermissionsAllowedActionsConfigArgs

func ActionsOrganizationPermissionsAllowedActionsConfigPtr(v *ActionsOrganizationPermissionsAllowedActionsConfigArgs) ActionsOrganizationPermissionsAllowedActionsConfigPtrInput {
	return (*actionsOrganizationPermissionsAllowedActionsConfigPtrType)(v)
}

func (*actionsOrganizationPermissionsAllowedActionsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionsOrganizationPermissionsAllowedActionsConfig)(nil)).Elem()
}

func (i *actionsOrganizationPermissionsAllowedActionsConfigPtrType) ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutput() ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput {
	return i.ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutputWithContext(context.Background())
}

func (i *actionsOrganizationPermissionsAllowedActionsConfigPtrType) ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput)
}

type ActionsOrganizationPermissionsAllowedActionsConfigOutput struct{ *pulumi.OutputState }

func (ActionsOrganizationPermissionsAllowedActionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionsOrganizationPermissionsAllowedActionsConfig)(nil)).Elem()
}

func (o ActionsOrganizationPermissionsAllowedActionsConfigOutput) ToActionsOrganizationPermissionsAllowedActionsConfigOutput() ActionsOrganizationPermissionsAllowedActionsConfigOutput {
	return o
}

func (o ActionsOrganizationPermissionsAllowedActionsConfigOutput) ToActionsOrganizationPermissionsAllowedActionsConfigOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsAllowedActionsConfigOutput {
	return o
}

func (o ActionsOrganizationPermissionsAllowedActionsConfigOutput) ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutput() ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput {
	return o.ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutputWithContext(context.Background())
}

func (o ActionsOrganizationPermissionsAllowedActionsConfigOutput) ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionsOrganizationPermissionsAllowedActionsConfig) *ActionsOrganizationPermissionsAllowedActionsConfig {
		return &v
	}).(ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput)
}

// Whether GitHub-owned actions are allowed in the organization.
func (o ActionsOrganizationPermissionsAllowedActionsConfigOutput) GithubOwnedAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v ActionsOrganizationPermissionsAllowedActionsConfig) bool { return v.GithubOwnedAllowed }).(pulumi.BoolOutput)
}

// Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, monalisa/octocat@*, monalisa/octocat@v2, monalisa/*."
func (o ActionsOrganizationPermissionsAllowedActionsConfigOutput) PatternsAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActionsOrganizationPermissionsAllowedActionsConfig) []string { return v.PatternsAlloweds }).(pulumi.StringArrayOutput)
}

// Whether actions in GitHub Marketplace from verified creators are allowed. Set to true to allow all GitHub Marketplace actions by verified creators.
func (o ActionsOrganizationPermissionsAllowedActionsConfigOutput) VerifiedAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionsOrganizationPermissionsAllowedActionsConfig) *bool { return v.VerifiedAllowed }).(pulumi.BoolPtrOutput)
}

type ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput struct{ *pulumi.OutputState }

func (ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionsOrganizationPermissionsAllowedActionsConfig)(nil)).Elem()
}

func (o ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput) ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutput() ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput {
	return o
}

func (o ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput) ToActionsOrganizationPermissionsAllowedActionsConfigPtrOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput {
	return o
}

func (o ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput) Elem() ActionsOrganizationPermissionsAllowedActionsConfigOutput {
	return o.ApplyT(func(v *ActionsOrganizationPermissionsAllowedActionsConfig) ActionsOrganizationPermissionsAllowedActionsConfig {
		if v != nil {
			return *v
		}
		var ret ActionsOrganizationPermissionsAllowedActionsConfig
		return ret
	}).(ActionsOrganizationPermissionsAllowedActionsConfigOutput)
}

// Whether GitHub-owned actions are allowed in the organization.
func (o ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput) GithubOwnedAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionsOrganizationPermissionsAllowedActionsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.GithubOwnedAllowed
	}).(pulumi.BoolPtrOutput)
}

// Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, monalisa/octocat@*, monalisa/octocat@v2, monalisa/*."
func (o ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput) PatternsAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ActionsOrganizationPermissionsAllowedActionsConfig) []string {
		if v == nil {
			return nil
		}
		return v.PatternsAlloweds
	}).(pulumi.StringArrayOutput)
}

// Whether actions in GitHub Marketplace from verified creators are allowed. Set to true to allow all GitHub Marketplace actions by verified creators.
func (o ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput) VerifiedAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionsOrganizationPermissionsAllowedActionsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.VerifiedAllowed
	}).(pulumi.BoolPtrOutput)
}

type ActionsOrganizationPermissionsEnabledRepositoriesConfig struct {
	// List of repository IDs to enable for GitHub Actions.
	RepositoryIds []int `pulumi:"repositoryIds"`
}

// ActionsOrganizationPermissionsEnabledRepositoriesConfigInput is an input type that accepts ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs and ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput values.
// You can construct a concrete instance of `ActionsOrganizationPermissionsEnabledRepositoriesConfigInput` via:
//
//          ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs{...}
type ActionsOrganizationPermissionsEnabledRepositoriesConfigInput interface {
	pulumi.Input

	ToActionsOrganizationPermissionsEnabledRepositoriesConfigOutput() ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput
	ToActionsOrganizationPermissionsEnabledRepositoriesConfigOutputWithContext(context.Context) ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput
}

type ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs struct {
	// List of repository IDs to enable for GitHub Actions.
	RepositoryIds pulumi.IntArrayInput `pulumi:"repositoryIds"`
}

func (ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionsOrganizationPermissionsEnabledRepositoriesConfig)(nil)).Elem()
}

func (i ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs) ToActionsOrganizationPermissionsEnabledRepositoriesConfigOutput() ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput {
	return i.ToActionsOrganizationPermissionsEnabledRepositoriesConfigOutputWithContext(context.Background())
}

func (i ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs) ToActionsOrganizationPermissionsEnabledRepositoriesConfigOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput)
}

func (i ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs) ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput() ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput {
	return i.ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutputWithContext(context.Background())
}

func (i ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs) ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput).ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutputWithContext(ctx)
}

// ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrInput is an input type that accepts ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs, ActionsOrganizationPermissionsEnabledRepositoriesConfigPtr and ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput values.
// You can construct a concrete instance of `ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrInput` via:
//
//          ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs{...}
//
//  or:
//
//          nil
type ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrInput interface {
	pulumi.Input

	ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput() ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput
	ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutputWithContext(context.Context) ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput
}

type actionsOrganizationPermissionsEnabledRepositoriesConfigPtrType ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs

func ActionsOrganizationPermissionsEnabledRepositoriesConfigPtr(v *ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs) ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrInput {
	return (*actionsOrganizationPermissionsEnabledRepositoriesConfigPtrType)(v)
}

func (*actionsOrganizationPermissionsEnabledRepositoriesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionsOrganizationPermissionsEnabledRepositoriesConfig)(nil)).Elem()
}

func (i *actionsOrganizationPermissionsEnabledRepositoriesConfigPtrType) ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput() ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput {
	return i.ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutputWithContext(context.Background())
}

func (i *actionsOrganizationPermissionsEnabledRepositoriesConfigPtrType) ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput)
}

type ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput struct{ *pulumi.OutputState }

func (ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionsOrganizationPermissionsEnabledRepositoriesConfig)(nil)).Elem()
}

func (o ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput) ToActionsOrganizationPermissionsEnabledRepositoriesConfigOutput() ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput {
	return o
}

func (o ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput) ToActionsOrganizationPermissionsEnabledRepositoriesConfigOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput {
	return o
}

func (o ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput) ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput() ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput {
	return o.ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutputWithContext(context.Background())
}

func (o ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput) ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionsOrganizationPermissionsEnabledRepositoriesConfig) *ActionsOrganizationPermissionsEnabledRepositoriesConfig {
		return &v
	}).(ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput)
}

// List of repository IDs to enable for GitHub Actions.
func (o ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput) RepositoryIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ActionsOrganizationPermissionsEnabledRepositoriesConfig) []int { return v.RepositoryIds }).(pulumi.IntArrayOutput)
}

type ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput struct{ *pulumi.OutputState }

func (ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionsOrganizationPermissionsEnabledRepositoriesConfig)(nil)).Elem()
}

func (o ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput) ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput() ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput {
	return o
}

func (o ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput) ToActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutputWithContext(ctx context.Context) ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput {
	return o
}

func (o ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput) Elem() ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput {
	return o.ApplyT(func(v *ActionsOrganizationPermissionsEnabledRepositoriesConfig) ActionsOrganizationPermissionsEnabledRepositoriesConfig {
		if v != nil {
			return *v
		}
		var ret ActionsOrganizationPermissionsEnabledRepositoriesConfig
		return ret
	}).(ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput)
}

// List of repository IDs to enable for GitHub Actions.
func (o ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput) RepositoryIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ActionsOrganizationPermissionsEnabledRepositoriesConfig) []int {
		if v == nil {
			return nil
		}
		return v.RepositoryIds
	}).(pulumi.IntArrayOutput)
}

type BranchProtectionRequiredPullRequestReview struct {
	DismissStaleReviews          *bool    `pulumi:"dismissStaleReviews"`
	DismissalRestrictions        []string `pulumi:"dismissalRestrictions"`
	PullRequestBypassers         []string `pulumi:"pullRequestBypassers"`
	RequireCodeOwnerReviews      *bool    `pulumi:"requireCodeOwnerReviews"`
	RequiredApprovingReviewCount *int     `pulumi:"requiredApprovingReviewCount"`
	RestrictDismissals           *bool    `pulumi:"restrictDismissals"`
}

// BranchProtectionRequiredPullRequestReviewInput is an input type that accepts BranchProtectionRequiredPullRequestReviewArgs and BranchProtectionRequiredPullRequestReviewOutput values.
// You can construct a concrete instance of `BranchProtectionRequiredPullRequestReviewInput` via:
//
//          BranchProtectionRequiredPullRequestReviewArgs{...}
type BranchProtectionRequiredPullRequestReviewInput interface {
	pulumi.Input

	ToBranchProtectionRequiredPullRequestReviewOutput() BranchProtectionRequiredPullRequestReviewOutput
	ToBranchProtectionRequiredPullRequestReviewOutputWithContext(context.Context) BranchProtectionRequiredPullRequestReviewOutput
}

type BranchProtectionRequiredPullRequestReviewArgs struct {
	DismissStaleReviews          pulumi.BoolPtrInput     `pulumi:"dismissStaleReviews"`
	DismissalRestrictions        pulumi.StringArrayInput `pulumi:"dismissalRestrictions"`
	PullRequestBypassers         pulumi.StringArrayInput `pulumi:"pullRequestBypassers"`
	RequireCodeOwnerReviews      pulumi.BoolPtrInput     `pulumi:"requireCodeOwnerReviews"`
	RequiredApprovingReviewCount pulumi.IntPtrInput      `pulumi:"requiredApprovingReviewCount"`
	RestrictDismissals           pulumi.BoolPtrInput     `pulumi:"restrictDismissals"`
}

func (BranchProtectionRequiredPullRequestReviewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionRequiredPullRequestReview)(nil)).Elem()
}

func (i BranchProtectionRequiredPullRequestReviewArgs) ToBranchProtectionRequiredPullRequestReviewOutput() BranchProtectionRequiredPullRequestReviewOutput {
	return i.ToBranchProtectionRequiredPullRequestReviewOutputWithContext(context.Background())
}

func (i BranchProtectionRequiredPullRequestReviewArgs) ToBranchProtectionRequiredPullRequestReviewOutputWithContext(ctx context.Context) BranchProtectionRequiredPullRequestReviewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionRequiredPullRequestReviewOutput)
}

// BranchProtectionRequiredPullRequestReviewArrayInput is an input type that accepts BranchProtectionRequiredPullRequestReviewArray and BranchProtectionRequiredPullRequestReviewArrayOutput values.
// You can construct a concrete instance of `BranchProtectionRequiredPullRequestReviewArrayInput` via:
//
//          BranchProtectionRequiredPullRequestReviewArray{ BranchProtectionRequiredPullRequestReviewArgs{...} }
type BranchProtectionRequiredPullRequestReviewArrayInput interface {
	pulumi.Input

	ToBranchProtectionRequiredPullRequestReviewArrayOutput() BranchProtectionRequiredPullRequestReviewArrayOutput
	ToBranchProtectionRequiredPullRequestReviewArrayOutputWithContext(context.Context) BranchProtectionRequiredPullRequestReviewArrayOutput
}

type BranchProtectionRequiredPullRequestReviewArray []BranchProtectionRequiredPullRequestReviewInput

func (BranchProtectionRequiredPullRequestReviewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionRequiredPullRequestReview)(nil)).Elem()
}

func (i BranchProtectionRequiredPullRequestReviewArray) ToBranchProtectionRequiredPullRequestReviewArrayOutput() BranchProtectionRequiredPullRequestReviewArrayOutput {
	return i.ToBranchProtectionRequiredPullRequestReviewArrayOutputWithContext(context.Background())
}

func (i BranchProtectionRequiredPullRequestReviewArray) ToBranchProtectionRequiredPullRequestReviewArrayOutputWithContext(ctx context.Context) BranchProtectionRequiredPullRequestReviewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionRequiredPullRequestReviewArrayOutput)
}

type BranchProtectionRequiredPullRequestReviewOutput struct{ *pulumi.OutputState }

func (BranchProtectionRequiredPullRequestReviewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionRequiredPullRequestReview)(nil)).Elem()
}

func (o BranchProtectionRequiredPullRequestReviewOutput) ToBranchProtectionRequiredPullRequestReviewOutput() BranchProtectionRequiredPullRequestReviewOutput {
	return o
}

func (o BranchProtectionRequiredPullRequestReviewOutput) ToBranchProtectionRequiredPullRequestReviewOutputWithContext(ctx context.Context) BranchProtectionRequiredPullRequestReviewOutput {
	return o
}

func (o BranchProtectionRequiredPullRequestReviewOutput) DismissStaleReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionRequiredPullRequestReview) *bool { return v.DismissStaleReviews }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionRequiredPullRequestReviewOutput) DismissalRestrictions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionRequiredPullRequestReview) []string { return v.DismissalRestrictions }).(pulumi.StringArrayOutput)
}

func (o BranchProtectionRequiredPullRequestReviewOutput) PullRequestBypassers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionRequiredPullRequestReview) []string { return v.PullRequestBypassers }).(pulumi.StringArrayOutput)
}

func (o BranchProtectionRequiredPullRequestReviewOutput) RequireCodeOwnerReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionRequiredPullRequestReview) *bool { return v.RequireCodeOwnerReviews }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionRequiredPullRequestReviewOutput) RequiredApprovingReviewCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BranchProtectionRequiredPullRequestReview) *int { return v.RequiredApprovingReviewCount }).(pulumi.IntPtrOutput)
}

func (o BranchProtectionRequiredPullRequestReviewOutput) RestrictDismissals() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionRequiredPullRequestReview) *bool { return v.RestrictDismissals }).(pulumi.BoolPtrOutput)
}

type BranchProtectionRequiredPullRequestReviewArrayOutput struct{ *pulumi.OutputState }

func (BranchProtectionRequiredPullRequestReviewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionRequiredPullRequestReview)(nil)).Elem()
}

func (o BranchProtectionRequiredPullRequestReviewArrayOutput) ToBranchProtectionRequiredPullRequestReviewArrayOutput() BranchProtectionRequiredPullRequestReviewArrayOutput {
	return o
}

func (o BranchProtectionRequiredPullRequestReviewArrayOutput) ToBranchProtectionRequiredPullRequestReviewArrayOutputWithContext(ctx context.Context) BranchProtectionRequiredPullRequestReviewArrayOutput {
	return o
}

func (o BranchProtectionRequiredPullRequestReviewArrayOutput) Index(i pulumi.IntInput) BranchProtectionRequiredPullRequestReviewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BranchProtectionRequiredPullRequestReview {
		return vs[0].([]BranchProtectionRequiredPullRequestReview)[vs[1].(int)]
	}).(BranchProtectionRequiredPullRequestReviewOutput)
}

type BranchProtectionRequiredStatusCheck struct {
	Contexts []string `pulumi:"contexts"`
	Strict   *bool    `pulumi:"strict"`
}

// BranchProtectionRequiredStatusCheckInput is an input type that accepts BranchProtectionRequiredStatusCheckArgs and BranchProtectionRequiredStatusCheckOutput values.
// You can construct a concrete instance of `BranchProtectionRequiredStatusCheckInput` via:
//
//          BranchProtectionRequiredStatusCheckArgs{...}
type BranchProtectionRequiredStatusCheckInput interface {
	pulumi.Input

	ToBranchProtectionRequiredStatusCheckOutput() BranchProtectionRequiredStatusCheckOutput
	ToBranchProtectionRequiredStatusCheckOutputWithContext(context.Context) BranchProtectionRequiredStatusCheckOutput
}

type BranchProtectionRequiredStatusCheckArgs struct {
	Contexts pulumi.StringArrayInput `pulumi:"contexts"`
	Strict   pulumi.BoolPtrInput     `pulumi:"strict"`
}

func (BranchProtectionRequiredStatusCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionRequiredStatusCheck)(nil)).Elem()
}

func (i BranchProtectionRequiredStatusCheckArgs) ToBranchProtectionRequiredStatusCheckOutput() BranchProtectionRequiredStatusCheckOutput {
	return i.ToBranchProtectionRequiredStatusCheckOutputWithContext(context.Background())
}

func (i BranchProtectionRequiredStatusCheckArgs) ToBranchProtectionRequiredStatusCheckOutputWithContext(ctx context.Context) BranchProtectionRequiredStatusCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionRequiredStatusCheckOutput)
}

// BranchProtectionRequiredStatusCheckArrayInput is an input type that accepts BranchProtectionRequiredStatusCheckArray and BranchProtectionRequiredStatusCheckArrayOutput values.
// You can construct a concrete instance of `BranchProtectionRequiredStatusCheckArrayInput` via:
//
//          BranchProtectionRequiredStatusCheckArray{ BranchProtectionRequiredStatusCheckArgs{...} }
type BranchProtectionRequiredStatusCheckArrayInput interface {
	pulumi.Input

	ToBranchProtectionRequiredStatusCheckArrayOutput() BranchProtectionRequiredStatusCheckArrayOutput
	ToBranchProtectionRequiredStatusCheckArrayOutputWithContext(context.Context) BranchProtectionRequiredStatusCheckArrayOutput
}

type BranchProtectionRequiredStatusCheckArray []BranchProtectionRequiredStatusCheckInput

func (BranchProtectionRequiredStatusCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionRequiredStatusCheck)(nil)).Elem()
}

func (i BranchProtectionRequiredStatusCheckArray) ToBranchProtectionRequiredStatusCheckArrayOutput() BranchProtectionRequiredStatusCheckArrayOutput {
	return i.ToBranchProtectionRequiredStatusCheckArrayOutputWithContext(context.Background())
}

func (i BranchProtectionRequiredStatusCheckArray) ToBranchProtectionRequiredStatusCheckArrayOutputWithContext(ctx context.Context) BranchProtectionRequiredStatusCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionRequiredStatusCheckArrayOutput)
}

type BranchProtectionRequiredStatusCheckOutput struct{ *pulumi.OutputState }

func (BranchProtectionRequiredStatusCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionRequiredStatusCheck)(nil)).Elem()
}

func (o BranchProtectionRequiredStatusCheckOutput) ToBranchProtectionRequiredStatusCheckOutput() BranchProtectionRequiredStatusCheckOutput {
	return o
}

func (o BranchProtectionRequiredStatusCheckOutput) ToBranchProtectionRequiredStatusCheckOutputWithContext(ctx context.Context) BranchProtectionRequiredStatusCheckOutput {
	return o
}

func (o BranchProtectionRequiredStatusCheckOutput) Contexts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionRequiredStatusCheck) []string { return v.Contexts }).(pulumi.StringArrayOutput)
}

func (o BranchProtectionRequiredStatusCheckOutput) Strict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionRequiredStatusCheck) *bool { return v.Strict }).(pulumi.BoolPtrOutput)
}

type BranchProtectionRequiredStatusCheckArrayOutput struct{ *pulumi.OutputState }

func (BranchProtectionRequiredStatusCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionRequiredStatusCheck)(nil)).Elem()
}

func (o BranchProtectionRequiredStatusCheckArrayOutput) ToBranchProtectionRequiredStatusCheckArrayOutput() BranchProtectionRequiredStatusCheckArrayOutput {
	return o
}

func (o BranchProtectionRequiredStatusCheckArrayOutput) ToBranchProtectionRequiredStatusCheckArrayOutputWithContext(ctx context.Context) BranchProtectionRequiredStatusCheckArrayOutput {
	return o
}

func (o BranchProtectionRequiredStatusCheckArrayOutput) Index(i pulumi.IntInput) BranchProtectionRequiredStatusCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BranchProtectionRequiredStatusCheck {
		return vs[0].([]BranchProtectionRequiredStatusCheck)[vs[1].(int)]
	}).(BranchProtectionRequiredStatusCheckOutput)
}

type BranchProtectionV3RequiredPullRequestReviews struct {
	DismissStaleReviews *bool    `pulumi:"dismissStaleReviews"`
	DismissalTeams      []string `pulumi:"dismissalTeams"`
	DismissalUsers      []string `pulumi:"dismissalUsers"`
	// Deprecated: Use enforce_admins instead
	IncludeAdmins                *bool `pulumi:"includeAdmins"`
	RequireCodeOwnerReviews      *bool `pulumi:"requireCodeOwnerReviews"`
	RequiredApprovingReviewCount *int  `pulumi:"requiredApprovingReviewCount"`
}

// BranchProtectionV3RequiredPullRequestReviewsInput is an input type that accepts BranchProtectionV3RequiredPullRequestReviewsArgs and BranchProtectionV3RequiredPullRequestReviewsOutput values.
// You can construct a concrete instance of `BranchProtectionV3RequiredPullRequestReviewsInput` via:
//
//          BranchProtectionV3RequiredPullRequestReviewsArgs{...}
type BranchProtectionV3RequiredPullRequestReviewsInput interface {
	pulumi.Input

	ToBranchProtectionV3RequiredPullRequestReviewsOutput() BranchProtectionV3RequiredPullRequestReviewsOutput
	ToBranchProtectionV3RequiredPullRequestReviewsOutputWithContext(context.Context) BranchProtectionV3RequiredPullRequestReviewsOutput
}

type BranchProtectionV3RequiredPullRequestReviewsArgs struct {
	DismissStaleReviews pulumi.BoolPtrInput     `pulumi:"dismissStaleReviews"`
	DismissalTeams      pulumi.StringArrayInput `pulumi:"dismissalTeams"`
	DismissalUsers      pulumi.StringArrayInput `pulumi:"dismissalUsers"`
	// Deprecated: Use enforce_admins instead
	IncludeAdmins                pulumi.BoolPtrInput `pulumi:"includeAdmins"`
	RequireCodeOwnerReviews      pulumi.BoolPtrInput `pulumi:"requireCodeOwnerReviews"`
	RequiredApprovingReviewCount pulumi.IntPtrInput  `pulumi:"requiredApprovingReviewCount"`
}

func (BranchProtectionV3RequiredPullRequestReviewsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3RequiredPullRequestReviews)(nil)).Elem()
}

func (i BranchProtectionV3RequiredPullRequestReviewsArgs) ToBranchProtectionV3RequiredPullRequestReviewsOutput() BranchProtectionV3RequiredPullRequestReviewsOutput {
	return i.ToBranchProtectionV3RequiredPullRequestReviewsOutputWithContext(context.Background())
}

func (i BranchProtectionV3RequiredPullRequestReviewsArgs) ToBranchProtectionV3RequiredPullRequestReviewsOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredPullRequestReviewsOutput)
}

func (i BranchProtectionV3RequiredPullRequestReviewsArgs) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutput() BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return i.ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(context.Background())
}

func (i BranchProtectionV3RequiredPullRequestReviewsArgs) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredPullRequestReviewsOutput).ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(ctx)
}

// BranchProtectionV3RequiredPullRequestReviewsPtrInput is an input type that accepts BranchProtectionV3RequiredPullRequestReviewsArgs, BranchProtectionV3RequiredPullRequestReviewsPtr and BranchProtectionV3RequiredPullRequestReviewsPtrOutput values.
// You can construct a concrete instance of `BranchProtectionV3RequiredPullRequestReviewsPtrInput` via:
//
//          BranchProtectionV3RequiredPullRequestReviewsArgs{...}
//
//  or:
//
//          nil
type BranchProtectionV3RequiredPullRequestReviewsPtrInput interface {
	pulumi.Input

	ToBranchProtectionV3RequiredPullRequestReviewsPtrOutput() BranchProtectionV3RequiredPullRequestReviewsPtrOutput
	ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(context.Context) BranchProtectionV3RequiredPullRequestReviewsPtrOutput
}

type branchProtectionV3RequiredPullRequestReviewsPtrType BranchProtectionV3RequiredPullRequestReviewsArgs

func BranchProtectionV3RequiredPullRequestReviewsPtr(v *BranchProtectionV3RequiredPullRequestReviewsArgs) BranchProtectionV3RequiredPullRequestReviewsPtrInput {
	return (*branchProtectionV3RequiredPullRequestReviewsPtrType)(v)
}

func (*branchProtectionV3RequiredPullRequestReviewsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3RequiredPullRequestReviews)(nil)).Elem()
}

func (i *branchProtectionV3RequiredPullRequestReviewsPtrType) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutput() BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return i.ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(context.Background())
}

func (i *branchProtectionV3RequiredPullRequestReviewsPtrType) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredPullRequestReviewsPtrOutput)
}

type BranchProtectionV3RequiredPullRequestReviewsOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RequiredPullRequestReviewsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3RequiredPullRequestReviews)(nil)).Elem()
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) ToBranchProtectionV3RequiredPullRequestReviewsOutput() BranchProtectionV3RequiredPullRequestReviewsOutput {
	return o
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) ToBranchProtectionV3RequiredPullRequestReviewsOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsOutput {
	return o
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutput() BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return o.ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(context.Background())
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BranchProtectionV3RequiredPullRequestReviews) *BranchProtectionV3RequiredPullRequestReviews {
		return &v
	}).(BranchProtectionV3RequiredPullRequestReviewsPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) DismissStaleReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) *bool { return v.DismissStaleReviews }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) DismissalTeams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) []string { return v.DismissalTeams }).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) DismissalUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) []string { return v.DismissalUsers }).(pulumi.StringArrayOutput)
}

// Deprecated: Use enforce_admins instead
func (o BranchProtectionV3RequiredPullRequestReviewsOutput) IncludeAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) *bool { return v.IncludeAdmins }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) RequireCodeOwnerReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) *bool { return v.RequireCodeOwnerReviews }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsOutput) RequiredApprovingReviewCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredPullRequestReviews) *int { return v.RequiredApprovingReviewCount }).(pulumi.IntPtrOutput)
}

type BranchProtectionV3RequiredPullRequestReviewsPtrOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RequiredPullRequestReviewsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3RequiredPullRequestReviews)(nil)).Elem()
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutput() BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return o
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) ToBranchProtectionV3RequiredPullRequestReviewsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredPullRequestReviewsPtrOutput {
	return o
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) Elem() BranchProtectionV3RequiredPullRequestReviewsOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) BranchProtectionV3RequiredPullRequestReviews {
		if v != nil {
			return *v
		}
		var ret BranchProtectionV3RequiredPullRequestReviews
		return ret
	}).(BranchProtectionV3RequiredPullRequestReviewsOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) DismissStaleReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) *bool {
		if v == nil {
			return nil
		}
		return v.DismissStaleReviews
	}).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) DismissalTeams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) []string {
		if v == nil {
			return nil
		}
		return v.DismissalTeams
	}).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) DismissalUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) []string {
		if v == nil {
			return nil
		}
		return v.DismissalUsers
	}).(pulumi.StringArrayOutput)
}

// Deprecated: Use enforce_admins instead
func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) IncludeAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAdmins
	}).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) RequireCodeOwnerReviews() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) *bool {
		if v == nil {
			return nil
		}
		return v.RequireCodeOwnerReviews
	}).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredPullRequestReviewsPtrOutput) RequiredApprovingReviewCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredPullRequestReviews) *int {
		if v == nil {
			return nil
		}
		return v.RequiredApprovingReviewCount
	}).(pulumi.IntPtrOutput)
}

type BranchProtectionV3RequiredStatusChecks struct {
	Contexts []string `pulumi:"contexts"`
	// Deprecated: Use enforce_admins instead
	IncludeAdmins *bool `pulumi:"includeAdmins"`
	Strict        *bool `pulumi:"strict"`
}

// BranchProtectionV3RequiredStatusChecksInput is an input type that accepts BranchProtectionV3RequiredStatusChecksArgs and BranchProtectionV3RequiredStatusChecksOutput values.
// You can construct a concrete instance of `BranchProtectionV3RequiredStatusChecksInput` via:
//
//          BranchProtectionV3RequiredStatusChecksArgs{...}
type BranchProtectionV3RequiredStatusChecksInput interface {
	pulumi.Input

	ToBranchProtectionV3RequiredStatusChecksOutput() BranchProtectionV3RequiredStatusChecksOutput
	ToBranchProtectionV3RequiredStatusChecksOutputWithContext(context.Context) BranchProtectionV3RequiredStatusChecksOutput
}

type BranchProtectionV3RequiredStatusChecksArgs struct {
	Contexts pulumi.StringArrayInput `pulumi:"contexts"`
	// Deprecated: Use enforce_admins instead
	IncludeAdmins pulumi.BoolPtrInput `pulumi:"includeAdmins"`
	Strict        pulumi.BoolPtrInput `pulumi:"strict"`
}

func (BranchProtectionV3RequiredStatusChecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3RequiredStatusChecks)(nil)).Elem()
}

func (i BranchProtectionV3RequiredStatusChecksArgs) ToBranchProtectionV3RequiredStatusChecksOutput() BranchProtectionV3RequiredStatusChecksOutput {
	return i.ToBranchProtectionV3RequiredStatusChecksOutputWithContext(context.Background())
}

func (i BranchProtectionV3RequiredStatusChecksArgs) ToBranchProtectionV3RequiredStatusChecksOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredStatusChecksOutput)
}

func (i BranchProtectionV3RequiredStatusChecksArgs) ToBranchProtectionV3RequiredStatusChecksPtrOutput() BranchProtectionV3RequiredStatusChecksPtrOutput {
	return i.ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(context.Background())
}

func (i BranchProtectionV3RequiredStatusChecksArgs) ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredStatusChecksOutput).ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(ctx)
}

// BranchProtectionV3RequiredStatusChecksPtrInput is an input type that accepts BranchProtectionV3RequiredStatusChecksArgs, BranchProtectionV3RequiredStatusChecksPtr and BranchProtectionV3RequiredStatusChecksPtrOutput values.
// You can construct a concrete instance of `BranchProtectionV3RequiredStatusChecksPtrInput` via:
//
//          BranchProtectionV3RequiredStatusChecksArgs{...}
//
//  or:
//
//          nil
type BranchProtectionV3RequiredStatusChecksPtrInput interface {
	pulumi.Input

	ToBranchProtectionV3RequiredStatusChecksPtrOutput() BranchProtectionV3RequiredStatusChecksPtrOutput
	ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(context.Context) BranchProtectionV3RequiredStatusChecksPtrOutput
}

type branchProtectionV3RequiredStatusChecksPtrType BranchProtectionV3RequiredStatusChecksArgs

func BranchProtectionV3RequiredStatusChecksPtr(v *BranchProtectionV3RequiredStatusChecksArgs) BranchProtectionV3RequiredStatusChecksPtrInput {
	return (*branchProtectionV3RequiredStatusChecksPtrType)(v)
}

func (*branchProtectionV3RequiredStatusChecksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3RequiredStatusChecks)(nil)).Elem()
}

func (i *branchProtectionV3RequiredStatusChecksPtrType) ToBranchProtectionV3RequiredStatusChecksPtrOutput() BranchProtectionV3RequiredStatusChecksPtrOutput {
	return i.ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(context.Background())
}

func (i *branchProtectionV3RequiredStatusChecksPtrType) ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RequiredStatusChecksPtrOutput)
}

type BranchProtectionV3RequiredStatusChecksOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RequiredStatusChecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3RequiredStatusChecks)(nil)).Elem()
}

func (o BranchProtectionV3RequiredStatusChecksOutput) ToBranchProtectionV3RequiredStatusChecksOutput() BranchProtectionV3RequiredStatusChecksOutput {
	return o
}

func (o BranchProtectionV3RequiredStatusChecksOutput) ToBranchProtectionV3RequiredStatusChecksOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksOutput {
	return o
}

func (o BranchProtectionV3RequiredStatusChecksOutput) ToBranchProtectionV3RequiredStatusChecksPtrOutput() BranchProtectionV3RequiredStatusChecksPtrOutput {
	return o.ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(context.Background())
}

func (o BranchProtectionV3RequiredStatusChecksOutput) ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BranchProtectionV3RequiredStatusChecks) *BranchProtectionV3RequiredStatusChecks {
		return &v
	}).(BranchProtectionV3RequiredStatusChecksPtrOutput)
}

func (o BranchProtectionV3RequiredStatusChecksOutput) Contexts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredStatusChecks) []string { return v.Contexts }).(pulumi.StringArrayOutput)
}

// Deprecated: Use enforce_admins instead
func (o BranchProtectionV3RequiredStatusChecksOutput) IncludeAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredStatusChecks) *bool { return v.IncludeAdmins }).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredStatusChecksOutput) Strict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchProtectionV3RequiredStatusChecks) *bool { return v.Strict }).(pulumi.BoolPtrOutput)
}

type BranchProtectionV3RequiredStatusChecksPtrOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RequiredStatusChecksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3RequiredStatusChecks)(nil)).Elem()
}

func (o BranchProtectionV3RequiredStatusChecksPtrOutput) ToBranchProtectionV3RequiredStatusChecksPtrOutput() BranchProtectionV3RequiredStatusChecksPtrOutput {
	return o
}

func (o BranchProtectionV3RequiredStatusChecksPtrOutput) ToBranchProtectionV3RequiredStatusChecksPtrOutputWithContext(ctx context.Context) BranchProtectionV3RequiredStatusChecksPtrOutput {
	return o
}

func (o BranchProtectionV3RequiredStatusChecksPtrOutput) Elem() BranchProtectionV3RequiredStatusChecksOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredStatusChecks) BranchProtectionV3RequiredStatusChecks {
		if v != nil {
			return *v
		}
		var ret BranchProtectionV3RequiredStatusChecks
		return ret
	}).(BranchProtectionV3RequiredStatusChecksOutput)
}

func (o BranchProtectionV3RequiredStatusChecksPtrOutput) Contexts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredStatusChecks) []string {
		if v == nil {
			return nil
		}
		return v.Contexts
	}).(pulumi.StringArrayOutput)
}

// Deprecated: Use enforce_admins instead
func (o BranchProtectionV3RequiredStatusChecksPtrOutput) IncludeAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredStatusChecks) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAdmins
	}).(pulumi.BoolPtrOutput)
}

func (o BranchProtectionV3RequiredStatusChecksPtrOutput) Strict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BranchProtectionV3RequiredStatusChecks) *bool {
		if v == nil {
			return nil
		}
		return v.Strict
	}).(pulumi.BoolPtrOutput)
}

type BranchProtectionV3Restrictions struct {
	Apps  []string `pulumi:"apps"`
	Teams []string `pulumi:"teams"`
	Users []string `pulumi:"users"`
}

// BranchProtectionV3RestrictionsInput is an input type that accepts BranchProtectionV3RestrictionsArgs and BranchProtectionV3RestrictionsOutput values.
// You can construct a concrete instance of `BranchProtectionV3RestrictionsInput` via:
//
//          BranchProtectionV3RestrictionsArgs{...}
type BranchProtectionV3RestrictionsInput interface {
	pulumi.Input

	ToBranchProtectionV3RestrictionsOutput() BranchProtectionV3RestrictionsOutput
	ToBranchProtectionV3RestrictionsOutputWithContext(context.Context) BranchProtectionV3RestrictionsOutput
}

type BranchProtectionV3RestrictionsArgs struct {
	Apps  pulumi.StringArrayInput `pulumi:"apps"`
	Teams pulumi.StringArrayInput `pulumi:"teams"`
	Users pulumi.StringArrayInput `pulumi:"users"`
}

func (BranchProtectionV3RestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3Restrictions)(nil)).Elem()
}

func (i BranchProtectionV3RestrictionsArgs) ToBranchProtectionV3RestrictionsOutput() BranchProtectionV3RestrictionsOutput {
	return i.ToBranchProtectionV3RestrictionsOutputWithContext(context.Background())
}

func (i BranchProtectionV3RestrictionsArgs) ToBranchProtectionV3RestrictionsOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RestrictionsOutput)
}

func (i BranchProtectionV3RestrictionsArgs) ToBranchProtectionV3RestrictionsPtrOutput() BranchProtectionV3RestrictionsPtrOutput {
	return i.ToBranchProtectionV3RestrictionsPtrOutputWithContext(context.Background())
}

func (i BranchProtectionV3RestrictionsArgs) ToBranchProtectionV3RestrictionsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RestrictionsOutput).ToBranchProtectionV3RestrictionsPtrOutputWithContext(ctx)
}

// BranchProtectionV3RestrictionsPtrInput is an input type that accepts BranchProtectionV3RestrictionsArgs, BranchProtectionV3RestrictionsPtr and BranchProtectionV3RestrictionsPtrOutput values.
// You can construct a concrete instance of `BranchProtectionV3RestrictionsPtrInput` via:
//
//          BranchProtectionV3RestrictionsArgs{...}
//
//  or:
//
//          nil
type BranchProtectionV3RestrictionsPtrInput interface {
	pulumi.Input

	ToBranchProtectionV3RestrictionsPtrOutput() BranchProtectionV3RestrictionsPtrOutput
	ToBranchProtectionV3RestrictionsPtrOutputWithContext(context.Context) BranchProtectionV3RestrictionsPtrOutput
}

type branchProtectionV3RestrictionsPtrType BranchProtectionV3RestrictionsArgs

func BranchProtectionV3RestrictionsPtr(v *BranchProtectionV3RestrictionsArgs) BranchProtectionV3RestrictionsPtrInput {
	return (*branchProtectionV3RestrictionsPtrType)(v)
}

func (*branchProtectionV3RestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3Restrictions)(nil)).Elem()
}

func (i *branchProtectionV3RestrictionsPtrType) ToBranchProtectionV3RestrictionsPtrOutput() BranchProtectionV3RestrictionsPtrOutput {
	return i.ToBranchProtectionV3RestrictionsPtrOutputWithContext(context.Background())
}

func (i *branchProtectionV3RestrictionsPtrType) ToBranchProtectionV3RestrictionsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionV3RestrictionsPtrOutput)
}

type BranchProtectionV3RestrictionsOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionV3Restrictions)(nil)).Elem()
}

func (o BranchProtectionV3RestrictionsOutput) ToBranchProtectionV3RestrictionsOutput() BranchProtectionV3RestrictionsOutput {
	return o
}

func (o BranchProtectionV3RestrictionsOutput) ToBranchProtectionV3RestrictionsOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsOutput {
	return o
}

func (o BranchProtectionV3RestrictionsOutput) ToBranchProtectionV3RestrictionsPtrOutput() BranchProtectionV3RestrictionsPtrOutput {
	return o.ToBranchProtectionV3RestrictionsPtrOutputWithContext(context.Background())
}

func (o BranchProtectionV3RestrictionsOutput) ToBranchProtectionV3RestrictionsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BranchProtectionV3Restrictions) *BranchProtectionV3Restrictions {
		return &v
	}).(BranchProtectionV3RestrictionsPtrOutput)
}

func (o BranchProtectionV3RestrictionsOutput) Apps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3Restrictions) []string { return v.Apps }).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RestrictionsOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3Restrictions) []string { return v.Teams }).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RestrictionsOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchProtectionV3Restrictions) []string { return v.Users }).(pulumi.StringArrayOutput)
}

type BranchProtectionV3RestrictionsPtrOutput struct{ *pulumi.OutputState }

func (BranchProtectionV3RestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchProtectionV3Restrictions)(nil)).Elem()
}

func (o BranchProtectionV3RestrictionsPtrOutput) ToBranchProtectionV3RestrictionsPtrOutput() BranchProtectionV3RestrictionsPtrOutput {
	return o
}

func (o BranchProtectionV3RestrictionsPtrOutput) ToBranchProtectionV3RestrictionsPtrOutputWithContext(ctx context.Context) BranchProtectionV3RestrictionsPtrOutput {
	return o
}

func (o BranchProtectionV3RestrictionsPtrOutput) Elem() BranchProtectionV3RestrictionsOutput {
	return o.ApplyT(func(v *BranchProtectionV3Restrictions) BranchProtectionV3Restrictions {
		if v != nil {
			return *v
		}
		var ret BranchProtectionV3Restrictions
		return ret
	}).(BranchProtectionV3RestrictionsOutput)
}

func (o BranchProtectionV3RestrictionsPtrOutput) Apps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3Restrictions) []string {
		if v == nil {
			return nil
		}
		return v.Apps
	}).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RestrictionsPtrOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3Restrictions) []string {
		if v == nil {
			return nil
		}
		return v.Teams
	}).(pulumi.StringArrayOutput)
}

func (o BranchProtectionV3RestrictionsPtrOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BranchProtectionV3Restrictions) []string {
		if v == nil {
			return nil
		}
		return v.Users
	}).(pulumi.StringArrayOutput)
}

type OrganizationWebhookConfiguration struct {
	ContentType *string `pulumi:"contentType"`
	InsecureSsl *bool   `pulumi:"insecureSsl"`
	Secret      *string `pulumi:"secret"`
	// URL of the webhook
	Url string `pulumi:"url"`
}

// OrganizationWebhookConfigurationInput is an input type that accepts OrganizationWebhookConfigurationArgs and OrganizationWebhookConfigurationOutput values.
// You can construct a concrete instance of `OrganizationWebhookConfigurationInput` via:
//
//          OrganizationWebhookConfigurationArgs{...}
type OrganizationWebhookConfigurationInput interface {
	pulumi.Input

	ToOrganizationWebhookConfigurationOutput() OrganizationWebhookConfigurationOutput
	ToOrganizationWebhookConfigurationOutputWithContext(context.Context) OrganizationWebhookConfigurationOutput
}

type OrganizationWebhookConfigurationArgs struct {
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	InsecureSsl pulumi.BoolPtrInput   `pulumi:"insecureSsl"`
	Secret      pulumi.StringPtrInput `pulumi:"secret"`
	// URL of the webhook
	Url pulumi.StringInput `pulumi:"url"`
}

func (OrganizationWebhookConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationWebhookConfiguration)(nil)).Elem()
}

func (i OrganizationWebhookConfigurationArgs) ToOrganizationWebhookConfigurationOutput() OrganizationWebhookConfigurationOutput {
	return i.ToOrganizationWebhookConfigurationOutputWithContext(context.Background())
}

func (i OrganizationWebhookConfigurationArgs) ToOrganizationWebhookConfigurationOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationWebhookConfigurationOutput)
}

func (i OrganizationWebhookConfigurationArgs) ToOrganizationWebhookConfigurationPtrOutput() OrganizationWebhookConfigurationPtrOutput {
	return i.ToOrganizationWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (i OrganizationWebhookConfigurationArgs) ToOrganizationWebhookConfigurationPtrOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationWebhookConfigurationOutput).ToOrganizationWebhookConfigurationPtrOutputWithContext(ctx)
}

// OrganizationWebhookConfigurationPtrInput is an input type that accepts OrganizationWebhookConfigurationArgs, OrganizationWebhookConfigurationPtr and OrganizationWebhookConfigurationPtrOutput values.
// You can construct a concrete instance of `OrganizationWebhookConfigurationPtrInput` via:
//
//          OrganizationWebhookConfigurationArgs{...}
//
//  or:
//
//          nil
type OrganizationWebhookConfigurationPtrInput interface {
	pulumi.Input

	ToOrganizationWebhookConfigurationPtrOutput() OrganizationWebhookConfigurationPtrOutput
	ToOrganizationWebhookConfigurationPtrOutputWithContext(context.Context) OrganizationWebhookConfigurationPtrOutput
}

type organizationWebhookConfigurationPtrType OrganizationWebhookConfigurationArgs

func OrganizationWebhookConfigurationPtr(v *OrganizationWebhookConfigurationArgs) OrganizationWebhookConfigurationPtrInput {
	return (*organizationWebhookConfigurationPtrType)(v)
}

func (*organizationWebhookConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationWebhookConfiguration)(nil)).Elem()
}

func (i *organizationWebhookConfigurationPtrType) ToOrganizationWebhookConfigurationPtrOutput() OrganizationWebhookConfigurationPtrOutput {
	return i.ToOrganizationWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (i *organizationWebhookConfigurationPtrType) ToOrganizationWebhookConfigurationPtrOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationWebhookConfigurationPtrOutput)
}

type OrganizationWebhookConfigurationOutput struct{ *pulumi.OutputState }

func (OrganizationWebhookConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationWebhookConfiguration)(nil)).Elem()
}

func (o OrganizationWebhookConfigurationOutput) ToOrganizationWebhookConfigurationOutput() OrganizationWebhookConfigurationOutput {
	return o
}

func (o OrganizationWebhookConfigurationOutput) ToOrganizationWebhookConfigurationOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationOutput {
	return o
}

func (o OrganizationWebhookConfigurationOutput) ToOrganizationWebhookConfigurationPtrOutput() OrganizationWebhookConfigurationPtrOutput {
	return o.ToOrganizationWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (o OrganizationWebhookConfigurationOutput) ToOrganizationWebhookConfigurationPtrOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationWebhookConfiguration) *OrganizationWebhookConfiguration {
		return &v
	}).(OrganizationWebhookConfigurationPtrOutput)
}

func (o OrganizationWebhookConfigurationOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationWebhookConfiguration) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

func (o OrganizationWebhookConfigurationOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationWebhookConfiguration) *bool { return v.InsecureSsl }).(pulumi.BoolPtrOutput)
}

func (o OrganizationWebhookConfigurationOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationWebhookConfiguration) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// URL of the webhook
func (o OrganizationWebhookConfigurationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationWebhookConfiguration) string { return v.Url }).(pulumi.StringOutput)
}

type OrganizationWebhookConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OrganizationWebhookConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationWebhookConfiguration)(nil)).Elem()
}

func (o OrganizationWebhookConfigurationPtrOutput) ToOrganizationWebhookConfigurationPtrOutput() OrganizationWebhookConfigurationPtrOutput {
	return o
}

func (o OrganizationWebhookConfigurationPtrOutput) ToOrganizationWebhookConfigurationPtrOutputWithContext(ctx context.Context) OrganizationWebhookConfigurationPtrOutput {
	return o
}

func (o OrganizationWebhookConfigurationPtrOutput) Elem() OrganizationWebhookConfigurationOutput {
	return o.ApplyT(func(v *OrganizationWebhookConfiguration) OrganizationWebhookConfiguration {
		if v != nil {
			return *v
		}
		var ret OrganizationWebhookConfiguration
		return ret
	}).(OrganizationWebhookConfigurationOutput)
}

func (o OrganizationWebhookConfigurationPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationWebhookConfigurationPtrOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationWebhookConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSsl
	}).(pulumi.BoolPtrOutput)
}

func (o OrganizationWebhookConfigurationPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// URL of the webhook
func (o OrganizationWebhookConfigurationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type ProviderAppAuth struct {
	Id             string `pulumi:"id"`
	InstallationId string `pulumi:"installationId"`
	PemFile        string `pulumi:"pemFile"`
}

// ProviderAppAuthInput is an input type that accepts ProviderAppAuthArgs and ProviderAppAuthOutput values.
// You can construct a concrete instance of `ProviderAppAuthInput` via:
//
//          ProviderAppAuthArgs{...}
type ProviderAppAuthInput interface {
	pulumi.Input

	ToProviderAppAuthOutput() ProviderAppAuthOutput
	ToProviderAppAuthOutputWithContext(context.Context) ProviderAppAuthOutput
}

type ProviderAppAuthArgs struct {
	Id             pulumi.StringInput `pulumi:"id"`
	InstallationId pulumi.StringInput `pulumi:"installationId"`
	PemFile        pulumi.StringInput `pulumi:"pemFile"`
}

func (ProviderAppAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAppAuth)(nil)).Elem()
}

func (i ProviderAppAuthArgs) ToProviderAppAuthOutput() ProviderAppAuthOutput {
	return i.ToProviderAppAuthOutputWithContext(context.Background())
}

func (i ProviderAppAuthArgs) ToProviderAppAuthOutputWithContext(ctx context.Context) ProviderAppAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAppAuthOutput)
}

func (i ProviderAppAuthArgs) ToProviderAppAuthPtrOutput() ProviderAppAuthPtrOutput {
	return i.ToProviderAppAuthPtrOutputWithContext(context.Background())
}

func (i ProviderAppAuthArgs) ToProviderAppAuthPtrOutputWithContext(ctx context.Context) ProviderAppAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAppAuthOutput).ToProviderAppAuthPtrOutputWithContext(ctx)
}

// ProviderAppAuthPtrInput is an input type that accepts ProviderAppAuthArgs, ProviderAppAuthPtr and ProviderAppAuthPtrOutput values.
// You can construct a concrete instance of `ProviderAppAuthPtrInput` via:
//
//          ProviderAppAuthArgs{...}
//
//  or:
//
//          nil
type ProviderAppAuthPtrInput interface {
	pulumi.Input

	ToProviderAppAuthPtrOutput() ProviderAppAuthPtrOutput
	ToProviderAppAuthPtrOutputWithContext(context.Context) ProviderAppAuthPtrOutput
}

type providerAppAuthPtrType ProviderAppAuthArgs

func ProviderAppAuthPtr(v *ProviderAppAuthArgs) ProviderAppAuthPtrInput {
	return (*providerAppAuthPtrType)(v)
}

func (*providerAppAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAppAuth)(nil)).Elem()
}

func (i *providerAppAuthPtrType) ToProviderAppAuthPtrOutput() ProviderAppAuthPtrOutput {
	return i.ToProviderAppAuthPtrOutputWithContext(context.Background())
}

func (i *providerAppAuthPtrType) ToProviderAppAuthPtrOutputWithContext(ctx context.Context) ProviderAppAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAppAuthPtrOutput)
}

type ProviderAppAuthOutput struct{ *pulumi.OutputState }

func (ProviderAppAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAppAuth)(nil)).Elem()
}

func (o ProviderAppAuthOutput) ToProviderAppAuthOutput() ProviderAppAuthOutput {
	return o
}

func (o ProviderAppAuthOutput) ToProviderAppAuthOutputWithContext(ctx context.Context) ProviderAppAuthOutput {
	return o
}

func (o ProviderAppAuthOutput) ToProviderAppAuthPtrOutput() ProviderAppAuthPtrOutput {
	return o.ToProviderAppAuthPtrOutputWithContext(context.Background())
}

func (o ProviderAppAuthOutput) ToProviderAppAuthPtrOutputWithContext(ctx context.Context) ProviderAppAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAppAuth) *ProviderAppAuth {
		return &v
	}).(ProviderAppAuthPtrOutput)
}

func (o ProviderAppAuthOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderAppAuth) string { return v.Id }).(pulumi.StringOutput)
}

func (o ProviderAppAuthOutput) InstallationId() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderAppAuth) string { return v.InstallationId }).(pulumi.StringOutput)
}

func (o ProviderAppAuthOutput) PemFile() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderAppAuth) string { return v.PemFile }).(pulumi.StringOutput)
}

type ProviderAppAuthPtrOutput struct{ *pulumi.OutputState }

func (ProviderAppAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAppAuth)(nil)).Elem()
}

func (o ProviderAppAuthPtrOutput) ToProviderAppAuthPtrOutput() ProviderAppAuthPtrOutput {
	return o
}

func (o ProviderAppAuthPtrOutput) ToProviderAppAuthPtrOutputWithContext(ctx context.Context) ProviderAppAuthPtrOutput {
	return o
}

func (o ProviderAppAuthPtrOutput) Elem() ProviderAppAuthOutput {
	return o.ApplyT(func(v *ProviderAppAuth) ProviderAppAuth {
		if v != nil {
			return *v
		}
		var ret ProviderAppAuth
		return ret
	}).(ProviderAppAuthOutput)
}

func (o ProviderAppAuthPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAppAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAppAuthPtrOutput) InstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAppAuth) *string {
		if v == nil {
			return nil
		}
		return &v.InstallationId
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAppAuthPtrOutput) PemFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAppAuth) *string {
		if v == nil {
			return nil
		}
		return &v.PemFile
	}).(pulumi.StringPtrOutput)
}

type RepositoryBranch struct {
	// The name of the repository.
	Name *string `pulumi:"name"`
	// Whether the branch is protected.
	Protected *bool `pulumi:"protected"`
}

// RepositoryBranchInput is an input type that accepts RepositoryBranchArgs and RepositoryBranchOutput values.
// You can construct a concrete instance of `RepositoryBranchInput` via:
//
//          RepositoryBranchArgs{...}
type RepositoryBranchInput interface {
	pulumi.Input

	ToRepositoryBranchOutput() RepositoryBranchOutput
	ToRepositoryBranchOutputWithContext(context.Context) RepositoryBranchOutput
}

type RepositoryBranchArgs struct {
	// The name of the repository.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the branch is protected.
	Protected pulumi.BoolPtrInput `pulumi:"protected"`
}

func (RepositoryBranchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryBranch)(nil)).Elem()
}

func (i RepositoryBranchArgs) ToRepositoryBranchOutput() RepositoryBranchOutput {
	return i.ToRepositoryBranchOutputWithContext(context.Background())
}

func (i RepositoryBranchArgs) ToRepositoryBranchOutputWithContext(ctx context.Context) RepositoryBranchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryBranchOutput)
}

// RepositoryBranchArrayInput is an input type that accepts RepositoryBranchArray and RepositoryBranchArrayOutput values.
// You can construct a concrete instance of `RepositoryBranchArrayInput` via:
//
//          RepositoryBranchArray{ RepositoryBranchArgs{...} }
type RepositoryBranchArrayInput interface {
	pulumi.Input

	ToRepositoryBranchArrayOutput() RepositoryBranchArrayOutput
	ToRepositoryBranchArrayOutputWithContext(context.Context) RepositoryBranchArrayOutput
}

type RepositoryBranchArray []RepositoryBranchInput

func (RepositoryBranchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryBranch)(nil)).Elem()
}

func (i RepositoryBranchArray) ToRepositoryBranchArrayOutput() RepositoryBranchArrayOutput {
	return i.ToRepositoryBranchArrayOutputWithContext(context.Background())
}

func (i RepositoryBranchArray) ToRepositoryBranchArrayOutputWithContext(ctx context.Context) RepositoryBranchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryBranchArrayOutput)
}

type RepositoryBranchOutput struct{ *pulumi.OutputState }

func (RepositoryBranchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryBranch)(nil)).Elem()
}

func (o RepositoryBranchOutput) ToRepositoryBranchOutput() RepositoryBranchOutput {
	return o
}

func (o RepositoryBranchOutput) ToRepositoryBranchOutputWithContext(ctx context.Context) RepositoryBranchOutput {
	return o
}

// The name of the repository.
func (o RepositoryBranchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryBranch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the branch is protected.
func (o RepositoryBranchOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepositoryBranch) *bool { return v.Protected }).(pulumi.BoolPtrOutput)
}

type RepositoryBranchArrayOutput struct{ *pulumi.OutputState }

func (RepositoryBranchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryBranch)(nil)).Elem()
}

func (o RepositoryBranchArrayOutput) ToRepositoryBranchArrayOutput() RepositoryBranchArrayOutput {
	return o
}

func (o RepositoryBranchArrayOutput) ToRepositoryBranchArrayOutputWithContext(ctx context.Context) RepositoryBranchArrayOutput {
	return o
}

func (o RepositoryBranchArrayOutput) Index(i pulumi.IntInput) RepositoryBranchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryBranch {
		return vs[0].([]RepositoryBranch)[vs[1].(int)]
	}).(RepositoryBranchOutput)
}

type RepositoryEnvironmentDeploymentBranchPolicy struct {
	// Whether only branches that match the specified name patterns can deploy to this environment.
	CustomBranchPolicies bool `pulumi:"customBranchPolicies"`
	// Whether only branches with branch protection rules can deploy to this environment.
	ProtectedBranches bool `pulumi:"protectedBranches"`
}

// RepositoryEnvironmentDeploymentBranchPolicyInput is an input type that accepts RepositoryEnvironmentDeploymentBranchPolicyArgs and RepositoryEnvironmentDeploymentBranchPolicyOutput values.
// You can construct a concrete instance of `RepositoryEnvironmentDeploymentBranchPolicyInput` via:
//
//          RepositoryEnvironmentDeploymentBranchPolicyArgs{...}
type RepositoryEnvironmentDeploymentBranchPolicyInput interface {
	pulumi.Input

	ToRepositoryEnvironmentDeploymentBranchPolicyOutput() RepositoryEnvironmentDeploymentBranchPolicyOutput
	ToRepositoryEnvironmentDeploymentBranchPolicyOutputWithContext(context.Context) RepositoryEnvironmentDeploymentBranchPolicyOutput
}

type RepositoryEnvironmentDeploymentBranchPolicyArgs struct {
	// Whether only branches that match the specified name patterns can deploy to this environment.
	CustomBranchPolicies pulumi.BoolInput `pulumi:"customBranchPolicies"`
	// Whether only branches with branch protection rules can deploy to this environment.
	ProtectedBranches pulumi.BoolInput `pulumi:"protectedBranches"`
}

func (RepositoryEnvironmentDeploymentBranchPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryEnvironmentDeploymentBranchPolicy)(nil)).Elem()
}

func (i RepositoryEnvironmentDeploymentBranchPolicyArgs) ToRepositoryEnvironmentDeploymentBranchPolicyOutput() RepositoryEnvironmentDeploymentBranchPolicyOutput {
	return i.ToRepositoryEnvironmentDeploymentBranchPolicyOutputWithContext(context.Background())
}

func (i RepositoryEnvironmentDeploymentBranchPolicyArgs) ToRepositoryEnvironmentDeploymentBranchPolicyOutputWithContext(ctx context.Context) RepositoryEnvironmentDeploymentBranchPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryEnvironmentDeploymentBranchPolicyOutput)
}

func (i RepositoryEnvironmentDeploymentBranchPolicyArgs) ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutput() RepositoryEnvironmentDeploymentBranchPolicyPtrOutput {
	return i.ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutputWithContext(context.Background())
}

func (i RepositoryEnvironmentDeploymentBranchPolicyArgs) ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutputWithContext(ctx context.Context) RepositoryEnvironmentDeploymentBranchPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryEnvironmentDeploymentBranchPolicyOutput).ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutputWithContext(ctx)
}

// RepositoryEnvironmentDeploymentBranchPolicyPtrInput is an input type that accepts RepositoryEnvironmentDeploymentBranchPolicyArgs, RepositoryEnvironmentDeploymentBranchPolicyPtr and RepositoryEnvironmentDeploymentBranchPolicyPtrOutput values.
// You can construct a concrete instance of `RepositoryEnvironmentDeploymentBranchPolicyPtrInput` via:
//
//          RepositoryEnvironmentDeploymentBranchPolicyArgs{...}
//
//  or:
//
//          nil
type RepositoryEnvironmentDeploymentBranchPolicyPtrInput interface {
	pulumi.Input

	ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutput() RepositoryEnvironmentDeploymentBranchPolicyPtrOutput
	ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutputWithContext(context.Context) RepositoryEnvironmentDeploymentBranchPolicyPtrOutput
}

type repositoryEnvironmentDeploymentBranchPolicyPtrType RepositoryEnvironmentDeploymentBranchPolicyArgs

func RepositoryEnvironmentDeploymentBranchPolicyPtr(v *RepositoryEnvironmentDeploymentBranchPolicyArgs) RepositoryEnvironmentDeploymentBranchPolicyPtrInput {
	return (*repositoryEnvironmentDeploymentBranchPolicyPtrType)(v)
}

func (*repositoryEnvironmentDeploymentBranchPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryEnvironmentDeploymentBranchPolicy)(nil)).Elem()
}

func (i *repositoryEnvironmentDeploymentBranchPolicyPtrType) ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutput() RepositoryEnvironmentDeploymentBranchPolicyPtrOutput {
	return i.ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutputWithContext(context.Background())
}

func (i *repositoryEnvironmentDeploymentBranchPolicyPtrType) ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutputWithContext(ctx context.Context) RepositoryEnvironmentDeploymentBranchPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryEnvironmentDeploymentBranchPolicyPtrOutput)
}

type RepositoryEnvironmentDeploymentBranchPolicyOutput struct{ *pulumi.OutputState }

func (RepositoryEnvironmentDeploymentBranchPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryEnvironmentDeploymentBranchPolicy)(nil)).Elem()
}

func (o RepositoryEnvironmentDeploymentBranchPolicyOutput) ToRepositoryEnvironmentDeploymentBranchPolicyOutput() RepositoryEnvironmentDeploymentBranchPolicyOutput {
	return o
}

func (o RepositoryEnvironmentDeploymentBranchPolicyOutput) ToRepositoryEnvironmentDeploymentBranchPolicyOutputWithContext(ctx context.Context) RepositoryEnvironmentDeploymentBranchPolicyOutput {
	return o
}

func (o RepositoryEnvironmentDeploymentBranchPolicyOutput) ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutput() RepositoryEnvironmentDeploymentBranchPolicyPtrOutput {
	return o.ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutputWithContext(context.Background())
}

func (o RepositoryEnvironmentDeploymentBranchPolicyOutput) ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutputWithContext(ctx context.Context) RepositoryEnvironmentDeploymentBranchPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryEnvironmentDeploymentBranchPolicy) *RepositoryEnvironmentDeploymentBranchPolicy {
		return &v
	}).(RepositoryEnvironmentDeploymentBranchPolicyPtrOutput)
}

// Whether only branches that match the specified name patterns can deploy to this environment.
func (o RepositoryEnvironmentDeploymentBranchPolicyOutput) CustomBranchPolicies() pulumi.BoolOutput {
	return o.ApplyT(func(v RepositoryEnvironmentDeploymentBranchPolicy) bool { return v.CustomBranchPolicies }).(pulumi.BoolOutput)
}

// Whether only branches with branch protection rules can deploy to this environment.
func (o RepositoryEnvironmentDeploymentBranchPolicyOutput) ProtectedBranches() pulumi.BoolOutput {
	return o.ApplyT(func(v RepositoryEnvironmentDeploymentBranchPolicy) bool { return v.ProtectedBranches }).(pulumi.BoolOutput)
}

type RepositoryEnvironmentDeploymentBranchPolicyPtrOutput struct{ *pulumi.OutputState }

func (RepositoryEnvironmentDeploymentBranchPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryEnvironmentDeploymentBranchPolicy)(nil)).Elem()
}

func (o RepositoryEnvironmentDeploymentBranchPolicyPtrOutput) ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutput() RepositoryEnvironmentDeploymentBranchPolicyPtrOutput {
	return o
}

func (o RepositoryEnvironmentDeploymentBranchPolicyPtrOutput) ToRepositoryEnvironmentDeploymentBranchPolicyPtrOutputWithContext(ctx context.Context) RepositoryEnvironmentDeploymentBranchPolicyPtrOutput {
	return o
}

func (o RepositoryEnvironmentDeploymentBranchPolicyPtrOutput) Elem() RepositoryEnvironmentDeploymentBranchPolicyOutput {
	return o.ApplyT(func(v *RepositoryEnvironmentDeploymentBranchPolicy) RepositoryEnvironmentDeploymentBranchPolicy {
		if v != nil {
			return *v
		}
		var ret RepositoryEnvironmentDeploymentBranchPolicy
		return ret
	}).(RepositoryEnvironmentDeploymentBranchPolicyOutput)
}

// Whether only branches that match the specified name patterns can deploy to this environment.
func (o RepositoryEnvironmentDeploymentBranchPolicyPtrOutput) CustomBranchPolicies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RepositoryEnvironmentDeploymentBranchPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.CustomBranchPolicies
	}).(pulumi.BoolPtrOutput)
}

// Whether only branches with branch protection rules can deploy to this environment.
func (o RepositoryEnvironmentDeploymentBranchPolicyPtrOutput) ProtectedBranches() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RepositoryEnvironmentDeploymentBranchPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.ProtectedBranches
	}).(pulumi.BoolPtrOutput)
}

type RepositoryEnvironmentReviewer struct {
	// Up to 6 IDs for teams who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
	Teams []int `pulumi:"teams"`
	// Up to 6 IDs for users who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
	Users []int `pulumi:"users"`
}

// RepositoryEnvironmentReviewerInput is an input type that accepts RepositoryEnvironmentReviewerArgs and RepositoryEnvironmentReviewerOutput values.
// You can construct a concrete instance of `RepositoryEnvironmentReviewerInput` via:
//
//          RepositoryEnvironmentReviewerArgs{...}
type RepositoryEnvironmentReviewerInput interface {
	pulumi.Input

	ToRepositoryEnvironmentReviewerOutput() RepositoryEnvironmentReviewerOutput
	ToRepositoryEnvironmentReviewerOutputWithContext(context.Context) RepositoryEnvironmentReviewerOutput
}

type RepositoryEnvironmentReviewerArgs struct {
	// Up to 6 IDs for teams who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
	Teams pulumi.IntArrayInput `pulumi:"teams"`
	// Up to 6 IDs for users who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
	Users pulumi.IntArrayInput `pulumi:"users"`
}

func (RepositoryEnvironmentReviewerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryEnvironmentReviewer)(nil)).Elem()
}

func (i RepositoryEnvironmentReviewerArgs) ToRepositoryEnvironmentReviewerOutput() RepositoryEnvironmentReviewerOutput {
	return i.ToRepositoryEnvironmentReviewerOutputWithContext(context.Background())
}

func (i RepositoryEnvironmentReviewerArgs) ToRepositoryEnvironmentReviewerOutputWithContext(ctx context.Context) RepositoryEnvironmentReviewerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryEnvironmentReviewerOutput)
}

// RepositoryEnvironmentReviewerArrayInput is an input type that accepts RepositoryEnvironmentReviewerArray and RepositoryEnvironmentReviewerArrayOutput values.
// You can construct a concrete instance of `RepositoryEnvironmentReviewerArrayInput` via:
//
//          RepositoryEnvironmentReviewerArray{ RepositoryEnvironmentReviewerArgs{...} }
type RepositoryEnvironmentReviewerArrayInput interface {
	pulumi.Input

	ToRepositoryEnvironmentReviewerArrayOutput() RepositoryEnvironmentReviewerArrayOutput
	ToRepositoryEnvironmentReviewerArrayOutputWithContext(context.Context) RepositoryEnvironmentReviewerArrayOutput
}

type RepositoryEnvironmentReviewerArray []RepositoryEnvironmentReviewerInput

func (RepositoryEnvironmentReviewerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryEnvironmentReviewer)(nil)).Elem()
}

func (i RepositoryEnvironmentReviewerArray) ToRepositoryEnvironmentReviewerArrayOutput() RepositoryEnvironmentReviewerArrayOutput {
	return i.ToRepositoryEnvironmentReviewerArrayOutputWithContext(context.Background())
}

func (i RepositoryEnvironmentReviewerArray) ToRepositoryEnvironmentReviewerArrayOutputWithContext(ctx context.Context) RepositoryEnvironmentReviewerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryEnvironmentReviewerArrayOutput)
}

type RepositoryEnvironmentReviewerOutput struct{ *pulumi.OutputState }

func (RepositoryEnvironmentReviewerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryEnvironmentReviewer)(nil)).Elem()
}

func (o RepositoryEnvironmentReviewerOutput) ToRepositoryEnvironmentReviewerOutput() RepositoryEnvironmentReviewerOutput {
	return o
}

func (o RepositoryEnvironmentReviewerOutput) ToRepositoryEnvironmentReviewerOutputWithContext(ctx context.Context) RepositoryEnvironmentReviewerOutput {
	return o
}

// Up to 6 IDs for teams who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
func (o RepositoryEnvironmentReviewerOutput) Teams() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RepositoryEnvironmentReviewer) []int { return v.Teams }).(pulumi.IntArrayOutput)
}

// Up to 6 IDs for users who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
func (o RepositoryEnvironmentReviewerOutput) Users() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RepositoryEnvironmentReviewer) []int { return v.Users }).(pulumi.IntArrayOutput)
}

type RepositoryEnvironmentReviewerArrayOutput struct{ *pulumi.OutputState }

func (RepositoryEnvironmentReviewerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryEnvironmentReviewer)(nil)).Elem()
}

func (o RepositoryEnvironmentReviewerArrayOutput) ToRepositoryEnvironmentReviewerArrayOutput() RepositoryEnvironmentReviewerArrayOutput {
	return o
}

func (o RepositoryEnvironmentReviewerArrayOutput) ToRepositoryEnvironmentReviewerArrayOutputWithContext(ctx context.Context) RepositoryEnvironmentReviewerArrayOutput {
	return o
}

func (o RepositoryEnvironmentReviewerArrayOutput) Index(i pulumi.IntInput) RepositoryEnvironmentReviewerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryEnvironmentReviewer {
		return vs[0].([]RepositoryEnvironmentReviewer)[vs[1].(int)]
	}).(RepositoryEnvironmentReviewerOutput)
}

type RepositoryPages struct {
	// The custom domain for the repository. This can only be set after the repository has been created.
	Cname *string `pulumi:"cname"`
	// Whether the rendered GitHub Pages site has a custom 404 page.
	Custom404 *bool `pulumi:"custom404"`
	// The absolute URL (including scheme) of the rendered GitHub Pages site e.g. `https://username.github.io`.
	HtmlUrl *string `pulumi:"htmlUrl"`
	// The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
	Source RepositoryPagesSource `pulumi:"source"`
	// The GitHub Pages site's build status e.g. `building` or `built`.
	Status *string `pulumi:"status"`
	Url    *string `pulumi:"url"`
}

// RepositoryPagesInput is an input type that accepts RepositoryPagesArgs and RepositoryPagesOutput values.
// You can construct a concrete instance of `RepositoryPagesInput` via:
//
//          RepositoryPagesArgs{...}
type RepositoryPagesInput interface {
	pulumi.Input

	ToRepositoryPagesOutput() RepositoryPagesOutput
	ToRepositoryPagesOutputWithContext(context.Context) RepositoryPagesOutput
}

type RepositoryPagesArgs struct {
	// The custom domain for the repository. This can only be set after the repository has been created.
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// Whether the rendered GitHub Pages site has a custom 404 page.
	Custom404 pulumi.BoolPtrInput `pulumi:"custom404"`
	// The absolute URL (including scheme) of the rendered GitHub Pages site e.g. `https://username.github.io`.
	HtmlUrl pulumi.StringPtrInput `pulumi:"htmlUrl"`
	// The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
	Source RepositoryPagesSourceInput `pulumi:"source"`
	// The GitHub Pages site's build status e.g. `building` or `built`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	Url    pulumi.StringPtrInput `pulumi:"url"`
}

func (RepositoryPagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPages)(nil)).Elem()
}

func (i RepositoryPagesArgs) ToRepositoryPagesOutput() RepositoryPagesOutput {
	return i.ToRepositoryPagesOutputWithContext(context.Background())
}

func (i RepositoryPagesArgs) ToRepositoryPagesOutputWithContext(ctx context.Context) RepositoryPagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesOutput)
}

func (i RepositoryPagesArgs) ToRepositoryPagesPtrOutput() RepositoryPagesPtrOutput {
	return i.ToRepositoryPagesPtrOutputWithContext(context.Background())
}

func (i RepositoryPagesArgs) ToRepositoryPagesPtrOutputWithContext(ctx context.Context) RepositoryPagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesOutput).ToRepositoryPagesPtrOutputWithContext(ctx)
}

// RepositoryPagesPtrInput is an input type that accepts RepositoryPagesArgs, RepositoryPagesPtr and RepositoryPagesPtrOutput values.
// You can construct a concrete instance of `RepositoryPagesPtrInput` via:
//
//          RepositoryPagesArgs{...}
//
//  or:
//
//          nil
type RepositoryPagesPtrInput interface {
	pulumi.Input

	ToRepositoryPagesPtrOutput() RepositoryPagesPtrOutput
	ToRepositoryPagesPtrOutputWithContext(context.Context) RepositoryPagesPtrOutput
}

type repositoryPagesPtrType RepositoryPagesArgs

func RepositoryPagesPtr(v *RepositoryPagesArgs) RepositoryPagesPtrInput {
	return (*repositoryPagesPtrType)(v)
}

func (*repositoryPagesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryPages)(nil)).Elem()
}

func (i *repositoryPagesPtrType) ToRepositoryPagesPtrOutput() RepositoryPagesPtrOutput {
	return i.ToRepositoryPagesPtrOutputWithContext(context.Background())
}

func (i *repositoryPagesPtrType) ToRepositoryPagesPtrOutputWithContext(ctx context.Context) RepositoryPagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesPtrOutput)
}

type RepositoryPagesOutput struct{ *pulumi.OutputState }

func (RepositoryPagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPages)(nil)).Elem()
}

func (o RepositoryPagesOutput) ToRepositoryPagesOutput() RepositoryPagesOutput {
	return o
}

func (o RepositoryPagesOutput) ToRepositoryPagesOutputWithContext(ctx context.Context) RepositoryPagesOutput {
	return o
}

func (o RepositoryPagesOutput) ToRepositoryPagesPtrOutput() RepositoryPagesPtrOutput {
	return o.ToRepositoryPagesPtrOutputWithContext(context.Background())
}

func (o RepositoryPagesOutput) ToRepositoryPagesPtrOutputWithContext(ctx context.Context) RepositoryPagesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryPages) *RepositoryPages {
		return &v
	}).(RepositoryPagesPtrOutput)
}

// The custom domain for the repository. This can only be set after the repository has been created.
func (o RepositoryPagesOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPages) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// Whether the rendered GitHub Pages site has a custom 404 page.
func (o RepositoryPagesOutput) Custom404() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepositoryPages) *bool { return v.Custom404 }).(pulumi.BoolPtrOutput)
}

// The absolute URL (including scheme) of the rendered GitHub Pages site e.g. `https://username.github.io`.
func (o RepositoryPagesOutput) HtmlUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPages) *string { return v.HtmlUrl }).(pulumi.StringPtrOutput)
}

// The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
func (o RepositoryPagesOutput) Source() RepositoryPagesSourceOutput {
	return o.ApplyT(func(v RepositoryPages) RepositoryPagesSource { return v.Source }).(RepositoryPagesSourceOutput)
}

// The GitHub Pages site's build status e.g. `building` or `built`.
func (o RepositoryPagesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPages) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o RepositoryPagesOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPages) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type RepositoryPagesPtrOutput struct{ *pulumi.OutputState }

func (RepositoryPagesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryPages)(nil)).Elem()
}

func (o RepositoryPagesPtrOutput) ToRepositoryPagesPtrOutput() RepositoryPagesPtrOutput {
	return o
}

func (o RepositoryPagesPtrOutput) ToRepositoryPagesPtrOutputWithContext(ctx context.Context) RepositoryPagesPtrOutput {
	return o
}

func (o RepositoryPagesPtrOutput) Elem() RepositoryPagesOutput {
	return o.ApplyT(func(v *RepositoryPages) RepositoryPages {
		if v != nil {
			return *v
		}
		var ret RepositoryPages
		return ret
	}).(RepositoryPagesOutput)
}

// The custom domain for the repository. This can only be set after the repository has been created.
func (o RepositoryPagesPtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// Whether the rendered GitHub Pages site has a custom 404 page.
func (o RepositoryPagesPtrOutput) Custom404() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *bool {
		if v == nil {
			return nil
		}
		return v.Custom404
	}).(pulumi.BoolPtrOutput)
}

// The absolute URL (including scheme) of the rendered GitHub Pages site e.g. `https://username.github.io`.
func (o RepositoryPagesPtrOutput) HtmlUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *string {
		if v == nil {
			return nil
		}
		return v.HtmlUrl
	}).(pulumi.StringPtrOutput)
}

// The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
func (o RepositoryPagesPtrOutput) Source() RepositoryPagesSourcePtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *RepositoryPagesSource {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(RepositoryPagesSourcePtrOutput)
}

// The GitHub Pages site's build status e.g. `building` or `built`.
func (o RepositoryPagesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryPagesPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPages) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type RepositoryPagesSource struct {
	// The repository branch used to publish the site's source files. (i.e. `main` or `gh-pages`.
	Branch string `pulumi:"branch"`
	// The repository directory from which the site publishes (Default: `/`).
	Path *string `pulumi:"path"`
}

// RepositoryPagesSourceInput is an input type that accepts RepositoryPagesSourceArgs and RepositoryPagesSourceOutput values.
// You can construct a concrete instance of `RepositoryPagesSourceInput` via:
//
//          RepositoryPagesSourceArgs{...}
type RepositoryPagesSourceInput interface {
	pulumi.Input

	ToRepositoryPagesSourceOutput() RepositoryPagesSourceOutput
	ToRepositoryPagesSourceOutputWithContext(context.Context) RepositoryPagesSourceOutput
}

type RepositoryPagesSourceArgs struct {
	// The repository branch used to publish the site's source files. (i.e. `main` or `gh-pages`.
	Branch pulumi.StringInput `pulumi:"branch"`
	// The repository directory from which the site publishes (Default: `/`).
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (RepositoryPagesSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPagesSource)(nil)).Elem()
}

func (i RepositoryPagesSourceArgs) ToRepositoryPagesSourceOutput() RepositoryPagesSourceOutput {
	return i.ToRepositoryPagesSourceOutputWithContext(context.Background())
}

func (i RepositoryPagesSourceArgs) ToRepositoryPagesSourceOutputWithContext(ctx context.Context) RepositoryPagesSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesSourceOutput)
}

func (i RepositoryPagesSourceArgs) ToRepositoryPagesSourcePtrOutput() RepositoryPagesSourcePtrOutput {
	return i.ToRepositoryPagesSourcePtrOutputWithContext(context.Background())
}

func (i RepositoryPagesSourceArgs) ToRepositoryPagesSourcePtrOutputWithContext(ctx context.Context) RepositoryPagesSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesSourceOutput).ToRepositoryPagesSourcePtrOutputWithContext(ctx)
}

// RepositoryPagesSourcePtrInput is an input type that accepts RepositoryPagesSourceArgs, RepositoryPagesSourcePtr and RepositoryPagesSourcePtrOutput values.
// You can construct a concrete instance of `RepositoryPagesSourcePtrInput` via:
//
//          RepositoryPagesSourceArgs{...}
//
//  or:
//
//          nil
type RepositoryPagesSourcePtrInput interface {
	pulumi.Input

	ToRepositoryPagesSourcePtrOutput() RepositoryPagesSourcePtrOutput
	ToRepositoryPagesSourcePtrOutputWithContext(context.Context) RepositoryPagesSourcePtrOutput
}

type repositoryPagesSourcePtrType RepositoryPagesSourceArgs

func RepositoryPagesSourcePtr(v *RepositoryPagesSourceArgs) RepositoryPagesSourcePtrInput {
	return (*repositoryPagesSourcePtrType)(v)
}

func (*repositoryPagesSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryPagesSource)(nil)).Elem()
}

func (i *repositoryPagesSourcePtrType) ToRepositoryPagesSourcePtrOutput() RepositoryPagesSourcePtrOutput {
	return i.ToRepositoryPagesSourcePtrOutputWithContext(context.Background())
}

func (i *repositoryPagesSourcePtrType) ToRepositoryPagesSourcePtrOutputWithContext(ctx context.Context) RepositoryPagesSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPagesSourcePtrOutput)
}

type RepositoryPagesSourceOutput struct{ *pulumi.OutputState }

func (RepositoryPagesSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPagesSource)(nil)).Elem()
}

func (o RepositoryPagesSourceOutput) ToRepositoryPagesSourceOutput() RepositoryPagesSourceOutput {
	return o
}

func (o RepositoryPagesSourceOutput) ToRepositoryPagesSourceOutputWithContext(ctx context.Context) RepositoryPagesSourceOutput {
	return o
}

func (o RepositoryPagesSourceOutput) ToRepositoryPagesSourcePtrOutput() RepositoryPagesSourcePtrOutput {
	return o.ToRepositoryPagesSourcePtrOutputWithContext(context.Background())
}

func (o RepositoryPagesSourceOutput) ToRepositoryPagesSourcePtrOutputWithContext(ctx context.Context) RepositoryPagesSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryPagesSource) *RepositoryPagesSource {
		return &v
	}).(RepositoryPagesSourcePtrOutput)
}

// The repository branch used to publish the site's source files. (i.e. `main` or `gh-pages`.
func (o RepositoryPagesSourceOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryPagesSource) string { return v.Branch }).(pulumi.StringOutput)
}

// The repository directory from which the site publishes (Default: `/`).
func (o RepositoryPagesSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPagesSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type RepositoryPagesSourcePtrOutput struct{ *pulumi.OutputState }

func (RepositoryPagesSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryPagesSource)(nil)).Elem()
}

func (o RepositoryPagesSourcePtrOutput) ToRepositoryPagesSourcePtrOutput() RepositoryPagesSourcePtrOutput {
	return o
}

func (o RepositoryPagesSourcePtrOutput) ToRepositoryPagesSourcePtrOutputWithContext(ctx context.Context) RepositoryPagesSourcePtrOutput {
	return o
}

func (o RepositoryPagesSourcePtrOutput) Elem() RepositoryPagesSourceOutput {
	return o.ApplyT(func(v *RepositoryPagesSource) RepositoryPagesSource {
		if v != nil {
			return *v
		}
		var ret RepositoryPagesSource
		return ret
	}).(RepositoryPagesSourceOutput)
}

// The repository branch used to publish the site's source files. (i.e. `main` or `gh-pages`.
func (o RepositoryPagesSourcePtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPagesSource) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

// The repository directory from which the site publishes (Default: `/`).
func (o RepositoryPagesSourcePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryPagesSource) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type RepositoryTemplate struct {
	Owner      string `pulumi:"owner"`
	Repository string `pulumi:"repository"`
}

// RepositoryTemplateInput is an input type that accepts RepositoryTemplateArgs and RepositoryTemplateOutput values.
// You can construct a concrete instance of `RepositoryTemplateInput` via:
//
//          RepositoryTemplateArgs{...}
type RepositoryTemplateInput interface {
	pulumi.Input

	ToRepositoryTemplateOutput() RepositoryTemplateOutput
	ToRepositoryTemplateOutputWithContext(context.Context) RepositoryTemplateOutput
}

type RepositoryTemplateArgs struct {
	Owner      pulumi.StringInput `pulumi:"owner"`
	Repository pulumi.StringInput `pulumi:"repository"`
}

func (RepositoryTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryTemplate)(nil)).Elem()
}

func (i RepositoryTemplateArgs) ToRepositoryTemplateOutput() RepositoryTemplateOutput {
	return i.ToRepositoryTemplateOutputWithContext(context.Background())
}

func (i RepositoryTemplateArgs) ToRepositoryTemplateOutputWithContext(ctx context.Context) RepositoryTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryTemplateOutput)
}

func (i RepositoryTemplateArgs) ToRepositoryTemplatePtrOutput() RepositoryTemplatePtrOutput {
	return i.ToRepositoryTemplatePtrOutputWithContext(context.Background())
}

func (i RepositoryTemplateArgs) ToRepositoryTemplatePtrOutputWithContext(ctx context.Context) RepositoryTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryTemplateOutput).ToRepositoryTemplatePtrOutputWithContext(ctx)
}

// RepositoryTemplatePtrInput is an input type that accepts RepositoryTemplateArgs, RepositoryTemplatePtr and RepositoryTemplatePtrOutput values.
// You can construct a concrete instance of `RepositoryTemplatePtrInput` via:
//
//          RepositoryTemplateArgs{...}
//
//  or:
//
//          nil
type RepositoryTemplatePtrInput interface {
	pulumi.Input

	ToRepositoryTemplatePtrOutput() RepositoryTemplatePtrOutput
	ToRepositoryTemplatePtrOutputWithContext(context.Context) RepositoryTemplatePtrOutput
}

type repositoryTemplatePtrType RepositoryTemplateArgs

func RepositoryTemplatePtr(v *RepositoryTemplateArgs) RepositoryTemplatePtrInput {
	return (*repositoryTemplatePtrType)(v)
}

func (*repositoryTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryTemplate)(nil)).Elem()
}

func (i *repositoryTemplatePtrType) ToRepositoryTemplatePtrOutput() RepositoryTemplatePtrOutput {
	return i.ToRepositoryTemplatePtrOutputWithContext(context.Background())
}

func (i *repositoryTemplatePtrType) ToRepositoryTemplatePtrOutputWithContext(ctx context.Context) RepositoryTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryTemplatePtrOutput)
}

type RepositoryTemplateOutput struct{ *pulumi.OutputState }

func (RepositoryTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryTemplate)(nil)).Elem()
}

func (o RepositoryTemplateOutput) ToRepositoryTemplateOutput() RepositoryTemplateOutput {
	return o
}

func (o RepositoryTemplateOutput) ToRepositoryTemplateOutputWithContext(ctx context.Context) RepositoryTemplateOutput {
	return o
}

func (o RepositoryTemplateOutput) ToRepositoryTemplatePtrOutput() RepositoryTemplatePtrOutput {
	return o.ToRepositoryTemplatePtrOutputWithContext(context.Background())
}

func (o RepositoryTemplateOutput) ToRepositoryTemplatePtrOutputWithContext(ctx context.Context) RepositoryTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryTemplate) *RepositoryTemplate {
		return &v
	}).(RepositoryTemplatePtrOutput)
}

func (o RepositoryTemplateOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryTemplate) string { return v.Owner }).(pulumi.StringOutput)
}

func (o RepositoryTemplateOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryTemplate) string { return v.Repository }).(pulumi.StringOutput)
}

type RepositoryTemplatePtrOutput struct{ *pulumi.OutputState }

func (RepositoryTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryTemplate)(nil)).Elem()
}

func (o RepositoryTemplatePtrOutput) ToRepositoryTemplatePtrOutput() RepositoryTemplatePtrOutput {
	return o
}

func (o RepositoryTemplatePtrOutput) ToRepositoryTemplatePtrOutputWithContext(ctx context.Context) RepositoryTemplatePtrOutput {
	return o
}

func (o RepositoryTemplatePtrOutput) Elem() RepositoryTemplateOutput {
	return o.ApplyT(func(v *RepositoryTemplate) RepositoryTemplate {
		if v != nil {
			return *v
		}
		var ret RepositoryTemplate
		return ret
	}).(RepositoryTemplateOutput)
}

func (o RepositoryTemplatePtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Owner
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryTemplatePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

type RepositoryWebhookConfiguration struct {
	// The content type for the payload. Valid values are either `form` or `json`.
	ContentType *string `pulumi:"contentType"`
	// Insecure SSL boolean toggle. Defaults to `false`.
	InsecureSsl *bool `pulumi:"insecureSsl"`
	// The shared secret for the webhook. [See API documentation](https://developer.github.com/v3/repos/hooks/#create-a-hook).
	Secret *string `pulumi:"secret"`
	// The URL of the webhook.
	Url string `pulumi:"url"`
}

// RepositoryWebhookConfigurationInput is an input type that accepts RepositoryWebhookConfigurationArgs and RepositoryWebhookConfigurationOutput values.
// You can construct a concrete instance of `RepositoryWebhookConfigurationInput` via:
//
//          RepositoryWebhookConfigurationArgs{...}
type RepositoryWebhookConfigurationInput interface {
	pulumi.Input

	ToRepositoryWebhookConfigurationOutput() RepositoryWebhookConfigurationOutput
	ToRepositoryWebhookConfigurationOutputWithContext(context.Context) RepositoryWebhookConfigurationOutput
}

type RepositoryWebhookConfigurationArgs struct {
	// The content type for the payload. Valid values are either `form` or `json`.
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// Insecure SSL boolean toggle. Defaults to `false`.
	InsecureSsl pulumi.BoolPtrInput `pulumi:"insecureSsl"`
	// The shared secret for the webhook. [See API documentation](https://developer.github.com/v3/repos/hooks/#create-a-hook).
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// The URL of the webhook.
	Url pulumi.StringInput `pulumi:"url"`
}

func (RepositoryWebhookConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWebhookConfiguration)(nil)).Elem()
}

func (i RepositoryWebhookConfigurationArgs) ToRepositoryWebhookConfigurationOutput() RepositoryWebhookConfigurationOutput {
	return i.ToRepositoryWebhookConfigurationOutputWithContext(context.Background())
}

func (i RepositoryWebhookConfigurationArgs) ToRepositoryWebhookConfigurationOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWebhookConfigurationOutput)
}

func (i RepositoryWebhookConfigurationArgs) ToRepositoryWebhookConfigurationPtrOutput() RepositoryWebhookConfigurationPtrOutput {
	return i.ToRepositoryWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (i RepositoryWebhookConfigurationArgs) ToRepositoryWebhookConfigurationPtrOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWebhookConfigurationOutput).ToRepositoryWebhookConfigurationPtrOutputWithContext(ctx)
}

// RepositoryWebhookConfigurationPtrInput is an input type that accepts RepositoryWebhookConfigurationArgs, RepositoryWebhookConfigurationPtr and RepositoryWebhookConfigurationPtrOutput values.
// You can construct a concrete instance of `RepositoryWebhookConfigurationPtrInput` via:
//
//          RepositoryWebhookConfigurationArgs{...}
//
//  or:
//
//          nil
type RepositoryWebhookConfigurationPtrInput interface {
	pulumi.Input

	ToRepositoryWebhookConfigurationPtrOutput() RepositoryWebhookConfigurationPtrOutput
	ToRepositoryWebhookConfigurationPtrOutputWithContext(context.Context) RepositoryWebhookConfigurationPtrOutput
}

type repositoryWebhookConfigurationPtrType RepositoryWebhookConfigurationArgs

func RepositoryWebhookConfigurationPtr(v *RepositoryWebhookConfigurationArgs) RepositoryWebhookConfigurationPtrInput {
	return (*repositoryWebhookConfigurationPtrType)(v)
}

func (*repositoryWebhookConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryWebhookConfiguration)(nil)).Elem()
}

func (i *repositoryWebhookConfigurationPtrType) ToRepositoryWebhookConfigurationPtrOutput() RepositoryWebhookConfigurationPtrOutput {
	return i.ToRepositoryWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (i *repositoryWebhookConfigurationPtrType) ToRepositoryWebhookConfigurationPtrOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWebhookConfigurationPtrOutput)
}

type RepositoryWebhookConfigurationOutput struct{ *pulumi.OutputState }

func (RepositoryWebhookConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWebhookConfiguration)(nil)).Elem()
}

func (o RepositoryWebhookConfigurationOutput) ToRepositoryWebhookConfigurationOutput() RepositoryWebhookConfigurationOutput {
	return o
}

func (o RepositoryWebhookConfigurationOutput) ToRepositoryWebhookConfigurationOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationOutput {
	return o
}

func (o RepositoryWebhookConfigurationOutput) ToRepositoryWebhookConfigurationPtrOutput() RepositoryWebhookConfigurationPtrOutput {
	return o.ToRepositoryWebhookConfigurationPtrOutputWithContext(context.Background())
}

func (o RepositoryWebhookConfigurationOutput) ToRepositoryWebhookConfigurationPtrOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryWebhookConfiguration) *RepositoryWebhookConfiguration {
		return &v
	}).(RepositoryWebhookConfigurationPtrOutput)
}

// The content type for the payload. Valid values are either `form` or `json`.
func (o RepositoryWebhookConfigurationOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWebhookConfiguration) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// Insecure SSL boolean toggle. Defaults to `false`.
func (o RepositoryWebhookConfigurationOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepositoryWebhookConfiguration) *bool { return v.InsecureSsl }).(pulumi.BoolPtrOutput)
}

// The shared secret for the webhook. [See API documentation](https://developer.github.com/v3/repos/hooks/#create-a-hook).
func (o RepositoryWebhookConfigurationOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWebhookConfiguration) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// The URL of the webhook.
func (o RepositoryWebhookConfigurationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryWebhookConfiguration) string { return v.Url }).(pulumi.StringOutput)
}

type RepositoryWebhookConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RepositoryWebhookConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryWebhookConfiguration)(nil)).Elem()
}

func (o RepositoryWebhookConfigurationPtrOutput) ToRepositoryWebhookConfigurationPtrOutput() RepositoryWebhookConfigurationPtrOutput {
	return o
}

func (o RepositoryWebhookConfigurationPtrOutput) ToRepositoryWebhookConfigurationPtrOutputWithContext(ctx context.Context) RepositoryWebhookConfigurationPtrOutput {
	return o
}

func (o RepositoryWebhookConfigurationPtrOutput) Elem() RepositoryWebhookConfigurationOutput {
	return o.ApplyT(func(v *RepositoryWebhookConfiguration) RepositoryWebhookConfiguration {
		if v != nil {
			return *v
		}
		var ret RepositoryWebhookConfiguration
		return ret
	}).(RepositoryWebhookConfigurationOutput)
}

// The content type for the payload. Valid values are either `form` or `json`.
func (o RepositoryWebhookConfigurationPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

// Insecure SSL boolean toggle. Defaults to `false`.
func (o RepositoryWebhookConfigurationPtrOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RepositoryWebhookConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSsl
	}).(pulumi.BoolPtrOutput)
}

// The shared secret for the webhook. [See API documentation](https://developer.github.com/v3/repos/hooks/#create-a-hook).
func (o RepositoryWebhookConfigurationPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// The URL of the webhook.
func (o RepositoryWebhookConfigurationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryWebhookConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type TeamMembersMember struct {
	// The role of the user within the team.
	// Must be one of `member` or `maintainer`. Defaults to `member`.
	Role *string `pulumi:"role"`
	// The user to add to the team.
	Username string `pulumi:"username"`
}

// TeamMembersMemberInput is an input type that accepts TeamMembersMemberArgs and TeamMembersMemberOutput values.
// You can construct a concrete instance of `TeamMembersMemberInput` via:
//
//          TeamMembersMemberArgs{...}
type TeamMembersMemberInput interface {
	pulumi.Input

	ToTeamMembersMemberOutput() TeamMembersMemberOutput
	ToTeamMembersMemberOutputWithContext(context.Context) TeamMembersMemberOutput
}

type TeamMembersMemberArgs struct {
	// The role of the user within the team.
	// Must be one of `member` or `maintainer`. Defaults to `member`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The user to add to the team.
	Username pulumi.StringInput `pulumi:"username"`
}

func (TeamMembersMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamMembersMember)(nil)).Elem()
}

func (i TeamMembersMemberArgs) ToTeamMembersMemberOutput() TeamMembersMemberOutput {
	return i.ToTeamMembersMemberOutputWithContext(context.Background())
}

func (i TeamMembersMemberArgs) ToTeamMembersMemberOutputWithContext(ctx context.Context) TeamMembersMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamMembersMemberOutput)
}

// TeamMembersMemberArrayInput is an input type that accepts TeamMembersMemberArray and TeamMembersMemberArrayOutput values.
// You can construct a concrete instance of `TeamMembersMemberArrayInput` via:
//
//          TeamMembersMemberArray{ TeamMembersMemberArgs{...} }
type TeamMembersMemberArrayInput interface {
	pulumi.Input

	ToTeamMembersMemberArrayOutput() TeamMembersMemberArrayOutput
	ToTeamMembersMemberArrayOutputWithContext(context.Context) TeamMembersMemberArrayOutput
}

type TeamMembersMemberArray []TeamMembersMemberInput

func (TeamMembersMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamMembersMember)(nil)).Elem()
}

func (i TeamMembersMemberArray) ToTeamMembersMemberArrayOutput() TeamMembersMemberArrayOutput {
	return i.ToTeamMembersMemberArrayOutputWithContext(context.Background())
}

func (i TeamMembersMemberArray) ToTeamMembersMemberArrayOutputWithContext(ctx context.Context) TeamMembersMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamMembersMemberArrayOutput)
}

type TeamMembersMemberOutput struct{ *pulumi.OutputState }

func (TeamMembersMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamMembersMember)(nil)).Elem()
}

func (o TeamMembersMemberOutput) ToTeamMembersMemberOutput() TeamMembersMemberOutput {
	return o
}

func (o TeamMembersMemberOutput) ToTeamMembersMemberOutputWithContext(ctx context.Context) TeamMembersMemberOutput {
	return o
}

// The role of the user within the team.
// Must be one of `member` or `maintainer`. Defaults to `member`.
func (o TeamMembersMemberOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamMembersMember) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The user to add to the team.
func (o TeamMembersMemberOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v TeamMembersMember) string { return v.Username }).(pulumi.StringOutput)
}

type TeamMembersMemberArrayOutput struct{ *pulumi.OutputState }

func (TeamMembersMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamMembersMember)(nil)).Elem()
}

func (o TeamMembersMemberArrayOutput) ToTeamMembersMemberArrayOutput() TeamMembersMemberArrayOutput {
	return o
}

func (o TeamMembersMemberArrayOutput) ToTeamMembersMemberArrayOutputWithContext(ctx context.Context) TeamMembersMemberArrayOutput {
	return o
}

func (o TeamMembersMemberArrayOutput) Index(i pulumi.IntInput) TeamMembersMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TeamMembersMember {
		return vs[0].([]TeamMembersMember)[vs[1].(int)]
	}).(TeamMembersMemberOutput)
}

type TeamSyncGroupMappingGroup struct {
	// The description of the IdP group.
	GroupDescription string `pulumi:"groupDescription"`
	// The ID of the IdP group.
	GroupId string `pulumi:"groupId"`
	// The name of the IdP group.
	GroupName string `pulumi:"groupName"`
}

// TeamSyncGroupMappingGroupInput is an input type that accepts TeamSyncGroupMappingGroupArgs and TeamSyncGroupMappingGroupOutput values.
// You can construct a concrete instance of `TeamSyncGroupMappingGroupInput` via:
//
//          TeamSyncGroupMappingGroupArgs{...}
type TeamSyncGroupMappingGroupInput interface {
	pulumi.Input

	ToTeamSyncGroupMappingGroupOutput() TeamSyncGroupMappingGroupOutput
	ToTeamSyncGroupMappingGroupOutputWithContext(context.Context) TeamSyncGroupMappingGroupOutput
}

type TeamSyncGroupMappingGroupArgs struct {
	// The description of the IdP group.
	GroupDescription pulumi.StringInput `pulumi:"groupDescription"`
	// The ID of the IdP group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The name of the IdP group.
	GroupName pulumi.StringInput `pulumi:"groupName"`
}

func (TeamSyncGroupMappingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamSyncGroupMappingGroup)(nil)).Elem()
}

func (i TeamSyncGroupMappingGroupArgs) ToTeamSyncGroupMappingGroupOutput() TeamSyncGroupMappingGroupOutput {
	return i.ToTeamSyncGroupMappingGroupOutputWithContext(context.Background())
}

func (i TeamSyncGroupMappingGroupArgs) ToTeamSyncGroupMappingGroupOutputWithContext(ctx context.Context) TeamSyncGroupMappingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamSyncGroupMappingGroupOutput)
}

// TeamSyncGroupMappingGroupArrayInput is an input type that accepts TeamSyncGroupMappingGroupArray and TeamSyncGroupMappingGroupArrayOutput values.
// You can construct a concrete instance of `TeamSyncGroupMappingGroupArrayInput` via:
//
//          TeamSyncGroupMappingGroupArray{ TeamSyncGroupMappingGroupArgs{...} }
type TeamSyncGroupMappingGroupArrayInput interface {
	pulumi.Input

	ToTeamSyncGroupMappingGroupArrayOutput() TeamSyncGroupMappingGroupArrayOutput
	ToTeamSyncGroupMappingGroupArrayOutputWithContext(context.Context) TeamSyncGroupMappingGroupArrayOutput
}

type TeamSyncGroupMappingGroupArray []TeamSyncGroupMappingGroupInput

func (TeamSyncGroupMappingGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamSyncGroupMappingGroup)(nil)).Elem()
}

func (i TeamSyncGroupMappingGroupArray) ToTeamSyncGroupMappingGroupArrayOutput() TeamSyncGroupMappingGroupArrayOutput {
	return i.ToTeamSyncGroupMappingGroupArrayOutputWithContext(context.Background())
}

func (i TeamSyncGroupMappingGroupArray) ToTeamSyncGroupMappingGroupArrayOutputWithContext(ctx context.Context) TeamSyncGroupMappingGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamSyncGroupMappingGroupArrayOutput)
}

type TeamSyncGroupMappingGroupOutput struct{ *pulumi.OutputState }

func (TeamSyncGroupMappingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamSyncGroupMappingGroup)(nil)).Elem()
}

func (o TeamSyncGroupMappingGroupOutput) ToTeamSyncGroupMappingGroupOutput() TeamSyncGroupMappingGroupOutput {
	return o
}

func (o TeamSyncGroupMappingGroupOutput) ToTeamSyncGroupMappingGroupOutputWithContext(ctx context.Context) TeamSyncGroupMappingGroupOutput {
	return o
}

// The description of the IdP group.
func (o TeamSyncGroupMappingGroupOutput) GroupDescription() pulumi.StringOutput {
	return o.ApplyT(func(v TeamSyncGroupMappingGroup) string { return v.GroupDescription }).(pulumi.StringOutput)
}

// The ID of the IdP group.
func (o TeamSyncGroupMappingGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v TeamSyncGroupMappingGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// The name of the IdP group.
func (o TeamSyncGroupMappingGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v TeamSyncGroupMappingGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

type TeamSyncGroupMappingGroupArrayOutput struct{ *pulumi.OutputState }

func (TeamSyncGroupMappingGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamSyncGroupMappingGroup)(nil)).Elem()
}

func (o TeamSyncGroupMappingGroupArrayOutput) ToTeamSyncGroupMappingGroupArrayOutput() TeamSyncGroupMappingGroupArrayOutput {
	return o
}

func (o TeamSyncGroupMappingGroupArrayOutput) ToTeamSyncGroupMappingGroupArrayOutputWithContext(ctx context.Context) TeamSyncGroupMappingGroupArrayOutput {
	return o
}

func (o TeamSyncGroupMappingGroupArrayOutput) Index(i pulumi.IntInput) TeamSyncGroupMappingGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TeamSyncGroupMappingGroup {
		return vs[0].([]TeamSyncGroupMappingGroup)[vs[1].(int)]
	}).(TeamSyncGroupMappingGroupOutput)
}

type GetCollaboratorsCollaborator struct {
	// The GitHub API URL for the collaborator's events.
	EventsUrl string `pulumi:"eventsUrl"`
	// The GitHub API URL for the collaborator's followers.
	FollowersUrl string `pulumi:"followersUrl"`
	// The GitHub API URL for those following the collaborator.
	FollowingUrl string `pulumi:"followingUrl"`
	// The GitHub API URL for the collaborator's gists.
	GistsUrl string `pulumi:"gistsUrl"`
	// The GitHub HTML URL for the collaborator.
	HtmlUrl string `pulumi:"htmlUrl"`
	// The ID of the collaborator.
	Id int `pulumi:"id"`
	// The collaborator's login.
	Login string `pulumi:"login"`
	// The GitHub API URL for the collaborator's organizations.
	OrganizationsUrl string `pulumi:"organizationsUrl"`
	// The permission of the collaborator.
	Permission string `pulumi:"permission"`
	// The GitHub API URL for the collaborator's received events.
	ReceivedEventsUrl string `pulumi:"receivedEventsUrl"`
	// The GitHub API URL for the collaborator's repositories.
	ReposUrl string `pulumi:"reposUrl"`
	// Whether the user is a GitHub admin.
	SiteAdmin bool `pulumi:"siteAdmin"`
	// The GitHub API URL for the collaborator's starred repositories.
	StarredUrl string `pulumi:"starredUrl"`
	// The GitHub API URL for the collaborator's subscribed repositories.
	SubscriptionsUrl string `pulumi:"subscriptionsUrl"`
	// The type of the collaborator (ex. `user`).
	Type string `pulumi:"type"`
	// The GitHub API URL for the collaborator.
	Url string `pulumi:"url"`
}

// GetCollaboratorsCollaboratorInput is an input type that accepts GetCollaboratorsCollaboratorArgs and GetCollaboratorsCollaboratorOutput values.
// You can construct a concrete instance of `GetCollaboratorsCollaboratorInput` via:
//
//          GetCollaboratorsCollaboratorArgs{...}
type GetCollaboratorsCollaboratorInput interface {
	pulumi.Input

	ToGetCollaboratorsCollaboratorOutput() GetCollaboratorsCollaboratorOutput
	ToGetCollaboratorsCollaboratorOutputWithContext(context.Context) GetCollaboratorsCollaboratorOutput
}

type GetCollaboratorsCollaboratorArgs struct {
	// The GitHub API URL for the collaborator's events.
	EventsUrl pulumi.StringInput `pulumi:"eventsUrl"`
	// The GitHub API URL for the collaborator's followers.
	FollowersUrl pulumi.StringInput `pulumi:"followersUrl"`
	// The GitHub API URL for those following the collaborator.
	FollowingUrl pulumi.StringInput `pulumi:"followingUrl"`
	// The GitHub API URL for the collaborator's gists.
	GistsUrl pulumi.StringInput `pulumi:"gistsUrl"`
	// The GitHub HTML URL for the collaborator.
	HtmlUrl pulumi.StringInput `pulumi:"htmlUrl"`
	// The ID of the collaborator.
	Id pulumi.IntInput `pulumi:"id"`
	// The collaborator's login.
	Login pulumi.StringInput `pulumi:"login"`
	// The GitHub API URL for the collaborator's organizations.
	OrganizationsUrl pulumi.StringInput `pulumi:"organizationsUrl"`
	// The permission of the collaborator.
	Permission pulumi.StringInput `pulumi:"permission"`
	// The GitHub API URL for the collaborator's received events.
	ReceivedEventsUrl pulumi.StringInput `pulumi:"receivedEventsUrl"`
	// The GitHub API URL for the collaborator's repositories.
	ReposUrl pulumi.StringInput `pulumi:"reposUrl"`
	// Whether the user is a GitHub admin.
	SiteAdmin pulumi.BoolInput `pulumi:"siteAdmin"`
	// The GitHub API URL for the collaborator's starred repositories.
	StarredUrl pulumi.StringInput `pulumi:"starredUrl"`
	// The GitHub API URL for the collaborator's subscribed repositories.
	SubscriptionsUrl pulumi.StringInput `pulumi:"subscriptionsUrl"`
	// The type of the collaborator (ex. `user`).
	Type pulumi.StringInput `pulumi:"type"`
	// The GitHub API URL for the collaborator.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetCollaboratorsCollaboratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCollaboratorsCollaborator)(nil)).Elem()
}

func (i GetCollaboratorsCollaboratorArgs) ToGetCollaboratorsCollaboratorOutput() GetCollaboratorsCollaboratorOutput {
	return i.ToGetCollaboratorsCollaboratorOutputWithContext(context.Background())
}

func (i GetCollaboratorsCollaboratorArgs) ToGetCollaboratorsCollaboratorOutputWithContext(ctx context.Context) GetCollaboratorsCollaboratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCollaboratorsCollaboratorOutput)
}

// GetCollaboratorsCollaboratorArrayInput is an input type that accepts GetCollaboratorsCollaboratorArray and GetCollaboratorsCollaboratorArrayOutput values.
// You can construct a concrete instance of `GetCollaboratorsCollaboratorArrayInput` via:
//
//          GetCollaboratorsCollaboratorArray{ GetCollaboratorsCollaboratorArgs{...} }
type GetCollaboratorsCollaboratorArrayInput interface {
	pulumi.Input

	ToGetCollaboratorsCollaboratorArrayOutput() GetCollaboratorsCollaboratorArrayOutput
	ToGetCollaboratorsCollaboratorArrayOutputWithContext(context.Context) GetCollaboratorsCollaboratorArrayOutput
}

type GetCollaboratorsCollaboratorArray []GetCollaboratorsCollaboratorInput

func (GetCollaboratorsCollaboratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCollaboratorsCollaborator)(nil)).Elem()
}

func (i GetCollaboratorsCollaboratorArray) ToGetCollaboratorsCollaboratorArrayOutput() GetCollaboratorsCollaboratorArrayOutput {
	return i.ToGetCollaboratorsCollaboratorArrayOutputWithContext(context.Background())
}

func (i GetCollaboratorsCollaboratorArray) ToGetCollaboratorsCollaboratorArrayOutputWithContext(ctx context.Context) GetCollaboratorsCollaboratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCollaboratorsCollaboratorArrayOutput)
}

type GetCollaboratorsCollaboratorOutput struct{ *pulumi.OutputState }

func (GetCollaboratorsCollaboratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCollaboratorsCollaborator)(nil)).Elem()
}

func (o GetCollaboratorsCollaboratorOutput) ToGetCollaboratorsCollaboratorOutput() GetCollaboratorsCollaboratorOutput {
	return o
}

func (o GetCollaboratorsCollaboratorOutput) ToGetCollaboratorsCollaboratorOutputWithContext(ctx context.Context) GetCollaboratorsCollaboratorOutput {
	return o
}

// The GitHub API URL for the collaborator's events.
func (o GetCollaboratorsCollaboratorOutput) EventsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.EventsUrl }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's followers.
func (o GetCollaboratorsCollaboratorOutput) FollowersUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.FollowersUrl }).(pulumi.StringOutput)
}

// The GitHub API URL for those following the collaborator.
func (o GetCollaboratorsCollaboratorOutput) FollowingUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.FollowingUrl }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's gists.
func (o GetCollaboratorsCollaboratorOutput) GistsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.GistsUrl }).(pulumi.StringOutput)
}

// The GitHub HTML URL for the collaborator.
func (o GetCollaboratorsCollaboratorOutput) HtmlUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.HtmlUrl }).(pulumi.StringOutput)
}

// The ID of the collaborator.
func (o GetCollaboratorsCollaboratorOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) int { return v.Id }).(pulumi.IntOutput)
}

// The collaborator's login.
func (o GetCollaboratorsCollaboratorOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.Login }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's organizations.
func (o GetCollaboratorsCollaboratorOutput) OrganizationsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.OrganizationsUrl }).(pulumi.StringOutput)
}

// The permission of the collaborator.
func (o GetCollaboratorsCollaboratorOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.Permission }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's received events.
func (o GetCollaboratorsCollaboratorOutput) ReceivedEventsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.ReceivedEventsUrl }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's repositories.
func (o GetCollaboratorsCollaboratorOutput) ReposUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.ReposUrl }).(pulumi.StringOutput)
}

// Whether the user is a GitHub admin.
func (o GetCollaboratorsCollaboratorOutput) SiteAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) bool { return v.SiteAdmin }).(pulumi.BoolOutput)
}

// The GitHub API URL for the collaborator's starred repositories.
func (o GetCollaboratorsCollaboratorOutput) StarredUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.StarredUrl }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator's subscribed repositories.
func (o GetCollaboratorsCollaboratorOutput) SubscriptionsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.SubscriptionsUrl }).(pulumi.StringOutput)
}

// The type of the collaborator (ex. `user`).
func (o GetCollaboratorsCollaboratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.Type }).(pulumi.StringOutput)
}

// The GitHub API URL for the collaborator.
func (o GetCollaboratorsCollaboratorOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollaboratorsCollaborator) string { return v.Url }).(pulumi.StringOutput)
}

type GetCollaboratorsCollaboratorArrayOutput struct{ *pulumi.OutputState }

func (GetCollaboratorsCollaboratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCollaboratorsCollaborator)(nil)).Elem()
}

func (o GetCollaboratorsCollaboratorArrayOutput) ToGetCollaboratorsCollaboratorArrayOutput() GetCollaboratorsCollaboratorArrayOutput {
	return o
}

func (o GetCollaboratorsCollaboratorArrayOutput) ToGetCollaboratorsCollaboratorArrayOutputWithContext(ctx context.Context) GetCollaboratorsCollaboratorArrayOutput {
	return o
}

func (o GetCollaboratorsCollaboratorArrayOutput) Index(i pulumi.IntInput) GetCollaboratorsCollaboratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCollaboratorsCollaborator {
		return vs[0].([]GetCollaboratorsCollaborator)[vs[1].(int)]
	}).(GetCollaboratorsCollaboratorOutput)
}

type GetOrganizationTeamSyncGroupsGroup struct {
	// The description of the IdP group.
	GroupDescription string `pulumi:"groupDescription"`
	// The ID of the IdP group.
	GroupId string `pulumi:"groupId"`
	// The name of the IdP group.
	GroupName string `pulumi:"groupName"`
}

// GetOrganizationTeamSyncGroupsGroupInput is an input type that accepts GetOrganizationTeamSyncGroupsGroupArgs and GetOrganizationTeamSyncGroupsGroupOutput values.
// You can construct a concrete instance of `GetOrganizationTeamSyncGroupsGroupInput` via:
//
//          GetOrganizationTeamSyncGroupsGroupArgs{...}
type GetOrganizationTeamSyncGroupsGroupInput interface {
	pulumi.Input

	ToGetOrganizationTeamSyncGroupsGroupOutput() GetOrganizationTeamSyncGroupsGroupOutput
	ToGetOrganizationTeamSyncGroupsGroupOutputWithContext(context.Context) GetOrganizationTeamSyncGroupsGroupOutput
}

type GetOrganizationTeamSyncGroupsGroupArgs struct {
	// The description of the IdP group.
	GroupDescription pulumi.StringInput `pulumi:"groupDescription"`
	// The ID of the IdP group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The name of the IdP group.
	GroupName pulumi.StringInput `pulumi:"groupName"`
}

func (GetOrganizationTeamSyncGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTeamSyncGroupsGroup)(nil)).Elem()
}

func (i GetOrganizationTeamSyncGroupsGroupArgs) ToGetOrganizationTeamSyncGroupsGroupOutput() GetOrganizationTeamSyncGroupsGroupOutput {
	return i.ToGetOrganizationTeamSyncGroupsGroupOutputWithContext(context.Background())
}

func (i GetOrganizationTeamSyncGroupsGroupArgs) ToGetOrganizationTeamSyncGroupsGroupOutputWithContext(ctx context.Context) GetOrganizationTeamSyncGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTeamSyncGroupsGroupOutput)
}

// GetOrganizationTeamSyncGroupsGroupArrayInput is an input type that accepts GetOrganizationTeamSyncGroupsGroupArray and GetOrganizationTeamSyncGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetOrganizationTeamSyncGroupsGroupArrayInput` via:
//
//          GetOrganizationTeamSyncGroupsGroupArray{ GetOrganizationTeamSyncGroupsGroupArgs{...} }
type GetOrganizationTeamSyncGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetOrganizationTeamSyncGroupsGroupArrayOutput() GetOrganizationTeamSyncGroupsGroupArrayOutput
	ToGetOrganizationTeamSyncGroupsGroupArrayOutputWithContext(context.Context) GetOrganizationTeamSyncGroupsGroupArrayOutput
}

type GetOrganizationTeamSyncGroupsGroupArray []GetOrganizationTeamSyncGroupsGroupInput

func (GetOrganizationTeamSyncGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTeamSyncGroupsGroup)(nil)).Elem()
}

func (i GetOrganizationTeamSyncGroupsGroupArray) ToGetOrganizationTeamSyncGroupsGroupArrayOutput() GetOrganizationTeamSyncGroupsGroupArrayOutput {
	return i.ToGetOrganizationTeamSyncGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetOrganizationTeamSyncGroupsGroupArray) ToGetOrganizationTeamSyncGroupsGroupArrayOutputWithContext(ctx context.Context) GetOrganizationTeamSyncGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTeamSyncGroupsGroupArrayOutput)
}

type GetOrganizationTeamSyncGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetOrganizationTeamSyncGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTeamSyncGroupsGroup)(nil)).Elem()
}

func (o GetOrganizationTeamSyncGroupsGroupOutput) ToGetOrganizationTeamSyncGroupsGroupOutput() GetOrganizationTeamSyncGroupsGroupOutput {
	return o
}

func (o GetOrganizationTeamSyncGroupsGroupOutput) ToGetOrganizationTeamSyncGroupsGroupOutputWithContext(ctx context.Context) GetOrganizationTeamSyncGroupsGroupOutput {
	return o
}

// The description of the IdP group.
func (o GetOrganizationTeamSyncGroupsGroupOutput) GroupDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTeamSyncGroupsGroup) string { return v.GroupDescription }).(pulumi.StringOutput)
}

// The ID of the IdP group.
func (o GetOrganizationTeamSyncGroupsGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTeamSyncGroupsGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// The name of the IdP group.
func (o GetOrganizationTeamSyncGroupsGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTeamSyncGroupsGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

type GetOrganizationTeamSyncGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationTeamSyncGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTeamSyncGroupsGroup)(nil)).Elem()
}

func (o GetOrganizationTeamSyncGroupsGroupArrayOutput) ToGetOrganizationTeamSyncGroupsGroupArrayOutput() GetOrganizationTeamSyncGroupsGroupArrayOutput {
	return o
}

func (o GetOrganizationTeamSyncGroupsGroupArrayOutput) ToGetOrganizationTeamSyncGroupsGroupArrayOutputWithContext(ctx context.Context) GetOrganizationTeamSyncGroupsGroupArrayOutput {
	return o
}

func (o GetOrganizationTeamSyncGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetOrganizationTeamSyncGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationTeamSyncGroupsGroup {
		return vs[0].([]GetOrganizationTeamSyncGroupsGroup)[vs[1].(int)]
	}).(GetOrganizationTeamSyncGroupsGroupOutput)
}

type GetOrganizationTeamsTeam struct {
	// the team's description.
	Description string `pulumi:"description"`
	// the ID of the team.
	Id int `pulumi:"id"`
	// List of team members.
	Members []string `pulumi:"members"`
	// the team's full name.
	Name string `pulumi:"name"`
	// the Node ID of the team.
	NodeId string `pulumi:"nodeId"`
	// the team's privacy type.
	Privacy string `pulumi:"privacy"`
	// List of team repositories.
	Repositories []string `pulumi:"repositories"`
	// the slug of the team.
	Slug string `pulumi:"slug"`
}

// GetOrganizationTeamsTeamInput is an input type that accepts GetOrganizationTeamsTeamArgs and GetOrganizationTeamsTeamOutput values.
// You can construct a concrete instance of `GetOrganizationTeamsTeamInput` via:
//
//          GetOrganizationTeamsTeamArgs{...}
type GetOrganizationTeamsTeamInput interface {
	pulumi.Input

	ToGetOrganizationTeamsTeamOutput() GetOrganizationTeamsTeamOutput
	ToGetOrganizationTeamsTeamOutputWithContext(context.Context) GetOrganizationTeamsTeamOutput
}

type GetOrganizationTeamsTeamArgs struct {
	// the team's description.
	Description pulumi.StringInput `pulumi:"description"`
	// the ID of the team.
	Id pulumi.IntInput `pulumi:"id"`
	// List of team members.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// the team's full name.
	Name pulumi.StringInput `pulumi:"name"`
	// the Node ID of the team.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// the team's privacy type.
	Privacy pulumi.StringInput `pulumi:"privacy"`
	// List of team repositories.
	Repositories pulumi.StringArrayInput `pulumi:"repositories"`
	// the slug of the team.
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetOrganizationTeamsTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTeamsTeam)(nil)).Elem()
}

func (i GetOrganizationTeamsTeamArgs) ToGetOrganizationTeamsTeamOutput() GetOrganizationTeamsTeamOutput {
	return i.ToGetOrganizationTeamsTeamOutputWithContext(context.Background())
}

func (i GetOrganizationTeamsTeamArgs) ToGetOrganizationTeamsTeamOutputWithContext(ctx context.Context) GetOrganizationTeamsTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTeamsTeamOutput)
}

// GetOrganizationTeamsTeamArrayInput is an input type that accepts GetOrganizationTeamsTeamArray and GetOrganizationTeamsTeamArrayOutput values.
// You can construct a concrete instance of `GetOrganizationTeamsTeamArrayInput` via:
//
//          GetOrganizationTeamsTeamArray{ GetOrganizationTeamsTeamArgs{...} }
type GetOrganizationTeamsTeamArrayInput interface {
	pulumi.Input

	ToGetOrganizationTeamsTeamArrayOutput() GetOrganizationTeamsTeamArrayOutput
	ToGetOrganizationTeamsTeamArrayOutputWithContext(context.Context) GetOrganizationTeamsTeamArrayOutput
}

type GetOrganizationTeamsTeamArray []GetOrganizationTeamsTeamInput

func (GetOrganizationTeamsTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTeamsTeam)(nil)).Elem()
}

func (i GetOrganizationTeamsTeamArray) ToGetOrganizationTeamsTeamArrayOutput() GetOrganizationTeamsTeamArrayOutput {
	return i.ToGetOrganizationTeamsTeamArrayOutputWithContext(context.Background())
}

func (i GetOrganizationTeamsTeamArray) ToGetOrganizationTeamsTeamArrayOutputWithContext(ctx context.Context) GetOrganizationTeamsTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTeamsTeamArrayOutput)
}

type GetOrganizationTeamsTeamOutput struct{ *pulumi.OutputState }

func (GetOrganizationTeamsTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTeamsTeam)(nil)).Elem()
}

func (o GetOrganizationTeamsTeamOutput) ToGetOrganizationTeamsTeamOutput() GetOrganizationTeamsTeamOutput {
	return o
}

func (o GetOrganizationTeamsTeamOutput) ToGetOrganizationTeamsTeamOutputWithContext(ctx context.Context) GetOrganizationTeamsTeamOutput {
	return o
}

// the team's description.
func (o GetOrganizationTeamsTeamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTeamsTeam) string { return v.Description }).(pulumi.StringOutput)
}

// the ID of the team.
func (o GetOrganizationTeamsTeamOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrganizationTeamsTeam) int { return v.Id }).(pulumi.IntOutput)
}

// List of team members.
func (o GetOrganizationTeamsTeamOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrganizationTeamsTeam) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// the team's full name.
func (o GetOrganizationTeamsTeamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTeamsTeam) string { return v.Name }).(pulumi.StringOutput)
}

// the Node ID of the team.
func (o GetOrganizationTeamsTeamOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTeamsTeam) string { return v.NodeId }).(pulumi.StringOutput)
}

// the team's privacy type.
func (o GetOrganizationTeamsTeamOutput) Privacy() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTeamsTeam) string { return v.Privacy }).(pulumi.StringOutput)
}

// List of team repositories.
func (o GetOrganizationTeamsTeamOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrganizationTeamsTeam) []string { return v.Repositories }).(pulumi.StringArrayOutput)
}

// the slug of the team.
func (o GetOrganizationTeamsTeamOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTeamsTeam) string { return v.Slug }).(pulumi.StringOutput)
}

type GetOrganizationTeamsTeamArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationTeamsTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTeamsTeam)(nil)).Elem()
}

func (o GetOrganizationTeamsTeamArrayOutput) ToGetOrganizationTeamsTeamArrayOutput() GetOrganizationTeamsTeamArrayOutput {
	return o
}

func (o GetOrganizationTeamsTeamArrayOutput) ToGetOrganizationTeamsTeamArrayOutputWithContext(ctx context.Context) GetOrganizationTeamsTeamArrayOutput {
	return o
}

func (o GetOrganizationTeamsTeamArrayOutput) Index(i pulumi.IntInput) GetOrganizationTeamsTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationTeamsTeam {
		return vs[0].([]GetOrganizationTeamsTeam)[vs[1].(int)]
	}).(GetOrganizationTeamsTeamOutput)
}

type GetRepositoryBranch struct {
	// The name of the repository.
	Name string `pulumi:"name"`
	// Whether the branch is protected.
	Protected bool `pulumi:"protected"`
}

// GetRepositoryBranchInput is an input type that accepts GetRepositoryBranchArgs and GetRepositoryBranchOutput values.
// You can construct a concrete instance of `GetRepositoryBranchInput` via:
//
//          GetRepositoryBranchArgs{...}
type GetRepositoryBranchInput interface {
	pulumi.Input

	ToGetRepositoryBranchOutput() GetRepositoryBranchOutput
	ToGetRepositoryBranchOutputWithContext(context.Context) GetRepositoryBranchOutput
}

type GetRepositoryBranchArgs struct {
	// The name of the repository.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether the branch is protected.
	Protected pulumi.BoolInput `pulumi:"protected"`
}

func (GetRepositoryBranchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryBranch)(nil)).Elem()
}

func (i GetRepositoryBranchArgs) ToGetRepositoryBranchOutput() GetRepositoryBranchOutput {
	return i.ToGetRepositoryBranchOutputWithContext(context.Background())
}

func (i GetRepositoryBranchArgs) ToGetRepositoryBranchOutputWithContext(ctx context.Context) GetRepositoryBranchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryBranchOutput)
}

// GetRepositoryBranchArrayInput is an input type that accepts GetRepositoryBranchArray and GetRepositoryBranchArrayOutput values.
// You can construct a concrete instance of `GetRepositoryBranchArrayInput` via:
//
//          GetRepositoryBranchArray{ GetRepositoryBranchArgs{...} }
type GetRepositoryBranchArrayInput interface {
	pulumi.Input

	ToGetRepositoryBranchArrayOutput() GetRepositoryBranchArrayOutput
	ToGetRepositoryBranchArrayOutputWithContext(context.Context) GetRepositoryBranchArrayOutput
}

type GetRepositoryBranchArray []GetRepositoryBranchInput

func (GetRepositoryBranchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryBranch)(nil)).Elem()
}

func (i GetRepositoryBranchArray) ToGetRepositoryBranchArrayOutput() GetRepositoryBranchArrayOutput {
	return i.ToGetRepositoryBranchArrayOutputWithContext(context.Background())
}

func (i GetRepositoryBranchArray) ToGetRepositoryBranchArrayOutputWithContext(ctx context.Context) GetRepositoryBranchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryBranchArrayOutput)
}

type GetRepositoryBranchOutput struct{ *pulumi.OutputState }

func (GetRepositoryBranchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryBranch)(nil)).Elem()
}

func (o GetRepositoryBranchOutput) ToGetRepositoryBranchOutput() GetRepositoryBranchOutput {
	return o
}

func (o GetRepositoryBranchOutput) ToGetRepositoryBranchOutputWithContext(ctx context.Context) GetRepositoryBranchOutput {
	return o
}

// The name of the repository.
func (o GetRepositoryBranchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryBranch) string { return v.Name }).(pulumi.StringOutput)
}

// Whether the branch is protected.
func (o GetRepositoryBranchOutput) Protected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRepositoryBranch) bool { return v.Protected }).(pulumi.BoolOutput)
}

type GetRepositoryBranchArrayOutput struct{ *pulumi.OutputState }

func (GetRepositoryBranchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryBranch)(nil)).Elem()
}

func (o GetRepositoryBranchArrayOutput) ToGetRepositoryBranchArrayOutput() GetRepositoryBranchArrayOutput {
	return o
}

func (o GetRepositoryBranchArrayOutput) ToGetRepositoryBranchArrayOutputWithContext(ctx context.Context) GetRepositoryBranchArrayOutput {
	return o
}

func (o GetRepositoryBranchArrayOutput) Index(i pulumi.IntInput) GetRepositoryBranchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRepositoryBranch {
		return vs[0].([]GetRepositoryBranch)[vs[1].(int)]
	}).(GetRepositoryBranchOutput)
}

type GetRepositoryPage struct {
	Cname     string `pulumi:"cname"`
	Custom404 bool   `pulumi:"custom404"`
	// URL to the repository on the web.
	HtmlUrl string                    `pulumi:"htmlUrl"`
	Sources []GetRepositoryPageSource `pulumi:"sources"`
	Status  string                    `pulumi:"status"`
	Url     string                    `pulumi:"url"`
}

// GetRepositoryPageInput is an input type that accepts GetRepositoryPageArgs and GetRepositoryPageOutput values.
// You can construct a concrete instance of `GetRepositoryPageInput` via:
//
//          GetRepositoryPageArgs{...}
type GetRepositoryPageInput interface {
	pulumi.Input

	ToGetRepositoryPageOutput() GetRepositoryPageOutput
	ToGetRepositoryPageOutputWithContext(context.Context) GetRepositoryPageOutput
}

type GetRepositoryPageArgs struct {
	Cname     pulumi.StringInput `pulumi:"cname"`
	Custom404 pulumi.BoolInput   `pulumi:"custom404"`
	// URL to the repository on the web.
	HtmlUrl pulumi.StringInput                `pulumi:"htmlUrl"`
	Sources GetRepositoryPageSourceArrayInput `pulumi:"sources"`
	Status  pulumi.StringInput                `pulumi:"status"`
	Url     pulumi.StringInput                `pulumi:"url"`
}

func (GetRepositoryPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryPage)(nil)).Elem()
}

func (i GetRepositoryPageArgs) ToGetRepositoryPageOutput() GetRepositoryPageOutput {
	return i.ToGetRepositoryPageOutputWithContext(context.Background())
}

func (i GetRepositoryPageArgs) ToGetRepositoryPageOutputWithContext(ctx context.Context) GetRepositoryPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryPageOutput)
}

// GetRepositoryPageArrayInput is an input type that accepts GetRepositoryPageArray and GetRepositoryPageArrayOutput values.
// You can construct a concrete instance of `GetRepositoryPageArrayInput` via:
//
//          GetRepositoryPageArray{ GetRepositoryPageArgs{...} }
type GetRepositoryPageArrayInput interface {
	pulumi.Input

	ToGetRepositoryPageArrayOutput() GetRepositoryPageArrayOutput
	ToGetRepositoryPageArrayOutputWithContext(context.Context) GetRepositoryPageArrayOutput
}

type GetRepositoryPageArray []GetRepositoryPageInput

func (GetRepositoryPageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryPage)(nil)).Elem()
}

func (i GetRepositoryPageArray) ToGetRepositoryPageArrayOutput() GetRepositoryPageArrayOutput {
	return i.ToGetRepositoryPageArrayOutputWithContext(context.Background())
}

func (i GetRepositoryPageArray) ToGetRepositoryPageArrayOutputWithContext(ctx context.Context) GetRepositoryPageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryPageArrayOutput)
}

type GetRepositoryPageOutput struct{ *pulumi.OutputState }

func (GetRepositoryPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryPage)(nil)).Elem()
}

func (o GetRepositoryPageOutput) ToGetRepositoryPageOutput() GetRepositoryPageOutput {
	return o
}

func (o GetRepositoryPageOutput) ToGetRepositoryPageOutputWithContext(ctx context.Context) GetRepositoryPageOutput {
	return o
}

func (o GetRepositoryPageOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPage) string { return v.Cname }).(pulumi.StringOutput)
}

func (o GetRepositoryPageOutput) Custom404() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRepositoryPage) bool { return v.Custom404 }).(pulumi.BoolOutput)
}

// URL to the repository on the web.
func (o GetRepositoryPageOutput) HtmlUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPage) string { return v.HtmlUrl }).(pulumi.StringOutput)
}

func (o GetRepositoryPageOutput) Sources() GetRepositoryPageSourceArrayOutput {
	return o.ApplyT(func(v GetRepositoryPage) []GetRepositoryPageSource { return v.Sources }).(GetRepositoryPageSourceArrayOutput)
}

func (o GetRepositoryPageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPage) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetRepositoryPageOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPage) string { return v.Url }).(pulumi.StringOutput)
}

type GetRepositoryPageArrayOutput struct{ *pulumi.OutputState }

func (GetRepositoryPageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryPage)(nil)).Elem()
}

func (o GetRepositoryPageArrayOutput) ToGetRepositoryPageArrayOutput() GetRepositoryPageArrayOutput {
	return o
}

func (o GetRepositoryPageArrayOutput) ToGetRepositoryPageArrayOutputWithContext(ctx context.Context) GetRepositoryPageArrayOutput {
	return o
}

func (o GetRepositoryPageArrayOutput) Index(i pulumi.IntInput) GetRepositoryPageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRepositoryPage {
		return vs[0].([]GetRepositoryPage)[vs[1].(int)]
	}).(GetRepositoryPageOutput)
}

type GetRepositoryPageSource struct {
	Branch string `pulumi:"branch"`
	Path   string `pulumi:"path"`
}

// GetRepositoryPageSourceInput is an input type that accepts GetRepositoryPageSourceArgs and GetRepositoryPageSourceOutput values.
// You can construct a concrete instance of `GetRepositoryPageSourceInput` via:
//
//          GetRepositoryPageSourceArgs{...}
type GetRepositoryPageSourceInput interface {
	pulumi.Input

	ToGetRepositoryPageSourceOutput() GetRepositoryPageSourceOutput
	ToGetRepositoryPageSourceOutputWithContext(context.Context) GetRepositoryPageSourceOutput
}

type GetRepositoryPageSourceArgs struct {
	Branch pulumi.StringInput `pulumi:"branch"`
	Path   pulumi.StringInput `pulumi:"path"`
}

func (GetRepositoryPageSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryPageSource)(nil)).Elem()
}

func (i GetRepositoryPageSourceArgs) ToGetRepositoryPageSourceOutput() GetRepositoryPageSourceOutput {
	return i.ToGetRepositoryPageSourceOutputWithContext(context.Background())
}

func (i GetRepositoryPageSourceArgs) ToGetRepositoryPageSourceOutputWithContext(ctx context.Context) GetRepositoryPageSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryPageSourceOutput)
}

// GetRepositoryPageSourceArrayInput is an input type that accepts GetRepositoryPageSourceArray and GetRepositoryPageSourceArrayOutput values.
// You can construct a concrete instance of `GetRepositoryPageSourceArrayInput` via:
//
//          GetRepositoryPageSourceArray{ GetRepositoryPageSourceArgs{...} }
type GetRepositoryPageSourceArrayInput interface {
	pulumi.Input

	ToGetRepositoryPageSourceArrayOutput() GetRepositoryPageSourceArrayOutput
	ToGetRepositoryPageSourceArrayOutputWithContext(context.Context) GetRepositoryPageSourceArrayOutput
}

type GetRepositoryPageSourceArray []GetRepositoryPageSourceInput

func (GetRepositoryPageSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryPageSource)(nil)).Elem()
}

func (i GetRepositoryPageSourceArray) ToGetRepositoryPageSourceArrayOutput() GetRepositoryPageSourceArrayOutput {
	return i.ToGetRepositoryPageSourceArrayOutputWithContext(context.Background())
}

func (i GetRepositoryPageSourceArray) ToGetRepositoryPageSourceArrayOutputWithContext(ctx context.Context) GetRepositoryPageSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryPageSourceArrayOutput)
}

type GetRepositoryPageSourceOutput struct{ *pulumi.OutputState }

func (GetRepositoryPageSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryPageSource)(nil)).Elem()
}

func (o GetRepositoryPageSourceOutput) ToGetRepositoryPageSourceOutput() GetRepositoryPageSourceOutput {
	return o
}

func (o GetRepositoryPageSourceOutput) ToGetRepositoryPageSourceOutputWithContext(ctx context.Context) GetRepositoryPageSourceOutput {
	return o
}

func (o GetRepositoryPageSourceOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPageSource) string { return v.Branch }).(pulumi.StringOutput)
}

func (o GetRepositoryPageSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPageSource) string { return v.Path }).(pulumi.StringOutput)
}

type GetRepositoryPageSourceArrayOutput struct{ *pulumi.OutputState }

func (GetRepositoryPageSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryPageSource)(nil)).Elem()
}

func (o GetRepositoryPageSourceArrayOutput) ToGetRepositoryPageSourceArrayOutput() GetRepositoryPageSourceArrayOutput {
	return o
}

func (o GetRepositoryPageSourceArrayOutput) ToGetRepositoryPageSourceArrayOutputWithContext(ctx context.Context) GetRepositoryPageSourceArrayOutput {
	return o
}

func (o GetRepositoryPageSourceArrayOutput) Index(i pulumi.IntInput) GetRepositoryPageSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRepositoryPageSource {
		return vs[0].([]GetRepositoryPageSource)[vs[1].(int)]
	}).(GetRepositoryPageSourceOutput)
}

type GetRepositoryPullRequestsResult struct {
	// If set, filters Pull Requests by base branch name.
	BaseRef string `pulumi:"baseRef"`
	// Head commit SHA of the Pull Request base.
	BaseSha string `pulumi:"baseSha"`
	// Body of the Pull Request.
	Body string `pulumi:"body"`
	// Indicates Whether this Pull Request is a draft.
	Draft bool `pulumi:"draft"`
	// Owner of the Pull Request head repository.
	HeadOwner string `pulumi:"headOwner"`
	// If set, filters Pull Requests by head user or head organization and branch name in the format of "user:ref-name" or "organization:ref-name". For example: "github:new-script-format" or "octocat:test-branch".
	HeadRef string `pulumi:"headRef"`
	// Name of the Pull Request head repository.
	HeadRepository string `pulumi:"headRepository"`
	// Head commit SHA of the Pull Request head.
	HeadSha string `pulumi:"headSha"`
	// List of label names set on the Pull Request.
	Labels []string `pulumi:"labels"`
	// Indicates whether the base repository maintainers can modify the Pull Request.
	MaintainerCanModify bool `pulumi:"maintainerCanModify"`
	// The number of the Pull Request within the repository.
	Number int `pulumi:"number"`
	// Unix timestamp indicating the Pull Request creation time.
	OpenedAt int `pulumi:"openedAt"`
	// GitHub login of the user who opened the Pull Request.
	OpenedBy string `pulumi:"openedBy"`
	// If set, filters Pull Requests by state. Can be "open", "closed", or "all". Default: "open".
	State string `pulumi:"state"`
	// The title of the Pull Request.
	Title string `pulumi:"title"`
	// The timestamp of the last Pull Request update.
	UpdatedAt int `pulumi:"updatedAt"`
}

// GetRepositoryPullRequestsResultInput is an input type that accepts GetRepositoryPullRequestsResultArgs and GetRepositoryPullRequestsResultOutput values.
// You can construct a concrete instance of `GetRepositoryPullRequestsResultInput` via:
//
//          GetRepositoryPullRequestsResultArgs{...}
type GetRepositoryPullRequestsResultInput interface {
	pulumi.Input

	ToGetRepositoryPullRequestsResultOutput() GetRepositoryPullRequestsResultOutput
	ToGetRepositoryPullRequestsResultOutputWithContext(context.Context) GetRepositoryPullRequestsResultOutput
}

type GetRepositoryPullRequestsResultArgs struct {
	// If set, filters Pull Requests by base branch name.
	BaseRef pulumi.StringInput `pulumi:"baseRef"`
	// Head commit SHA of the Pull Request base.
	BaseSha pulumi.StringInput `pulumi:"baseSha"`
	// Body of the Pull Request.
	Body pulumi.StringInput `pulumi:"body"`
	// Indicates Whether this Pull Request is a draft.
	Draft pulumi.BoolInput `pulumi:"draft"`
	// Owner of the Pull Request head repository.
	HeadOwner pulumi.StringInput `pulumi:"headOwner"`
	// If set, filters Pull Requests by head user or head organization and branch name in the format of "user:ref-name" or "organization:ref-name". For example: "github:new-script-format" or "octocat:test-branch".
	HeadRef pulumi.StringInput `pulumi:"headRef"`
	// Name of the Pull Request head repository.
	HeadRepository pulumi.StringInput `pulumi:"headRepository"`
	// Head commit SHA of the Pull Request head.
	HeadSha pulumi.StringInput `pulumi:"headSha"`
	// List of label names set on the Pull Request.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// Indicates whether the base repository maintainers can modify the Pull Request.
	MaintainerCanModify pulumi.BoolInput `pulumi:"maintainerCanModify"`
	// The number of the Pull Request within the repository.
	Number pulumi.IntInput `pulumi:"number"`
	// Unix timestamp indicating the Pull Request creation time.
	OpenedAt pulumi.IntInput `pulumi:"openedAt"`
	// GitHub login of the user who opened the Pull Request.
	OpenedBy pulumi.StringInput `pulumi:"openedBy"`
	// If set, filters Pull Requests by state. Can be "open", "closed", or "all". Default: "open".
	State pulumi.StringInput `pulumi:"state"`
	// The title of the Pull Request.
	Title pulumi.StringInput `pulumi:"title"`
	// The timestamp of the last Pull Request update.
	UpdatedAt pulumi.IntInput `pulumi:"updatedAt"`
}

func (GetRepositoryPullRequestsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryPullRequestsResult)(nil)).Elem()
}

func (i GetRepositoryPullRequestsResultArgs) ToGetRepositoryPullRequestsResultOutput() GetRepositoryPullRequestsResultOutput {
	return i.ToGetRepositoryPullRequestsResultOutputWithContext(context.Background())
}

func (i GetRepositoryPullRequestsResultArgs) ToGetRepositoryPullRequestsResultOutputWithContext(ctx context.Context) GetRepositoryPullRequestsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryPullRequestsResultOutput)
}

// GetRepositoryPullRequestsResultArrayInput is an input type that accepts GetRepositoryPullRequestsResultArray and GetRepositoryPullRequestsResultArrayOutput values.
// You can construct a concrete instance of `GetRepositoryPullRequestsResultArrayInput` via:
//
//          GetRepositoryPullRequestsResultArray{ GetRepositoryPullRequestsResultArgs{...} }
type GetRepositoryPullRequestsResultArrayInput interface {
	pulumi.Input

	ToGetRepositoryPullRequestsResultArrayOutput() GetRepositoryPullRequestsResultArrayOutput
	ToGetRepositoryPullRequestsResultArrayOutputWithContext(context.Context) GetRepositoryPullRequestsResultArrayOutput
}

type GetRepositoryPullRequestsResultArray []GetRepositoryPullRequestsResultInput

func (GetRepositoryPullRequestsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryPullRequestsResult)(nil)).Elem()
}

func (i GetRepositoryPullRequestsResultArray) ToGetRepositoryPullRequestsResultArrayOutput() GetRepositoryPullRequestsResultArrayOutput {
	return i.ToGetRepositoryPullRequestsResultArrayOutputWithContext(context.Background())
}

func (i GetRepositoryPullRequestsResultArray) ToGetRepositoryPullRequestsResultArrayOutputWithContext(ctx context.Context) GetRepositoryPullRequestsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepositoryPullRequestsResultArrayOutput)
}

type GetRepositoryPullRequestsResultOutput struct{ *pulumi.OutputState }

func (GetRepositoryPullRequestsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryPullRequestsResult)(nil)).Elem()
}

func (o GetRepositoryPullRequestsResultOutput) ToGetRepositoryPullRequestsResultOutput() GetRepositoryPullRequestsResultOutput {
	return o
}

func (o GetRepositoryPullRequestsResultOutput) ToGetRepositoryPullRequestsResultOutputWithContext(ctx context.Context) GetRepositoryPullRequestsResultOutput {
	return o
}

// If set, filters Pull Requests by base branch name.
func (o GetRepositoryPullRequestsResultOutput) BaseRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) string { return v.BaseRef }).(pulumi.StringOutput)
}

// Head commit SHA of the Pull Request base.
func (o GetRepositoryPullRequestsResultOutput) BaseSha() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) string { return v.BaseSha }).(pulumi.StringOutput)
}

// Body of the Pull Request.
func (o GetRepositoryPullRequestsResultOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) string { return v.Body }).(pulumi.StringOutput)
}

// Indicates Whether this Pull Request is a draft.
func (o GetRepositoryPullRequestsResultOutput) Draft() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) bool { return v.Draft }).(pulumi.BoolOutput)
}

// Owner of the Pull Request head repository.
func (o GetRepositoryPullRequestsResultOutput) HeadOwner() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) string { return v.HeadOwner }).(pulumi.StringOutput)
}

// If set, filters Pull Requests by head user or head organization and branch name in the format of "user:ref-name" or "organization:ref-name". For example: "github:new-script-format" or "octocat:test-branch".
func (o GetRepositoryPullRequestsResultOutput) HeadRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) string { return v.HeadRef }).(pulumi.StringOutput)
}

// Name of the Pull Request head repository.
func (o GetRepositoryPullRequestsResultOutput) HeadRepository() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) string { return v.HeadRepository }).(pulumi.StringOutput)
}

// Head commit SHA of the Pull Request head.
func (o GetRepositoryPullRequestsResultOutput) HeadSha() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) string { return v.HeadSha }).(pulumi.StringOutput)
}

// List of label names set on the Pull Request.
func (o GetRepositoryPullRequestsResultOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// Indicates whether the base repository maintainers can modify the Pull Request.
func (o GetRepositoryPullRequestsResultOutput) MaintainerCanModify() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) bool { return v.MaintainerCanModify }).(pulumi.BoolOutput)
}

// The number of the Pull Request within the repository.
func (o GetRepositoryPullRequestsResultOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) int { return v.Number }).(pulumi.IntOutput)
}

// Unix timestamp indicating the Pull Request creation time.
func (o GetRepositoryPullRequestsResultOutput) OpenedAt() pulumi.IntOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) int { return v.OpenedAt }).(pulumi.IntOutput)
}

// GitHub login of the user who opened the Pull Request.
func (o GetRepositoryPullRequestsResultOutput) OpenedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) string { return v.OpenedBy }).(pulumi.StringOutput)
}

// If set, filters Pull Requests by state. Can be "open", "closed", or "all". Default: "open".
func (o GetRepositoryPullRequestsResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) string { return v.State }).(pulumi.StringOutput)
}

// The title of the Pull Request.
func (o GetRepositoryPullRequestsResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) string { return v.Title }).(pulumi.StringOutput)
}

// The timestamp of the last Pull Request update.
func (o GetRepositoryPullRequestsResultOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v GetRepositoryPullRequestsResult) int { return v.UpdatedAt }).(pulumi.IntOutput)
}

type GetRepositoryPullRequestsResultArrayOutput struct{ *pulumi.OutputState }

func (GetRepositoryPullRequestsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepositoryPullRequestsResult)(nil)).Elem()
}

func (o GetRepositoryPullRequestsResultArrayOutput) ToGetRepositoryPullRequestsResultArrayOutput() GetRepositoryPullRequestsResultArrayOutput {
	return o
}

func (o GetRepositoryPullRequestsResultArrayOutput) ToGetRepositoryPullRequestsResultArrayOutputWithContext(ctx context.Context) GetRepositoryPullRequestsResultArrayOutput {
	return o
}

func (o GetRepositoryPullRequestsResultArrayOutput) Index(i pulumi.IntInput) GetRepositoryPullRequestsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRepositoryPullRequestsResult {
		return vs[0].([]GetRepositoryPullRequestsResult)[vs[1].(int)]
	}).(GetRepositoryPullRequestsResultOutput)
}

type GetTreeEntry struct {
	Mode string `pulumi:"mode"`
	Path string `pulumi:"path"`
	Sha  string `pulumi:"sha"`
	Size int    `pulumi:"size"`
	Type string `pulumi:"type"`
}

// GetTreeEntryInput is an input type that accepts GetTreeEntryArgs and GetTreeEntryOutput values.
// You can construct a concrete instance of `GetTreeEntryInput` via:
//
//          GetTreeEntryArgs{...}
type GetTreeEntryInput interface {
	pulumi.Input

	ToGetTreeEntryOutput() GetTreeEntryOutput
	ToGetTreeEntryOutputWithContext(context.Context) GetTreeEntryOutput
}

type GetTreeEntryArgs struct {
	Mode pulumi.StringInput `pulumi:"mode"`
	Path pulumi.StringInput `pulumi:"path"`
	Sha  pulumi.StringInput `pulumi:"sha"`
	Size pulumi.IntInput    `pulumi:"size"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTreeEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTreeEntry)(nil)).Elem()
}

func (i GetTreeEntryArgs) ToGetTreeEntryOutput() GetTreeEntryOutput {
	return i.ToGetTreeEntryOutputWithContext(context.Background())
}

func (i GetTreeEntryArgs) ToGetTreeEntryOutputWithContext(ctx context.Context) GetTreeEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTreeEntryOutput)
}

// GetTreeEntryArrayInput is an input type that accepts GetTreeEntryArray and GetTreeEntryArrayOutput values.
// You can construct a concrete instance of `GetTreeEntryArrayInput` via:
//
//          GetTreeEntryArray{ GetTreeEntryArgs{...} }
type GetTreeEntryArrayInput interface {
	pulumi.Input

	ToGetTreeEntryArrayOutput() GetTreeEntryArrayOutput
	ToGetTreeEntryArrayOutputWithContext(context.Context) GetTreeEntryArrayOutput
}

type GetTreeEntryArray []GetTreeEntryInput

func (GetTreeEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTreeEntry)(nil)).Elem()
}

func (i GetTreeEntryArray) ToGetTreeEntryArrayOutput() GetTreeEntryArrayOutput {
	return i.ToGetTreeEntryArrayOutputWithContext(context.Background())
}

func (i GetTreeEntryArray) ToGetTreeEntryArrayOutputWithContext(ctx context.Context) GetTreeEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTreeEntryArrayOutput)
}

type GetTreeEntryOutput struct{ *pulumi.OutputState }

func (GetTreeEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTreeEntry)(nil)).Elem()
}

func (o GetTreeEntryOutput) ToGetTreeEntryOutput() GetTreeEntryOutput {
	return o
}

func (o GetTreeEntryOutput) ToGetTreeEntryOutputWithContext(ctx context.Context) GetTreeEntryOutput {
	return o
}

func (o GetTreeEntryOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetTreeEntry) string { return v.Mode }).(pulumi.StringOutput)
}

func (o GetTreeEntryOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetTreeEntry) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetTreeEntryOutput) Sha() pulumi.StringOutput {
	return o.ApplyT(func(v GetTreeEntry) string { return v.Sha }).(pulumi.StringOutput)
}

func (o GetTreeEntryOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetTreeEntry) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetTreeEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTreeEntry) string { return v.Type }).(pulumi.StringOutput)
}

type GetTreeEntryArrayOutput struct{ *pulumi.OutputState }

func (GetTreeEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTreeEntry)(nil)).Elem()
}

func (o GetTreeEntryArrayOutput) ToGetTreeEntryArrayOutput() GetTreeEntryArrayOutput {
	return o
}

func (o GetTreeEntryArrayOutput) ToGetTreeEntryArrayOutputWithContext(ctx context.Context) GetTreeEntryArrayOutput {
	return o
}

func (o GetTreeEntryArrayOutput) Index(i pulumi.IntInput) GetTreeEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTreeEntry {
		return vs[0].([]GetTreeEntry)[vs[1].(int)]
	}).(GetTreeEntryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionsOrganizationPermissionsAllowedActionsConfigInput)(nil)).Elem(), ActionsOrganizationPermissionsAllowedActionsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionsOrganizationPermissionsAllowedActionsConfigPtrInput)(nil)).Elem(), ActionsOrganizationPermissionsAllowedActionsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionsOrganizationPermissionsEnabledRepositoriesConfigInput)(nil)).Elem(), ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrInput)(nil)).Elem(), ActionsOrganizationPermissionsEnabledRepositoriesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionRequiredPullRequestReviewInput)(nil)).Elem(), BranchProtectionRequiredPullRequestReviewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionRequiredPullRequestReviewArrayInput)(nil)).Elem(), BranchProtectionRequiredPullRequestReviewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionRequiredStatusCheckInput)(nil)).Elem(), BranchProtectionRequiredStatusCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionRequiredStatusCheckArrayInput)(nil)).Elem(), BranchProtectionRequiredStatusCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionV3RequiredPullRequestReviewsInput)(nil)).Elem(), BranchProtectionV3RequiredPullRequestReviewsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionV3RequiredPullRequestReviewsPtrInput)(nil)).Elem(), BranchProtectionV3RequiredPullRequestReviewsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionV3RequiredStatusChecksInput)(nil)).Elem(), BranchProtectionV3RequiredStatusChecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionV3RequiredStatusChecksPtrInput)(nil)).Elem(), BranchProtectionV3RequiredStatusChecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionV3RestrictionsInput)(nil)).Elem(), BranchProtectionV3RestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionV3RestrictionsPtrInput)(nil)).Elem(), BranchProtectionV3RestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationWebhookConfigurationInput)(nil)).Elem(), OrganizationWebhookConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationWebhookConfigurationPtrInput)(nil)).Elem(), OrganizationWebhookConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAppAuthInput)(nil)).Elem(), ProviderAppAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAppAuthPtrInput)(nil)).Elem(), ProviderAppAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryBranchInput)(nil)).Elem(), RepositoryBranchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryBranchArrayInput)(nil)).Elem(), RepositoryBranchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryEnvironmentDeploymentBranchPolicyInput)(nil)).Elem(), RepositoryEnvironmentDeploymentBranchPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryEnvironmentDeploymentBranchPolicyPtrInput)(nil)).Elem(), RepositoryEnvironmentDeploymentBranchPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryEnvironmentReviewerInput)(nil)).Elem(), RepositoryEnvironmentReviewerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryEnvironmentReviewerArrayInput)(nil)).Elem(), RepositoryEnvironmentReviewerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryPagesInput)(nil)).Elem(), RepositoryPagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryPagesPtrInput)(nil)).Elem(), RepositoryPagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryPagesSourceInput)(nil)).Elem(), RepositoryPagesSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryPagesSourcePtrInput)(nil)).Elem(), RepositoryPagesSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryTemplateInput)(nil)).Elem(), RepositoryTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryTemplatePtrInput)(nil)).Elem(), RepositoryTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWebhookConfigurationInput)(nil)).Elem(), RepositoryWebhookConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWebhookConfigurationPtrInput)(nil)).Elem(), RepositoryWebhookConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamMembersMemberInput)(nil)).Elem(), TeamMembersMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamMembersMemberArrayInput)(nil)).Elem(), TeamMembersMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamSyncGroupMappingGroupInput)(nil)).Elem(), TeamSyncGroupMappingGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamSyncGroupMappingGroupArrayInput)(nil)).Elem(), TeamSyncGroupMappingGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCollaboratorsCollaboratorInput)(nil)).Elem(), GetCollaboratorsCollaboratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCollaboratorsCollaboratorArrayInput)(nil)).Elem(), GetCollaboratorsCollaboratorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationTeamSyncGroupsGroupInput)(nil)).Elem(), GetOrganizationTeamSyncGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationTeamSyncGroupsGroupArrayInput)(nil)).Elem(), GetOrganizationTeamSyncGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationTeamsTeamInput)(nil)).Elem(), GetOrganizationTeamsTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationTeamsTeamArrayInput)(nil)).Elem(), GetOrganizationTeamsTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepositoryBranchInput)(nil)).Elem(), GetRepositoryBranchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepositoryBranchArrayInput)(nil)).Elem(), GetRepositoryBranchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepositoryPageInput)(nil)).Elem(), GetRepositoryPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepositoryPageArrayInput)(nil)).Elem(), GetRepositoryPageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepositoryPageSourceInput)(nil)).Elem(), GetRepositoryPageSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepositoryPageSourceArrayInput)(nil)).Elem(), GetRepositoryPageSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepositoryPullRequestsResultInput)(nil)).Elem(), GetRepositoryPullRequestsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepositoryPullRequestsResultArrayInput)(nil)).Elem(), GetRepositoryPullRequestsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTreeEntryInput)(nil)).Elem(), GetTreeEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTreeEntryArrayInput)(nil)).Elem(), GetTreeEntryArray{})
	pulumi.RegisterOutputType(ActionsOrganizationPermissionsAllowedActionsConfigOutput{})
	pulumi.RegisterOutputType(ActionsOrganizationPermissionsAllowedActionsConfigPtrOutput{})
	pulumi.RegisterOutputType(ActionsOrganizationPermissionsEnabledRepositoriesConfigOutput{})
	pulumi.RegisterOutputType(ActionsOrganizationPermissionsEnabledRepositoriesConfigPtrOutput{})
	pulumi.RegisterOutputType(BranchProtectionRequiredPullRequestReviewOutput{})
	pulumi.RegisterOutputType(BranchProtectionRequiredPullRequestReviewArrayOutput{})
	pulumi.RegisterOutputType(BranchProtectionRequiredStatusCheckOutput{})
	pulumi.RegisterOutputType(BranchProtectionRequiredStatusCheckArrayOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RequiredPullRequestReviewsOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RequiredPullRequestReviewsPtrOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RequiredStatusChecksOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RequiredStatusChecksPtrOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RestrictionsOutput{})
	pulumi.RegisterOutputType(BranchProtectionV3RestrictionsPtrOutput{})
	pulumi.RegisterOutputType(OrganizationWebhookConfigurationOutput{})
	pulumi.RegisterOutputType(OrganizationWebhookConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ProviderAppAuthOutput{})
	pulumi.RegisterOutputType(ProviderAppAuthPtrOutput{})
	pulumi.RegisterOutputType(RepositoryBranchOutput{})
	pulumi.RegisterOutputType(RepositoryBranchArrayOutput{})
	pulumi.RegisterOutputType(RepositoryEnvironmentDeploymentBranchPolicyOutput{})
	pulumi.RegisterOutputType(RepositoryEnvironmentDeploymentBranchPolicyPtrOutput{})
	pulumi.RegisterOutputType(RepositoryEnvironmentReviewerOutput{})
	pulumi.RegisterOutputType(RepositoryEnvironmentReviewerArrayOutput{})
	pulumi.RegisterOutputType(RepositoryPagesOutput{})
	pulumi.RegisterOutputType(RepositoryPagesPtrOutput{})
	pulumi.RegisterOutputType(RepositoryPagesSourceOutput{})
	pulumi.RegisterOutputType(RepositoryPagesSourcePtrOutput{})
	pulumi.RegisterOutputType(RepositoryTemplateOutput{})
	pulumi.RegisterOutputType(RepositoryTemplatePtrOutput{})
	pulumi.RegisterOutputType(RepositoryWebhookConfigurationOutput{})
	pulumi.RegisterOutputType(RepositoryWebhookConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TeamMembersMemberOutput{})
	pulumi.RegisterOutputType(TeamMembersMemberArrayOutput{})
	pulumi.RegisterOutputType(TeamSyncGroupMappingGroupOutput{})
	pulumi.RegisterOutputType(TeamSyncGroupMappingGroupArrayOutput{})
	pulumi.RegisterOutputType(GetCollaboratorsCollaboratorOutput{})
	pulumi.RegisterOutputType(GetCollaboratorsCollaboratorArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationTeamSyncGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetOrganizationTeamSyncGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationTeamsTeamOutput{})
	pulumi.RegisterOutputType(GetOrganizationTeamsTeamArrayOutput{})
	pulumi.RegisterOutputType(GetRepositoryBranchOutput{})
	pulumi.RegisterOutputType(GetRepositoryBranchArrayOutput{})
	pulumi.RegisterOutputType(GetRepositoryPageOutput{})
	pulumi.RegisterOutputType(GetRepositoryPageArrayOutput{})
	pulumi.RegisterOutputType(GetRepositoryPageSourceOutput{})
	pulumi.RegisterOutputType(GetRepositoryPageSourceArrayOutput{})
	pulumi.RegisterOutputType(GetRepositoryPullRequestsResultOutput{})
	pulumi.RegisterOutputType(GetRepositoryPullRequestsResultArrayOutput{})
	pulumi.RegisterOutputType(GetTreeEntryOutput{})
	pulumi.RegisterOutputType(GetTreeEntryArrayOutput{})
}
