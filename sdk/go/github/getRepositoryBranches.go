// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRepositoryBranches(ctx *pulumi.Context, args *GetRepositoryBranchesArgs, opts ...pulumi.InvokeOption) (*GetRepositoryBranchesResult, error) {
	var rv GetRepositoryBranchesResult
	err := ctx.Invoke("github:index/getRepositoryBranches:getRepositoryBranches", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryBranches.
type GetRepositoryBranchesArgs struct {
	Repository string `pulumi:"repository"`
}

// A collection of values returned by getRepositoryBranches.
type GetRepositoryBranchesResult struct {
	Branches []GetRepositoryBranchesBranch `pulumi:"branches"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Repository string `pulumi:"repository"`
}

func GetRepositoryBranchesOutput(ctx *pulumi.Context, args GetRepositoryBranchesOutputArgs, opts ...pulumi.InvokeOption) GetRepositoryBranchesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRepositoryBranchesResult, error) {
			args := v.(GetRepositoryBranchesArgs)
			r, err := GetRepositoryBranches(ctx, &args, opts...)
			var s GetRepositoryBranchesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRepositoryBranchesResultOutput)
}

// A collection of arguments for invoking getRepositoryBranches.
type GetRepositoryBranchesOutputArgs struct {
	Repository pulumi.StringInput `pulumi:"repository"`
}

func (GetRepositoryBranchesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryBranchesArgs)(nil)).Elem()
}

// A collection of values returned by getRepositoryBranches.
type GetRepositoryBranchesResultOutput struct{ *pulumi.OutputState }

func (GetRepositoryBranchesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryBranchesResult)(nil)).Elem()
}

func (o GetRepositoryBranchesResultOutput) ToGetRepositoryBranchesResultOutput() GetRepositoryBranchesResultOutput {
	return o
}

func (o GetRepositoryBranchesResultOutput) ToGetRepositoryBranchesResultOutputWithContext(ctx context.Context) GetRepositoryBranchesResultOutput {
	return o
}

func (o GetRepositoryBranchesResultOutput) Branches() GetRepositoryBranchesBranchArrayOutput {
	return o.ApplyT(func(v GetRepositoryBranchesResult) []GetRepositoryBranchesBranch { return v.Branches }).(GetRepositoryBranchesBranchArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRepositoryBranchesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryBranchesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRepositoryBranchesResultOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryBranchesResult) string { return v.Repository }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRepositoryBranchesResultOutput{})
}
