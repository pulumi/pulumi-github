// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-github/sdk/v6/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource help you to allow/unallow a repository to use an existing GitHub Actions secrets within your GitHub organization.
// You must have write access to an organization secret to use this resource.
//
// This resource is only applicable when `visibility` of the existing organization secret has been set to `selected`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-github/sdk/v6/go/github"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := github.LookupRepository(ctx, &github.LookupRepositoryArgs{
//				FullName: pulumi.StringRef("my-org/repo"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = github.NewActionsOrganizationSecretRepository(ctx, "org_secret_repos", &github.ActionsOrganizationSecretRepositoryArgs{
//				SecretName:   pulumi.String("EXAMPLE_SECRET_NAME"),
//				RepositoryId: pulumi.Any(repoGithubRepository.RepoId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// This resource can be imported using an ID made up of the secret name:
//
// ```sh
// $ pulumi import github:index/actionsOrganizationSecretRepository:ActionsOrganizationSecretRepository test_secret_repos test_secret_name:repo_id
// ```
type ActionsOrganizationSecretRepository struct {
	pulumi.CustomResourceState

	// Repository id that can access the organization secret.
	RepositoryId pulumi.IntOutput `pulumi:"repositoryId"`
	// Name of the existing secret
	SecretName pulumi.StringOutput `pulumi:"secretName"`
}

// NewActionsOrganizationSecretRepository registers a new resource with the given unique name, arguments, and options.
func NewActionsOrganizationSecretRepository(ctx *pulumi.Context,
	name string, args *ActionsOrganizationSecretRepositoryArgs, opts ...pulumi.ResourceOption) (*ActionsOrganizationSecretRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RepositoryId == nil {
		return nil, errors.New("invalid value for required argument 'RepositoryId'")
	}
	if args.SecretName == nil {
		return nil, errors.New("invalid value for required argument 'SecretName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ActionsOrganizationSecretRepository
	err := ctx.RegisterResource("github:index/actionsOrganizationSecretRepository:ActionsOrganizationSecretRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetActionsOrganizationSecretRepository gets an existing ActionsOrganizationSecretRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActionsOrganizationSecretRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ActionsOrganizationSecretRepositoryState, opts ...pulumi.ResourceOption) (*ActionsOrganizationSecretRepository, error) {
	var resource ActionsOrganizationSecretRepository
	err := ctx.ReadResource("github:index/actionsOrganizationSecretRepository:ActionsOrganizationSecretRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ActionsOrganizationSecretRepository resources.
type actionsOrganizationSecretRepositoryState struct {
	// Repository id that can access the organization secret.
	RepositoryId *int `pulumi:"repositoryId"`
	// Name of the existing secret
	SecretName *string `pulumi:"secretName"`
}

type ActionsOrganizationSecretRepositoryState struct {
	// Repository id that can access the organization secret.
	RepositoryId pulumi.IntPtrInput
	// Name of the existing secret
	SecretName pulumi.StringPtrInput
}

func (ActionsOrganizationSecretRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*actionsOrganizationSecretRepositoryState)(nil)).Elem()
}

type actionsOrganizationSecretRepositoryArgs struct {
	// Repository id that can access the organization secret.
	RepositoryId int `pulumi:"repositoryId"`
	// Name of the existing secret
	SecretName string `pulumi:"secretName"`
}

// The set of arguments for constructing a ActionsOrganizationSecretRepository resource.
type ActionsOrganizationSecretRepositoryArgs struct {
	// Repository id that can access the organization secret.
	RepositoryId pulumi.IntInput
	// Name of the existing secret
	SecretName pulumi.StringInput
}

func (ActionsOrganizationSecretRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*actionsOrganizationSecretRepositoryArgs)(nil)).Elem()
}

type ActionsOrganizationSecretRepositoryInput interface {
	pulumi.Input

	ToActionsOrganizationSecretRepositoryOutput() ActionsOrganizationSecretRepositoryOutput
	ToActionsOrganizationSecretRepositoryOutputWithContext(ctx context.Context) ActionsOrganizationSecretRepositoryOutput
}

func (*ActionsOrganizationSecretRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionsOrganizationSecretRepository)(nil)).Elem()
}

func (i *ActionsOrganizationSecretRepository) ToActionsOrganizationSecretRepositoryOutput() ActionsOrganizationSecretRepositoryOutput {
	return i.ToActionsOrganizationSecretRepositoryOutputWithContext(context.Background())
}

func (i *ActionsOrganizationSecretRepository) ToActionsOrganizationSecretRepositoryOutputWithContext(ctx context.Context) ActionsOrganizationSecretRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionsOrganizationSecretRepositoryOutput)
}

// ActionsOrganizationSecretRepositoryArrayInput is an input type that accepts ActionsOrganizationSecretRepositoryArray and ActionsOrganizationSecretRepositoryArrayOutput values.
// You can construct a concrete instance of `ActionsOrganizationSecretRepositoryArrayInput` via:
//
//	ActionsOrganizationSecretRepositoryArray{ ActionsOrganizationSecretRepositoryArgs{...} }
type ActionsOrganizationSecretRepositoryArrayInput interface {
	pulumi.Input

	ToActionsOrganizationSecretRepositoryArrayOutput() ActionsOrganizationSecretRepositoryArrayOutput
	ToActionsOrganizationSecretRepositoryArrayOutputWithContext(context.Context) ActionsOrganizationSecretRepositoryArrayOutput
}

type ActionsOrganizationSecretRepositoryArray []ActionsOrganizationSecretRepositoryInput

func (ActionsOrganizationSecretRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ActionsOrganizationSecretRepository)(nil)).Elem()
}

func (i ActionsOrganizationSecretRepositoryArray) ToActionsOrganizationSecretRepositoryArrayOutput() ActionsOrganizationSecretRepositoryArrayOutput {
	return i.ToActionsOrganizationSecretRepositoryArrayOutputWithContext(context.Background())
}

func (i ActionsOrganizationSecretRepositoryArray) ToActionsOrganizationSecretRepositoryArrayOutputWithContext(ctx context.Context) ActionsOrganizationSecretRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionsOrganizationSecretRepositoryArrayOutput)
}

// ActionsOrganizationSecretRepositoryMapInput is an input type that accepts ActionsOrganizationSecretRepositoryMap and ActionsOrganizationSecretRepositoryMapOutput values.
// You can construct a concrete instance of `ActionsOrganizationSecretRepositoryMapInput` via:
//
//	ActionsOrganizationSecretRepositoryMap{ "key": ActionsOrganizationSecretRepositoryArgs{...} }
type ActionsOrganizationSecretRepositoryMapInput interface {
	pulumi.Input

	ToActionsOrganizationSecretRepositoryMapOutput() ActionsOrganizationSecretRepositoryMapOutput
	ToActionsOrganizationSecretRepositoryMapOutputWithContext(context.Context) ActionsOrganizationSecretRepositoryMapOutput
}

type ActionsOrganizationSecretRepositoryMap map[string]ActionsOrganizationSecretRepositoryInput

func (ActionsOrganizationSecretRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ActionsOrganizationSecretRepository)(nil)).Elem()
}

func (i ActionsOrganizationSecretRepositoryMap) ToActionsOrganizationSecretRepositoryMapOutput() ActionsOrganizationSecretRepositoryMapOutput {
	return i.ToActionsOrganizationSecretRepositoryMapOutputWithContext(context.Background())
}

func (i ActionsOrganizationSecretRepositoryMap) ToActionsOrganizationSecretRepositoryMapOutputWithContext(ctx context.Context) ActionsOrganizationSecretRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionsOrganizationSecretRepositoryMapOutput)
}

type ActionsOrganizationSecretRepositoryOutput struct{ *pulumi.OutputState }

func (ActionsOrganizationSecretRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionsOrganizationSecretRepository)(nil)).Elem()
}

func (o ActionsOrganizationSecretRepositoryOutput) ToActionsOrganizationSecretRepositoryOutput() ActionsOrganizationSecretRepositoryOutput {
	return o
}

func (o ActionsOrganizationSecretRepositoryOutput) ToActionsOrganizationSecretRepositoryOutputWithContext(ctx context.Context) ActionsOrganizationSecretRepositoryOutput {
	return o
}

// Repository id that can access the organization secret.
func (o ActionsOrganizationSecretRepositoryOutput) RepositoryId() pulumi.IntOutput {
	return o.ApplyT(func(v *ActionsOrganizationSecretRepository) pulumi.IntOutput { return v.RepositoryId }).(pulumi.IntOutput)
}

// Name of the existing secret
func (o ActionsOrganizationSecretRepositoryOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionsOrganizationSecretRepository) pulumi.StringOutput { return v.SecretName }).(pulumi.StringOutput)
}

type ActionsOrganizationSecretRepositoryArrayOutput struct{ *pulumi.OutputState }

func (ActionsOrganizationSecretRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ActionsOrganizationSecretRepository)(nil)).Elem()
}

func (o ActionsOrganizationSecretRepositoryArrayOutput) ToActionsOrganizationSecretRepositoryArrayOutput() ActionsOrganizationSecretRepositoryArrayOutput {
	return o
}

func (o ActionsOrganizationSecretRepositoryArrayOutput) ToActionsOrganizationSecretRepositoryArrayOutputWithContext(ctx context.Context) ActionsOrganizationSecretRepositoryArrayOutput {
	return o
}

func (o ActionsOrganizationSecretRepositoryArrayOutput) Index(i pulumi.IntInput) ActionsOrganizationSecretRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ActionsOrganizationSecretRepository {
		return vs[0].([]*ActionsOrganizationSecretRepository)[vs[1].(int)]
	}).(ActionsOrganizationSecretRepositoryOutput)
}

type ActionsOrganizationSecretRepositoryMapOutput struct{ *pulumi.OutputState }

func (ActionsOrganizationSecretRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ActionsOrganizationSecretRepository)(nil)).Elem()
}

func (o ActionsOrganizationSecretRepositoryMapOutput) ToActionsOrganizationSecretRepositoryMapOutput() ActionsOrganizationSecretRepositoryMapOutput {
	return o
}

func (o ActionsOrganizationSecretRepositoryMapOutput) ToActionsOrganizationSecretRepositoryMapOutputWithContext(ctx context.Context) ActionsOrganizationSecretRepositoryMapOutput {
	return o
}

func (o ActionsOrganizationSecretRepositoryMapOutput) MapIndex(k pulumi.StringInput) ActionsOrganizationSecretRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ActionsOrganizationSecretRepository {
		return vs[0].(map[string]*ActionsOrganizationSecretRepository)[vs[1].(string)]
	}).(ActionsOrganizationSecretRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionsOrganizationSecretRepositoryInput)(nil)).Elem(), &ActionsOrganizationSecretRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionsOrganizationSecretRepositoryArrayInput)(nil)).Elem(), ActionsOrganizationSecretRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionsOrganizationSecretRepositoryMapInput)(nil)).Elem(), ActionsOrganizationSecretRepositoryMap{})
	pulumi.RegisterOutputType(ActionsOrganizationSecretRepositoryOutput{})
	pulumi.RegisterOutputType(ActionsOrganizationSecretRepositoryArrayOutput{})
	pulumi.RegisterOutputType(ActionsOrganizationSecretRepositoryMapOutput{})
}
