// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-github/sdk/v6/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lookup all teams assigned to a custom organization role.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-github/sdk/v6/go/github"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := github.GetOrganizationRoleTeams(ctx, &github.GetOrganizationRoleTeamsArgs{
//				RoleId: 1234,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Nested Schema for `teams`
//
// ### Read-Only
//
// - `teamId` (Number) The ID of the team.
// - `slug` (String) The Slug of the team name.
// - `name` (String) The name of the team.
// - `permission` (String) The permission that the team will have for its repositories.
func GetOrganizationRoleTeams(ctx *pulumi.Context, args *GetOrganizationRoleTeamsArgs, opts ...pulumi.InvokeOption) (*GetOrganizationRoleTeamsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrganizationRoleTeamsResult
	err := ctx.Invoke("github:index/getOrganizationRoleTeams:getOrganizationRoleTeams", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganizationRoleTeams.
type GetOrganizationRoleTeamsArgs struct {
	// The ID of the organization role.
	RoleId int `pulumi:"roleId"`
}

// A collection of values returned by getOrganizationRoleTeams.
type GetOrganizationRoleTeamsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the organization role.
	RoleId int `pulumi:"roleId"`
	// (Set of Object, see schema) Teams assigned to the organization role.
	Teams []GetOrganizationRoleTeamsTeam `pulumi:"teams"`
}

func GetOrganizationRoleTeamsOutput(ctx *pulumi.Context, args GetOrganizationRoleTeamsOutputArgs, opts ...pulumi.InvokeOption) GetOrganizationRoleTeamsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetOrganizationRoleTeamsResultOutput, error) {
			args := v.(GetOrganizationRoleTeamsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("github:index/getOrganizationRoleTeams:getOrganizationRoleTeams", args, GetOrganizationRoleTeamsResultOutput{}, options).(GetOrganizationRoleTeamsResultOutput), nil
		}).(GetOrganizationRoleTeamsResultOutput)
}

// A collection of arguments for invoking getOrganizationRoleTeams.
type GetOrganizationRoleTeamsOutputArgs struct {
	// The ID of the organization role.
	RoleId pulumi.IntInput `pulumi:"roleId"`
}

func (GetOrganizationRoleTeamsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRoleTeamsArgs)(nil)).Elem()
}

// A collection of values returned by getOrganizationRoleTeams.
type GetOrganizationRoleTeamsResultOutput struct{ *pulumi.OutputState }

func (GetOrganizationRoleTeamsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRoleTeamsResult)(nil)).Elem()
}

func (o GetOrganizationRoleTeamsResultOutput) ToGetOrganizationRoleTeamsResultOutput() GetOrganizationRoleTeamsResultOutput {
	return o
}

func (o GetOrganizationRoleTeamsResultOutput) ToGetOrganizationRoleTeamsResultOutputWithContext(ctx context.Context) GetOrganizationRoleTeamsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrganizationRoleTeamsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRoleTeamsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the organization role.
func (o GetOrganizationRoleTeamsResultOutput) RoleId() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrganizationRoleTeamsResult) int { return v.RoleId }).(pulumi.IntOutput)
}

// (Set of Object, see schema) Teams assigned to the organization role.
func (o GetOrganizationRoleTeamsResultOutput) Teams() GetOrganizationRoleTeamsTeamArrayOutput {
	return o.ApplyT(func(v GetOrganizationRoleTeamsResult) []GetOrganizationRoleTeamsTeam { return v.Teams }).(GetOrganizationRoleTeamsTeamArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrganizationRoleTeamsResultOutput{})
}
