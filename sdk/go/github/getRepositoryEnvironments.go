// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-github/sdk/v5/go/github/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about environments for a repository.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-github/sdk/v5/go/github"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := github.GetRepositoryEnvironments(ctx, &github.GetRepositoryEnvironmentsArgs{
//				Repository: "example-repository",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRepositoryEnvironments(ctx *pulumi.Context, args *GetRepositoryEnvironmentsArgs, opts ...pulumi.InvokeOption) (*GetRepositoryEnvironmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRepositoryEnvironmentsResult
	err := ctx.Invoke("github:index/getRepositoryEnvironments:getRepositoryEnvironments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryEnvironments.
type GetRepositoryEnvironmentsArgs struct {
	// Name of the repository to retrieve the environments from.
	Repository string `pulumi:"repository"`
}

// A collection of values returned by getRepositoryEnvironments.
type GetRepositoryEnvironmentsResult struct {
	// The list of this repository's environments. Each element of `environments` has the following attributes:
	Environments []GetRepositoryEnvironmentsEnvironment `pulumi:"environments"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Repository string `pulumi:"repository"`
}

func GetRepositoryEnvironmentsOutput(ctx *pulumi.Context, args GetRepositoryEnvironmentsOutputArgs, opts ...pulumi.InvokeOption) GetRepositoryEnvironmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRepositoryEnvironmentsResult, error) {
			args := v.(GetRepositoryEnvironmentsArgs)
			r, err := GetRepositoryEnvironments(ctx, &args, opts...)
			var s GetRepositoryEnvironmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRepositoryEnvironmentsResultOutput)
}

// A collection of arguments for invoking getRepositoryEnvironments.
type GetRepositoryEnvironmentsOutputArgs struct {
	// Name of the repository to retrieve the environments from.
	Repository pulumi.StringInput `pulumi:"repository"`
}

func (GetRepositoryEnvironmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryEnvironmentsArgs)(nil)).Elem()
}

// A collection of values returned by getRepositoryEnvironments.
type GetRepositoryEnvironmentsResultOutput struct{ *pulumi.OutputState }

func (GetRepositoryEnvironmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryEnvironmentsResult)(nil)).Elem()
}

func (o GetRepositoryEnvironmentsResultOutput) ToGetRepositoryEnvironmentsResultOutput() GetRepositoryEnvironmentsResultOutput {
	return o
}

func (o GetRepositoryEnvironmentsResultOutput) ToGetRepositoryEnvironmentsResultOutputWithContext(ctx context.Context) GetRepositoryEnvironmentsResultOutput {
	return o
}

// The list of this repository's environments. Each element of `environments` has the following attributes:
func (o GetRepositoryEnvironmentsResultOutput) Environments() GetRepositoryEnvironmentsEnvironmentArrayOutput {
	return o.ApplyT(func(v GetRepositoryEnvironmentsResult) []GetRepositoryEnvironmentsEnvironment { return v.Environments }).(GetRepositoryEnvironmentsEnvironmentArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRepositoryEnvironmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryEnvironmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRepositoryEnvironmentsResultOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryEnvironmentsResult) string { return v.Repository }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRepositoryEnvironmentsResultOutput{})
}
