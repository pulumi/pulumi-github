// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package repos

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > **Note:** The data source will return a maximum of `1000` repositories
// 	[as documented in official API docs](https://developer.github.com/v3/search/#about-the-search-api).
// 
// Use this data source to retrieve a list of GitHub repositories using a search query.
func LookupRepositories(ctx *pulumi.Context, args *GetRepositoriesArgs) (*GetRepositoriesResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["query"] = args.Query
	}
	outputs, err := ctx.Invoke("github:repos/getRepositories:getRepositories", inputs)
	if err != nil {
		return nil, err
	}
	return &GetRepositoriesResult{
		FullNames: outputs["fullNames"],
		Names: outputs["names"],
		Query: outputs["query"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getRepositories.
type GetRepositoriesArgs struct {
	// Search query. See [documentation for the search syntax](https://help.github.com/articles/understanding-the-search-syntax/).
	Query interface{}
}

// A collection of values returned by getRepositories.
type GetRepositoriesResult struct {
	// A list of full names of found repositories (e.g. `hashicorp/terraform`)
	FullNames interface{}
	// A list of found repository names (e.g. `terraform`)
	Names interface{}
	Query interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
