// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.github.inputs.TeamMembersMemberArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class TeamMembersArgs extends com.pulumi.resources.ResourceArgs {

    public static final TeamMembersArgs Empty = new TeamMembersArgs();

    @Import(name="members", required=true)
    private Output<List<TeamMembersMemberArgs>> members;

    public Output<List<TeamMembersMemberArgs>> members() {
        return this.members;
    }

    @Import(name="teamId", required=true)
    private Output<String> teamId;

    public Output<String> teamId() {
        return this.teamId;
    }

    private TeamMembersArgs() {}

    private TeamMembersArgs(TeamMembersArgs $) {
        this.members = $.members;
        this.teamId = $.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamMembersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamMembersArgs $;

        public Builder() {
            $ = new TeamMembersArgs();
        }

        public Builder(TeamMembersArgs defaults) {
            $ = new TeamMembersArgs(Objects.requireNonNull(defaults));
        }

        public Builder members(Output<List<TeamMembersMemberArgs>> members) {
            $.members = members;
            return this;
        }

        public Builder members(List<TeamMembersMemberArgs> members) {
            return members(Output.of(members));
        }

        public Builder members(TeamMembersMemberArgs... members) {
            return members(List.of(members));
        }

        public Builder teamId(Output<String> teamId) {
            $.teamId = teamId;
            return this;
        }

        public Builder teamId(String teamId) {
            return teamId(Output.of(teamId));
        }

        public TeamMembersArgs build() {
            $.members = Objects.requireNonNull($.members, "expected parameter 'members' to be non-null");
            $.teamId = Objects.requireNonNull($.teamId, "expected parameter 'teamId' to be non-null");
            return $;
        }
    }

}
