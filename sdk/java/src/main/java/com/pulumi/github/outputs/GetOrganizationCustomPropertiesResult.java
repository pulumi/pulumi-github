// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOrganizationCustomPropertiesResult {
    /**
     * @return List of allowed values for the custom property. Only populated when `valueType` is `singleSelect` or `multiSelect`.
     * 
     */
    private List<String> allowedValues;
    /**
     * @return The default value of the custom property.
     * 
     */
    private String defaultValue;
    /**
     * @return The description of the custom property.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the custom property.
     * 
     */
    private String propertyName;
    /**
     * @return Whether the custom property is required.
     * 
     */
    private @Nullable Boolean required;
    /**
     * @return The type of the custom property. Can be one of `string`, `singleSelect`, `multiSelect`, or `trueFalse`.
     * 
     */
    private @Nullable String valueType;

    private GetOrganizationCustomPropertiesResult() {}
    /**
     * @return List of allowed values for the custom property. Only populated when `valueType` is `singleSelect` or `multiSelect`.
     * 
     */
    public List<String> allowedValues() {
        return this.allowedValues;
    }
    /**
     * @return The default value of the custom property.
     * 
     */
    public String defaultValue() {
        return this.defaultValue;
    }
    /**
     * @return The description of the custom property.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the custom property.
     * 
     */
    public String propertyName() {
        return this.propertyName;
    }
    /**
     * @return Whether the custom property is required.
     * 
     */
    public Optional<Boolean> required() {
        return Optional.ofNullable(this.required);
    }
    /**
     * @return The type of the custom property. Can be one of `string`, `singleSelect`, `multiSelect`, or `trueFalse`.
     * 
     */
    public Optional<String> valueType() {
        return Optional.ofNullable(this.valueType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationCustomPropertiesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedValues;
        private String defaultValue;
        private String description;
        private String id;
        private String propertyName;
        private @Nullable Boolean required;
        private @Nullable String valueType;
        public Builder() {}
        public Builder(GetOrganizationCustomPropertiesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedValues = defaults.allowedValues;
    	      this.defaultValue = defaults.defaultValue;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.propertyName = defaults.propertyName;
    	      this.required = defaults.required;
    	      this.valueType = defaults.valueType;
        }

        @CustomType.Setter
        public Builder allowedValues(List<String> allowedValues) {
            if (allowedValues == null) {
              throw new MissingRequiredPropertyException("GetOrganizationCustomPropertiesResult", "allowedValues");
            }
            this.allowedValues = allowedValues;
            return this;
        }
        public Builder allowedValues(String... allowedValues) {
            return allowedValues(List.of(allowedValues));
        }
        @CustomType.Setter
        public Builder defaultValue(String defaultValue) {
            if (defaultValue == null) {
              throw new MissingRequiredPropertyException("GetOrganizationCustomPropertiesResult", "defaultValue");
            }
            this.defaultValue = defaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetOrganizationCustomPropertiesResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOrganizationCustomPropertiesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder propertyName(String propertyName) {
            if (propertyName == null) {
              throw new MissingRequiredPropertyException("GetOrganizationCustomPropertiesResult", "propertyName");
            }
            this.propertyName = propertyName;
            return this;
        }
        @CustomType.Setter
        public Builder required(@Nullable Boolean required) {

            this.required = required;
            return this;
        }
        @CustomType.Setter
        public Builder valueType(@Nullable String valueType) {

            this.valueType = valueType;
            return this;
        }
        public GetOrganizationCustomPropertiesResult build() {
            final var _resultValue = new GetOrganizationCustomPropertiesResult();
            _resultValue.allowedValues = allowedValues;
            _resultValue.defaultValue = defaultValue;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.propertyName = propertyName;
            _resultValue.required = required;
            _resultValue.valueType = valueType;
            return _resultValue;
        }
    }
}
