// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationSecurityManagerState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationSecurityManagerState Empty = new OrganizationSecurityManagerState();

    /**
     * The slug of the team to manage.
     * 
     */
    @Import(name="teamSlug")
    private @Nullable Output<String> teamSlug;

    /**
     * @return The slug of the team to manage.
     * 
     */
    public Optional<Output<String>> teamSlug() {
        return Optional.ofNullable(this.teamSlug);
    }

    private OrganizationSecurityManagerState() {}

    private OrganizationSecurityManagerState(OrganizationSecurityManagerState $) {
        this.teamSlug = $.teamSlug;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationSecurityManagerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationSecurityManagerState $;

        public Builder() {
            $ = new OrganizationSecurityManagerState();
        }

        public Builder(OrganizationSecurityManagerState defaults) {
            $ = new OrganizationSecurityManagerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param teamSlug The slug of the team to manage.
         * 
         * @return builder
         * 
         */
        public Builder teamSlug(@Nullable Output<String> teamSlug) {
            $.teamSlug = teamSlug;
            return this;
        }

        /**
         * @param teamSlug The slug of the team to manage.
         * 
         * @return builder
         * 
         */
        public Builder teamSlug(String teamSlug) {
            return teamSlug(Output.of(teamSlug));
        }

        public OrganizationSecurityManagerState build() {
            return $;
        }
    }

}
