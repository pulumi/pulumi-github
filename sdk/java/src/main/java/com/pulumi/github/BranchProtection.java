// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.github.BranchProtectionArgs;
import com.pulumi.github.Utilities;
import com.pulumi.github.inputs.BranchProtectionState;
import com.pulumi.github.outputs.BranchProtectionRequiredPullRequestReview;
import com.pulumi.github.outputs.BranchProtectionRequiredStatusCheck;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="github:index/branchProtection:BranchProtection")
public class BranchProtection extends com.pulumi.resources.CustomResource {
    @Export(name="allowsDeletions", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> allowsDeletions;

    public Output<Optional<Boolean>> allowsDeletions() {
        return Codegen.optional(this.allowsDeletions);
    }
    @Export(name="allowsForcePushes", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> allowsForcePushes;

    public Output<Optional<Boolean>> allowsForcePushes() {
        return Codegen.optional(this.allowsForcePushes);
    }
    @Export(name="blocksCreations", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> blocksCreations;

    public Output<Optional<Boolean>> blocksCreations() {
        return Codegen.optional(this.blocksCreations);
    }
    @Export(name="enforceAdmins", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enforceAdmins;

    public Output<Optional<Boolean>> enforceAdmins() {
        return Codegen.optional(this.enforceAdmins);
    }
    @Export(name="pattern", type=String.class, parameters={})
    private Output<String> pattern;

    public Output<String> pattern() {
        return this.pattern;
    }
    @Export(name="pushRestrictions", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> pushRestrictions;

    public Output<Optional<List<String>>> pushRestrictions() {
        return Codegen.optional(this.pushRestrictions);
    }
    /**
     * Node ID or name of repository
     * 
     */
    @Export(name="repositoryId", type=String.class, parameters={})
    private Output<String> repositoryId;

    /**
     * @return Node ID or name of repository
     * 
     */
    public Output<String> repositoryId() {
        return this.repositoryId;
    }
    @Export(name="requireConversationResolution", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requireConversationResolution;

    public Output<Optional<Boolean>> requireConversationResolution() {
        return Codegen.optional(this.requireConversationResolution);
    }
    @Export(name="requireSignedCommits", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requireSignedCommits;

    public Output<Optional<Boolean>> requireSignedCommits() {
        return Codegen.optional(this.requireSignedCommits);
    }
    @Export(name="requiredLinearHistory", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requiredLinearHistory;

    public Output<Optional<Boolean>> requiredLinearHistory() {
        return Codegen.optional(this.requiredLinearHistory);
    }
    @Export(name="requiredPullRequestReviews", type=List.class, parameters={BranchProtectionRequiredPullRequestReview.class})
    private Output</* @Nullable */ List<BranchProtectionRequiredPullRequestReview>> requiredPullRequestReviews;

    public Output<Optional<List<BranchProtectionRequiredPullRequestReview>>> requiredPullRequestReviews() {
        return Codegen.optional(this.requiredPullRequestReviews);
    }
    @Export(name="requiredStatusChecks", type=List.class, parameters={BranchProtectionRequiredStatusCheck.class})
    private Output</* @Nullable */ List<BranchProtectionRequiredStatusCheck>> requiredStatusChecks;

    public Output<Optional<List<BranchProtectionRequiredStatusCheck>>> requiredStatusChecks() {
        return Codegen.optional(this.requiredStatusChecks);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BranchProtection(String name) {
        this(name, BranchProtectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BranchProtection(String name, BranchProtectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BranchProtection(String name, BranchProtectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("github:index/branchProtection:BranchProtection", name, args == null ? BranchProtectionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BranchProtection(String name, Output<String> id, @Nullable BranchProtectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("github:index/branchProtection:BranchProtection", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BranchProtection get(String name, Output<String> id, @Nullable BranchProtectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BranchProtection(name, id, state, options);
    }
}
