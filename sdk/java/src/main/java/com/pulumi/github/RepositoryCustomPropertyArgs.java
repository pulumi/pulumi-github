// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RepositoryCustomPropertyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryCustomPropertyArgs Empty = new RepositoryCustomPropertyArgs();

    /**
     * Name of the custom property. Note that a pre-requisiste for this resource is that a custom property of this name has already been defined on the organization level
     * 
     */
    @Import(name="propertyName", required=true)
    private Output<String> propertyName;

    /**
     * @return Name of the custom property. Note that a pre-requisiste for this resource is that a custom property of this name has already been defined on the organization level
     * 
     */
    public Output<String> propertyName() {
        return this.propertyName;
    }

    /**
     * Type of the custom property. Can be one of `singleSelect`, `multiSelect`, `string`, or `trueFalse`
     * 
     */
    @Import(name="propertyType", required=true)
    private Output<String> propertyType;

    /**
     * @return Type of the custom property. Can be one of `singleSelect`, `multiSelect`, `string`, or `trueFalse`
     * 
     */
    public Output<String> propertyType() {
        return this.propertyType;
    }

    /**
     * Value of the custom property in the form of an array. Properties of type `singleSelect`, `string`, and `trueFalse` are represented as a string array of length 1
     * 
     */
    @Import(name="propertyValues", required=true)
    private Output<List<String>> propertyValues;

    /**
     * @return Value of the custom property in the form of an array. Properties of type `singleSelect`, `string`, and `trueFalse` are represented as a string array of length 1
     * 
     */
    public Output<List<String>> propertyValues() {
        return this.propertyValues;
    }

    /**
     * The repository of the environment.
     * 
     */
    @Import(name="repository", required=true)
    private Output<String> repository;

    /**
     * @return The repository of the environment.
     * 
     */
    public Output<String> repository() {
        return this.repository;
    }

    private RepositoryCustomPropertyArgs() {}

    private RepositoryCustomPropertyArgs(RepositoryCustomPropertyArgs $) {
        this.propertyName = $.propertyName;
        this.propertyType = $.propertyType;
        this.propertyValues = $.propertyValues;
        this.repository = $.repository;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryCustomPropertyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryCustomPropertyArgs $;

        public Builder() {
            $ = new RepositoryCustomPropertyArgs();
        }

        public Builder(RepositoryCustomPropertyArgs defaults) {
            $ = new RepositoryCustomPropertyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param propertyName Name of the custom property. Note that a pre-requisiste for this resource is that a custom property of this name has already been defined on the organization level
         * 
         * @return builder
         * 
         */
        public Builder propertyName(Output<String> propertyName) {
            $.propertyName = propertyName;
            return this;
        }

        /**
         * @param propertyName Name of the custom property. Note that a pre-requisiste for this resource is that a custom property of this name has already been defined on the organization level
         * 
         * @return builder
         * 
         */
        public Builder propertyName(String propertyName) {
            return propertyName(Output.of(propertyName));
        }

        /**
         * @param propertyType Type of the custom property. Can be one of `singleSelect`, `multiSelect`, `string`, or `trueFalse`
         * 
         * @return builder
         * 
         */
        public Builder propertyType(Output<String> propertyType) {
            $.propertyType = propertyType;
            return this;
        }

        /**
         * @param propertyType Type of the custom property. Can be one of `singleSelect`, `multiSelect`, `string`, or `trueFalse`
         * 
         * @return builder
         * 
         */
        public Builder propertyType(String propertyType) {
            return propertyType(Output.of(propertyType));
        }

        /**
         * @param propertyValues Value of the custom property in the form of an array. Properties of type `singleSelect`, `string`, and `trueFalse` are represented as a string array of length 1
         * 
         * @return builder
         * 
         */
        public Builder propertyValues(Output<List<String>> propertyValues) {
            $.propertyValues = propertyValues;
            return this;
        }

        /**
         * @param propertyValues Value of the custom property in the form of an array. Properties of type `singleSelect`, `string`, and `trueFalse` are represented as a string array of length 1
         * 
         * @return builder
         * 
         */
        public Builder propertyValues(List<String> propertyValues) {
            return propertyValues(Output.of(propertyValues));
        }

        /**
         * @param propertyValues Value of the custom property in the form of an array. Properties of type `singleSelect`, `string`, and `trueFalse` are represented as a string array of length 1
         * 
         * @return builder
         * 
         */
        public Builder propertyValues(String... propertyValues) {
            return propertyValues(List.of(propertyValues));
        }

        /**
         * @param repository The repository of the environment.
         * 
         * @return builder
         * 
         */
        public Builder repository(Output<String> repository) {
            $.repository = repository;
            return this;
        }

        /**
         * @param repository The repository of the environment.
         * 
         * @return builder
         * 
         */
        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        public RepositoryCustomPropertyArgs build() {
            if ($.propertyName == null) {
                throw new MissingRequiredPropertyException("RepositoryCustomPropertyArgs", "propertyName");
            }
            if ($.propertyType == null) {
                throw new MissingRequiredPropertyException("RepositoryCustomPropertyArgs", "propertyType");
            }
            if ($.propertyValues == null) {
                throw new MissingRequiredPropertyException("RepositoryCustomPropertyArgs", "propertyValues");
            }
            if ($.repository == null) {
                throw new MissingRequiredPropertyException("RepositoryCustomPropertyArgs", "repository");
            }
            return $;
        }
    }

}
