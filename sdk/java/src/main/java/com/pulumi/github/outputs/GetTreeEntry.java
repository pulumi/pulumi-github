// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTreeEntry {
    private String mode;
    private String path;
    private String sha;
    private Integer size;
    private String type;

    private GetTreeEntry() {}
    public String mode() {
        return this.mode;
    }
    public String path() {
        return this.path;
    }
    public String sha() {
        return this.sha;
    }
    public Integer size() {
        return this.size;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTreeEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String mode;
        private String path;
        private String sha;
        private Integer size;
        private String type;
        public Builder() {}
        public Builder(GetTreeEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mode = defaults.mode;
    	      this.path = defaults.path;
    	      this.sha = defaults.sha;
    	      this.size = defaults.size;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetTreeEntry", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetTreeEntry", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder sha(String sha) {
            if (sha == null) {
              throw new MissingRequiredPropertyException("GetTreeEntry", "sha");
            }
            this.sha = sha;
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetTreeEntry", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetTreeEntry", "type");
            }
            this.type = type;
            return this;
        }
        public GetTreeEntry build() {
            final var _resultValue = new GetTreeEntry();
            _resultValue.mode = mode;
            _resultValue.path = path;
            _resultValue.sha = sha;
            _resultValue.size = size;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
