// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryDeploymentBranchPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryDeploymentBranchPolicyState Empty = new RepositoryDeploymentBranchPolicyState();

    /**
     * The name of the environment. This environment must have `deployment_branch_policy.custom_branch_policies` set to true or a 404 error will be thrown.
     * 
     */
    @Import(name="environmentName")
    private @Nullable Output<String> environmentName;

    /**
     * @return The name of the environment. This environment must have `deployment_branch_policy.custom_branch_policies` set to true or a 404 error will be thrown.
     * 
     */
    public Optional<Output<String>> environmentName() {
        return Optional.ofNullable(this.environmentName);
    }

    /**
     * An etag representing the Branch object.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return An etag representing the Branch object.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The name pattern that branches must match in order to deploy to the environment.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name pattern that branches must match in order to deploy to the environment.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The repository to create the policy in.
     * 
     */
    @Import(name="repository")
    private @Nullable Output<String> repository;

    /**
     * @return The repository to create the policy in.
     * 
     */
    public Optional<Output<String>> repository() {
        return Optional.ofNullable(this.repository);
    }

    private RepositoryDeploymentBranchPolicyState() {}

    private RepositoryDeploymentBranchPolicyState(RepositoryDeploymentBranchPolicyState $) {
        this.environmentName = $.environmentName;
        this.etag = $.etag;
        this.name = $.name;
        this.repository = $.repository;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryDeploymentBranchPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryDeploymentBranchPolicyState $;

        public Builder() {
            $ = new RepositoryDeploymentBranchPolicyState();
        }

        public Builder(RepositoryDeploymentBranchPolicyState defaults) {
            $ = new RepositoryDeploymentBranchPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param environmentName The name of the environment. This environment must have `deployment_branch_policy.custom_branch_policies` set to true or a 404 error will be thrown.
         * 
         * @return builder
         * 
         */
        public Builder environmentName(@Nullable Output<String> environmentName) {
            $.environmentName = environmentName;
            return this;
        }

        /**
         * @param environmentName The name of the environment. This environment must have `deployment_branch_policy.custom_branch_policies` set to true or a 404 error will be thrown.
         * 
         * @return builder
         * 
         */
        public Builder environmentName(String environmentName) {
            return environmentName(Output.of(environmentName));
        }

        /**
         * @param etag An etag representing the Branch object.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag An etag representing the Branch object.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param name The name pattern that branches must match in order to deploy to the environment.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name pattern that branches must match in order to deploy to the environment.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param repository The repository to create the policy in.
         * 
         * @return builder
         * 
         */
        public Builder repository(@Nullable Output<String> repository) {
            $.repository = repository;
            return this;
        }

        /**
         * @param repository The repository to create the policy in.
         * 
         * @return builder
         * 
         */
        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        public RepositoryDeploymentBranchPolicyState build() {
            return $;
        }
    }

}
