// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRepositoryCustomPropertiesProperty {
    /**
     * @return Name of the property
     * 
     */
    private String propertyName;
    /**
     * @return Value of the property
     * 
     */
    private List<String> propertyValues;

    private GetRepositoryCustomPropertiesProperty() {}
    /**
     * @return Name of the property
     * 
     */
    public String propertyName() {
        return this.propertyName;
    }
    /**
     * @return Value of the property
     * 
     */
    public List<String> propertyValues() {
        return this.propertyValues;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryCustomPropertiesProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String propertyName;
        private List<String> propertyValues;
        public Builder() {}
        public Builder(GetRepositoryCustomPropertiesProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.propertyName = defaults.propertyName;
    	      this.propertyValues = defaults.propertyValues;
        }

        @CustomType.Setter
        public Builder propertyName(String propertyName) {
            if (propertyName == null) {
              throw new MissingRequiredPropertyException("GetRepositoryCustomPropertiesProperty", "propertyName");
            }
            this.propertyName = propertyName;
            return this;
        }
        @CustomType.Setter
        public Builder propertyValues(List<String> propertyValues) {
            if (propertyValues == null) {
              throw new MissingRequiredPropertyException("GetRepositoryCustomPropertiesProperty", "propertyValues");
            }
            this.propertyValues = propertyValues;
            return this;
        }
        public Builder propertyValues(String... propertyValues) {
            return propertyValues(List.of(propertyValues));
        }
        public GetRepositoryCustomPropertiesProperty build() {
            final var _resultValue = new GetRepositoryCustomPropertiesProperty();
            _resultValue.propertyName = propertyName;
            _resultValue.propertyValues = propertyValues;
            return _resultValue;
        }
    }
}
