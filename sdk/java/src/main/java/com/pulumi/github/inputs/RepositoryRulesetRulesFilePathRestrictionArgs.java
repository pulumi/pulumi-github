// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RepositoryRulesetRulesFilePathRestrictionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryRulesetRulesFilePathRestrictionArgs Empty = new RepositoryRulesetRulesFilePathRestrictionArgs();

    /**
     * The file paths that are restricted from being pushed to the commit graph.
     * 
     */
    @Import(name="restrictedFilePaths", required=true)
    private Output<List<String>> restrictedFilePaths;

    /**
     * @return The file paths that are restricted from being pushed to the commit graph.
     * 
     */
    public Output<List<String>> restrictedFilePaths() {
        return this.restrictedFilePaths;
    }

    private RepositoryRulesetRulesFilePathRestrictionArgs() {}

    private RepositoryRulesetRulesFilePathRestrictionArgs(RepositoryRulesetRulesFilePathRestrictionArgs $) {
        this.restrictedFilePaths = $.restrictedFilePaths;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryRulesetRulesFilePathRestrictionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryRulesetRulesFilePathRestrictionArgs $;

        public Builder() {
            $ = new RepositoryRulesetRulesFilePathRestrictionArgs();
        }

        public Builder(RepositoryRulesetRulesFilePathRestrictionArgs defaults) {
            $ = new RepositoryRulesetRulesFilePathRestrictionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param restrictedFilePaths The file paths that are restricted from being pushed to the commit graph.
         * 
         * @return builder
         * 
         */
        public Builder restrictedFilePaths(Output<List<String>> restrictedFilePaths) {
            $.restrictedFilePaths = restrictedFilePaths;
            return this;
        }

        /**
         * @param restrictedFilePaths The file paths that are restricted from being pushed to the commit graph.
         * 
         * @return builder
         * 
         */
        public Builder restrictedFilePaths(List<String> restrictedFilePaths) {
            return restrictedFilePaths(Output.of(restrictedFilePaths));
        }

        /**
         * @param restrictedFilePaths The file paths that are restricted from being pushed to the commit graph.
         * 
         * @return builder
         * 
         */
        public Builder restrictedFilePaths(String... restrictedFilePaths) {
            return restrictedFilePaths(List.of(restrictedFilePaths));
        }

        public RepositoryRulesetRulesFilePathRestrictionArgs build() {
            if ($.restrictedFilePaths == null) {
                throw new MissingRequiredPropertyException("RepositoryRulesetRulesFilePathRestrictionArgs", "restrictedFilePaths");
            }
            return $;
        }
    }

}
