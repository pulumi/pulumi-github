// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.github.outputs.OrganizationRulesetRulesRequiredStatusChecksRequiredCheck;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OrganizationRulesetRulesRequiredStatusChecks {
    /**
     * @return (Block Set, Min: 1) Status checks that are required. Several can be defined. (see below for nested schema)
     * 
     */
    private List<OrganizationRulesetRulesRequiredStatusChecksRequiredCheck> requiredChecks;
    /**
     * @return (Boolean) Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to `false`.
     * 
     */
    private @Nullable Boolean strictRequiredStatusChecksPolicy;

    private OrganizationRulesetRulesRequiredStatusChecks() {}
    /**
     * @return (Block Set, Min: 1) Status checks that are required. Several can be defined. (see below for nested schema)
     * 
     */
    public List<OrganizationRulesetRulesRequiredStatusChecksRequiredCheck> requiredChecks() {
        return this.requiredChecks;
    }
    /**
     * @return (Boolean) Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to `false`.
     * 
     */
    public Optional<Boolean> strictRequiredStatusChecksPolicy() {
        return Optional.ofNullable(this.strictRequiredStatusChecksPolicy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationRulesetRulesRequiredStatusChecks defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<OrganizationRulesetRulesRequiredStatusChecksRequiredCheck> requiredChecks;
        private @Nullable Boolean strictRequiredStatusChecksPolicy;
        public Builder() {}
        public Builder(OrganizationRulesetRulesRequiredStatusChecks defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.requiredChecks = defaults.requiredChecks;
    	      this.strictRequiredStatusChecksPolicy = defaults.strictRequiredStatusChecksPolicy;
        }

        @CustomType.Setter
        public Builder requiredChecks(List<OrganizationRulesetRulesRequiredStatusChecksRequiredCheck> requiredChecks) {
            this.requiredChecks = Objects.requireNonNull(requiredChecks);
            return this;
        }
        public Builder requiredChecks(OrganizationRulesetRulesRequiredStatusChecksRequiredCheck... requiredChecks) {
            return requiredChecks(List.of(requiredChecks));
        }
        @CustomType.Setter
        public Builder strictRequiredStatusChecksPolicy(@Nullable Boolean strictRequiredStatusChecksPolicy) {
            this.strictRequiredStatusChecksPolicy = strictRequiredStatusChecksPolicy;
            return this;
        }
        public OrganizationRulesetRulesRequiredStatusChecks build() {
            final var o = new OrganizationRulesetRulesRequiredStatusChecks();
            o.requiredChecks = requiredChecks;
            o.strictRequiredStatusChecksPolicy = strictRequiredStatusChecksPolicy;
            return o;
        }
    }
}
