// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ActionsOrganizationSecretRepositoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionsOrganizationSecretRepositoryArgs Empty = new ActionsOrganizationSecretRepositoryArgs();

    /**
     * Repository id that can access the organization secret.
     * 
     */
    @Import(name="repositoryId", required=true)
    private Output<Integer> repositoryId;

    /**
     * @return Repository id that can access the organization secret.
     * 
     */
    public Output<Integer> repositoryId() {
        return this.repositoryId;
    }

    /**
     * Name of the existing secret
     * 
     */
    @Import(name="secretName", required=true)
    private Output<String> secretName;

    /**
     * @return Name of the existing secret
     * 
     */
    public Output<String> secretName() {
        return this.secretName;
    }

    private ActionsOrganizationSecretRepositoryArgs() {}

    private ActionsOrganizationSecretRepositoryArgs(ActionsOrganizationSecretRepositoryArgs $) {
        this.repositoryId = $.repositoryId;
        this.secretName = $.secretName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionsOrganizationSecretRepositoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionsOrganizationSecretRepositoryArgs $;

        public Builder() {
            $ = new ActionsOrganizationSecretRepositoryArgs();
        }

        public Builder(ActionsOrganizationSecretRepositoryArgs defaults) {
            $ = new ActionsOrganizationSecretRepositoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param repositoryId Repository id that can access the organization secret.
         * 
         * @return builder
         * 
         */
        public Builder repositoryId(Output<Integer> repositoryId) {
            $.repositoryId = repositoryId;
            return this;
        }

        /**
         * @param repositoryId Repository id that can access the organization secret.
         * 
         * @return builder
         * 
         */
        public Builder repositoryId(Integer repositoryId) {
            return repositoryId(Output.of(repositoryId));
        }

        /**
         * @param secretName Name of the existing secret
         * 
         * @return builder
         * 
         */
        public Builder secretName(Output<String> secretName) {
            $.secretName = secretName;
            return this;
        }

        /**
         * @param secretName Name of the existing secret
         * 
         * @return builder
         * 
         */
        public Builder secretName(String secretName) {
            return secretName(Output.of(secretName));
        }

        public ActionsOrganizationSecretRepositoryArgs build() {
            if ($.repositoryId == null) {
                throw new MissingRequiredPropertyException("ActionsOrganizationSecretRepositoryArgs", "repositoryId");
            }
            if ($.secretName == null) {
                throw new MissingRequiredPropertyException("ActionsOrganizationSecretRepositoryArgs", "secretName");
            }
            return $;
        }
    }

}
