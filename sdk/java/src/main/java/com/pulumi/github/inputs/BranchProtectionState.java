// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.github.inputs.BranchProtectionRequiredPullRequestReviewArgs;
import com.pulumi.github.inputs.BranchProtectionRequiredStatusCheckArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BranchProtectionState extends com.pulumi.resources.ResourceArgs {

    public static final BranchProtectionState Empty = new BranchProtectionState();

    @Import(name="allowsDeletions")
    private @Nullable Output<Boolean> allowsDeletions;

    public Optional<Output<Boolean>> allowsDeletions() {
        return Optional.ofNullable(this.allowsDeletions);
    }

    @Import(name="allowsForcePushes")
    private @Nullable Output<Boolean> allowsForcePushes;

    public Optional<Output<Boolean>> allowsForcePushes() {
        return Optional.ofNullable(this.allowsForcePushes);
    }

    @Import(name="blocksCreations")
    private @Nullable Output<Boolean> blocksCreations;

    public Optional<Output<Boolean>> blocksCreations() {
        return Optional.ofNullable(this.blocksCreations);
    }

    @Import(name="enforceAdmins")
    private @Nullable Output<Boolean> enforceAdmins;

    public Optional<Output<Boolean>> enforceAdmins() {
        return Optional.ofNullable(this.enforceAdmins);
    }

    @Import(name="pattern")
    private @Nullable Output<String> pattern;

    public Optional<Output<String>> pattern() {
        return Optional.ofNullable(this.pattern);
    }

    @Import(name="pushRestrictions")
    private @Nullable Output<List<String>> pushRestrictions;

    public Optional<Output<List<String>>> pushRestrictions() {
        return Optional.ofNullable(this.pushRestrictions);
    }

    /**
     * Node ID or name of repository
     * 
     */
    @Import(name="repositoryId")
    private @Nullable Output<String> repositoryId;

    /**
     * @return Node ID or name of repository
     * 
     */
    public Optional<Output<String>> repositoryId() {
        return Optional.ofNullable(this.repositoryId);
    }

    @Import(name="requireConversationResolution")
    private @Nullable Output<Boolean> requireConversationResolution;

    public Optional<Output<Boolean>> requireConversationResolution() {
        return Optional.ofNullable(this.requireConversationResolution);
    }

    @Import(name="requireSignedCommits")
    private @Nullable Output<Boolean> requireSignedCommits;

    public Optional<Output<Boolean>> requireSignedCommits() {
        return Optional.ofNullable(this.requireSignedCommits);
    }

    @Import(name="requiredLinearHistory")
    private @Nullable Output<Boolean> requiredLinearHistory;

    public Optional<Output<Boolean>> requiredLinearHistory() {
        return Optional.ofNullable(this.requiredLinearHistory);
    }

    @Import(name="requiredPullRequestReviews")
    private @Nullable Output<List<BranchProtectionRequiredPullRequestReviewArgs>> requiredPullRequestReviews;

    public Optional<Output<List<BranchProtectionRequiredPullRequestReviewArgs>>> requiredPullRequestReviews() {
        return Optional.ofNullable(this.requiredPullRequestReviews);
    }

    @Import(name="requiredStatusChecks")
    private @Nullable Output<List<BranchProtectionRequiredStatusCheckArgs>> requiredStatusChecks;

    public Optional<Output<List<BranchProtectionRequiredStatusCheckArgs>>> requiredStatusChecks() {
        return Optional.ofNullable(this.requiredStatusChecks);
    }

    private BranchProtectionState() {}

    private BranchProtectionState(BranchProtectionState $) {
        this.allowsDeletions = $.allowsDeletions;
        this.allowsForcePushes = $.allowsForcePushes;
        this.blocksCreations = $.blocksCreations;
        this.enforceAdmins = $.enforceAdmins;
        this.pattern = $.pattern;
        this.pushRestrictions = $.pushRestrictions;
        this.repositoryId = $.repositoryId;
        this.requireConversationResolution = $.requireConversationResolution;
        this.requireSignedCommits = $.requireSignedCommits;
        this.requiredLinearHistory = $.requiredLinearHistory;
        this.requiredPullRequestReviews = $.requiredPullRequestReviews;
        this.requiredStatusChecks = $.requiredStatusChecks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BranchProtectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BranchProtectionState $;

        public Builder() {
            $ = new BranchProtectionState();
        }

        public Builder(BranchProtectionState defaults) {
            $ = new BranchProtectionState(Objects.requireNonNull(defaults));
        }

        public Builder allowsDeletions(@Nullable Output<Boolean> allowsDeletions) {
            $.allowsDeletions = allowsDeletions;
            return this;
        }

        public Builder allowsDeletions(Boolean allowsDeletions) {
            return allowsDeletions(Output.of(allowsDeletions));
        }

        public Builder allowsForcePushes(@Nullable Output<Boolean> allowsForcePushes) {
            $.allowsForcePushes = allowsForcePushes;
            return this;
        }

        public Builder allowsForcePushes(Boolean allowsForcePushes) {
            return allowsForcePushes(Output.of(allowsForcePushes));
        }

        public Builder blocksCreations(@Nullable Output<Boolean> blocksCreations) {
            $.blocksCreations = blocksCreations;
            return this;
        }

        public Builder blocksCreations(Boolean blocksCreations) {
            return blocksCreations(Output.of(blocksCreations));
        }

        public Builder enforceAdmins(@Nullable Output<Boolean> enforceAdmins) {
            $.enforceAdmins = enforceAdmins;
            return this;
        }

        public Builder enforceAdmins(Boolean enforceAdmins) {
            return enforceAdmins(Output.of(enforceAdmins));
        }

        public Builder pattern(@Nullable Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        public Builder pushRestrictions(@Nullable Output<List<String>> pushRestrictions) {
            $.pushRestrictions = pushRestrictions;
            return this;
        }

        public Builder pushRestrictions(List<String> pushRestrictions) {
            return pushRestrictions(Output.of(pushRestrictions));
        }

        public Builder pushRestrictions(String... pushRestrictions) {
            return pushRestrictions(List.of(pushRestrictions));
        }

        /**
         * @param repositoryId Node ID or name of repository
         * 
         * @return builder
         * 
         */
        public Builder repositoryId(@Nullable Output<String> repositoryId) {
            $.repositoryId = repositoryId;
            return this;
        }

        /**
         * @param repositoryId Node ID or name of repository
         * 
         * @return builder
         * 
         */
        public Builder repositoryId(String repositoryId) {
            return repositoryId(Output.of(repositoryId));
        }

        public Builder requireConversationResolution(@Nullable Output<Boolean> requireConversationResolution) {
            $.requireConversationResolution = requireConversationResolution;
            return this;
        }

        public Builder requireConversationResolution(Boolean requireConversationResolution) {
            return requireConversationResolution(Output.of(requireConversationResolution));
        }

        public Builder requireSignedCommits(@Nullable Output<Boolean> requireSignedCommits) {
            $.requireSignedCommits = requireSignedCommits;
            return this;
        }

        public Builder requireSignedCommits(Boolean requireSignedCommits) {
            return requireSignedCommits(Output.of(requireSignedCommits));
        }

        public Builder requiredLinearHistory(@Nullable Output<Boolean> requiredLinearHistory) {
            $.requiredLinearHistory = requiredLinearHistory;
            return this;
        }

        public Builder requiredLinearHistory(Boolean requiredLinearHistory) {
            return requiredLinearHistory(Output.of(requiredLinearHistory));
        }

        public Builder requiredPullRequestReviews(@Nullable Output<List<BranchProtectionRequiredPullRequestReviewArgs>> requiredPullRequestReviews) {
            $.requiredPullRequestReviews = requiredPullRequestReviews;
            return this;
        }

        public Builder requiredPullRequestReviews(List<BranchProtectionRequiredPullRequestReviewArgs> requiredPullRequestReviews) {
            return requiredPullRequestReviews(Output.of(requiredPullRequestReviews));
        }

        public Builder requiredPullRequestReviews(BranchProtectionRequiredPullRequestReviewArgs... requiredPullRequestReviews) {
            return requiredPullRequestReviews(List.of(requiredPullRequestReviews));
        }

        public Builder requiredStatusChecks(@Nullable Output<List<BranchProtectionRequiredStatusCheckArgs>> requiredStatusChecks) {
            $.requiredStatusChecks = requiredStatusChecks;
            return this;
        }

        public Builder requiredStatusChecks(List<BranchProtectionRequiredStatusCheckArgs> requiredStatusChecks) {
            return requiredStatusChecks(Output.of(requiredStatusChecks));
        }

        public Builder requiredStatusChecks(BranchProtectionRequiredStatusCheckArgs... requiredStatusChecks) {
            return requiredStatusChecks(List.of(requiredStatusChecks));
        }

        public BranchProtectionState build() {
            return $;
        }
    }

}
