// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.github.BranchProtectionV3Args;
import com.pulumi.github.Utilities;
import com.pulumi.github.inputs.BranchProtectionV3State;
import com.pulumi.github.outputs.BranchProtectionV3RequiredPullRequestReviews;
import com.pulumi.github.outputs.BranchProtectionV3RequiredStatusChecks;
import com.pulumi.github.outputs.BranchProtectionV3Restrictions;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="github:index/branchProtectionV3:BranchProtectionV3")
public class BranchProtectionV3 extends com.pulumi.resources.CustomResource {
    @Export(name="branch", type=String.class, parameters={})
    private Output<String> branch;

    public Output<String> branch() {
        return this.branch;
    }
    @Export(name="enforceAdmins", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enforceAdmins;

    public Output<Optional<Boolean>> enforceAdmins() {
        return Codegen.optional(this.enforceAdmins);
    }
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    public Output<String> etag() {
        return this.etag;
    }
    @Export(name="repository", type=String.class, parameters={})
    private Output<String> repository;

    public Output<String> repository() {
        return this.repository;
    }
    @Export(name="requireConversationResolution", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requireConversationResolution;

    public Output<Optional<Boolean>> requireConversationResolution() {
        return Codegen.optional(this.requireConversationResolution);
    }
    @Export(name="requireSignedCommits", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requireSignedCommits;

    public Output<Optional<Boolean>> requireSignedCommits() {
        return Codegen.optional(this.requireSignedCommits);
    }
    @Export(name="requiredPullRequestReviews", type=BranchProtectionV3RequiredPullRequestReviews.class, parameters={})
    private Output</* @Nullable */ BranchProtectionV3RequiredPullRequestReviews> requiredPullRequestReviews;

    public Output<Optional<BranchProtectionV3RequiredPullRequestReviews>> requiredPullRequestReviews() {
        return Codegen.optional(this.requiredPullRequestReviews);
    }
    @Export(name="requiredStatusChecks", type=BranchProtectionV3RequiredStatusChecks.class, parameters={})
    private Output</* @Nullable */ BranchProtectionV3RequiredStatusChecks> requiredStatusChecks;

    public Output<Optional<BranchProtectionV3RequiredStatusChecks>> requiredStatusChecks() {
        return Codegen.optional(this.requiredStatusChecks);
    }
    @Export(name="restrictions", type=BranchProtectionV3Restrictions.class, parameters={})
    private Output</* @Nullable */ BranchProtectionV3Restrictions> restrictions;

    public Output<Optional<BranchProtectionV3Restrictions>> restrictions() {
        return Codegen.optional(this.restrictions);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BranchProtectionV3(String name) {
        this(name, BranchProtectionV3Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BranchProtectionV3(String name, BranchProtectionV3Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BranchProtectionV3(String name, BranchProtectionV3Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("github:index/branchProtectionV3:BranchProtectionV3", name, args == null ? BranchProtectionV3Args.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BranchProtectionV3(String name, Output<String> id, @Nullable BranchProtectionV3State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("github:index/branchProtectionV3:BranchProtectionV3", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BranchProtectionV3 get(String name, Output<String> id, @Nullable BranchProtectionV3State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BranchProtectionV3(name, id, state, options);
    }
}
