// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRepositoryFileResult {
    private @Nullable String branch;
    /**
     * @return Committer author name.
     * 
     */
    private String commitAuthor;
    /**
     * @return Committer email address.
     * 
     */
    private String commitEmail;
    /**
     * @return Commit message when file was last updated.
     * 
     */
    private String commitMessage;
    /**
     * @return The SHA of the commit that modified the file.
     * 
     */
    private String commitSha;
    /**
     * @return The file content.
     * 
     */
    private String content;
    private String file;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the commit/branch/tag.
     * 
     */
    private String ref;
    private String repository;
    /**
     * @return The SHA blob of the file.
     * 
     */
    private String sha;

    private GetRepositoryFileResult() {}
    public Optional<String> branch() {
        return Optional.ofNullable(this.branch);
    }
    /**
     * @return Committer author name.
     * 
     */
    public String commitAuthor() {
        return this.commitAuthor;
    }
    /**
     * @return Committer email address.
     * 
     */
    public String commitEmail() {
        return this.commitEmail;
    }
    /**
     * @return Commit message when file was last updated.
     * 
     */
    public String commitMessage() {
        return this.commitMessage;
    }
    /**
     * @return The SHA of the commit that modified the file.
     * 
     */
    public String commitSha() {
        return this.commitSha;
    }
    /**
     * @return The file content.
     * 
     */
    public String content() {
        return this.content;
    }
    public String file() {
        return this.file;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the commit/branch/tag.
     * 
     */
    public String ref() {
        return this.ref;
    }
    public String repository() {
        return this.repository;
    }
    /**
     * @return The SHA blob of the file.
     * 
     */
    public String sha() {
        return this.sha;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryFileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String branch;
        private String commitAuthor;
        private String commitEmail;
        private String commitMessage;
        private String commitSha;
        private String content;
        private String file;
        private String id;
        private String ref;
        private String repository;
        private String sha;
        public Builder() {}
        public Builder(GetRepositoryFileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.commitAuthor = defaults.commitAuthor;
    	      this.commitEmail = defaults.commitEmail;
    	      this.commitMessage = defaults.commitMessage;
    	      this.commitSha = defaults.commitSha;
    	      this.content = defaults.content;
    	      this.file = defaults.file;
    	      this.id = defaults.id;
    	      this.ref = defaults.ref;
    	      this.repository = defaults.repository;
    	      this.sha = defaults.sha;
        }

        @CustomType.Setter
        public Builder branch(@Nullable String branch) {
            this.branch = branch;
            return this;
        }
        @CustomType.Setter
        public Builder commitAuthor(String commitAuthor) {
            this.commitAuthor = Objects.requireNonNull(commitAuthor);
            return this;
        }
        @CustomType.Setter
        public Builder commitEmail(String commitEmail) {
            this.commitEmail = Objects.requireNonNull(commitEmail);
            return this;
        }
        @CustomType.Setter
        public Builder commitMessage(String commitMessage) {
            this.commitMessage = Objects.requireNonNull(commitMessage);
            return this;
        }
        @CustomType.Setter
        public Builder commitSha(String commitSha) {
            this.commitSha = Objects.requireNonNull(commitSha);
            return this;
        }
        @CustomType.Setter
        public Builder content(String content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }
        @CustomType.Setter
        public Builder file(String file) {
            this.file = Objects.requireNonNull(file);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ref(String ref) {
            this.ref = Objects.requireNonNull(ref);
            return this;
        }
        @CustomType.Setter
        public Builder repository(String repository) {
            this.repository = Objects.requireNonNull(repository);
            return this;
        }
        @CustomType.Setter
        public Builder sha(String sha) {
            this.sha = Objects.requireNonNull(sha);
            return this;
        }
        public GetRepositoryFileResult build() {
            final var _resultValue = new GetRepositoryFileResult();
            _resultValue.branch = branch;
            _resultValue.commitAuthor = commitAuthor;
            _resultValue.commitEmail = commitEmail;
            _resultValue.commitMessage = commitMessage;
            _resultValue.commitSha = commitSha;
            _resultValue.content = content;
            _resultValue.file = file;
            _resultValue.id = id;
            _resultValue.ref = ref;
            _resultValue.repository = repository;
            _resultValue.sha = sha;
            return _resultValue;
        }
    }
}
