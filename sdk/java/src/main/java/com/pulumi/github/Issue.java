// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.github.IssueArgs;
import com.pulumi.github.Utilities;
import com.pulumi.github.inputs.IssueState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="github:index/issue:Issue")
public class Issue extends com.pulumi.resources.CustomResource {
    /**
     * List of Logins for Users to assign to this issue
     * 
     */
    @Export(name="assignees", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> assignees;

    /**
     * @return List of Logins for Users to assign to this issue
     * 
     */
    public Output<Optional<List<String>>> assignees() {
        return Codegen.optional(this.assignees);
    }
    @Export(name="body", type=String.class, parameters={})
    private Output</* @Nullable */ String> body;

    public Output<Optional<String>> body() {
        return Codegen.optional(this.body);
    }
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    public Output<String> etag() {
        return this.etag;
    }
    @Export(name="issueId", type=Integer.class, parameters={})
    private Output<Integer> issueId;

    public Output<Integer> issueId() {
        return this.issueId;
    }
    /**
     * List of names of labels on the issue
     * 
     */
    @Export(name="labels", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> labels;

    /**
     * @return List of names of labels on the issue
     * 
     */
    public Output<Optional<List<String>>> labels() {
        return Codegen.optional(this.labels);
    }
    @Export(name="milestoneNumber", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> milestoneNumber;

    public Output<Optional<Integer>> milestoneNumber() {
        return Codegen.optional(this.milestoneNumber);
    }
    @Export(name="number", type=Integer.class, parameters={})
    private Output<Integer> number;

    public Output<Integer> number() {
        return this.number;
    }
    @Export(name="repository", type=String.class, parameters={})
    private Output<String> repository;

    public Output<String> repository() {
        return this.repository;
    }
    @Export(name="title", type=String.class, parameters={})
    private Output<String> title;

    public Output<String> title() {
        return this.title;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Issue(String name) {
        this(name, IssueArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Issue(String name, IssueArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Issue(String name, IssueArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("github:index/issue:Issue", name, args == null ? IssueArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Issue(String name, Output<String> id, @Nullable IssueState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("github:index/issue:Issue", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Issue get(String name, Output<String> id, @Nullable IssueState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Issue(name, id, state, options);
    }
}
