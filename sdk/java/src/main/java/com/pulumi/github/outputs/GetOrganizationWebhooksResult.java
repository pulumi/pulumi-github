// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.github.outputs.GetOrganizationWebhooksWebhook;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOrganizationWebhooksResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return An Array of GitHub Webhooks.  Each `webhook` block consists of the fields documented below.
     * ***
     * 
     */
    private List<GetOrganizationWebhooksWebhook> webhooks;

    private GetOrganizationWebhooksResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An Array of GitHub Webhooks.  Each `webhook` block consists of the fields documented below.
     * ***
     * 
     */
    public List<GetOrganizationWebhooksWebhook> webhooks() {
        return this.webhooks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationWebhooksResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetOrganizationWebhooksWebhook> webhooks;
        public Builder() {}
        public Builder(GetOrganizationWebhooksResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.webhooks = defaults.webhooks;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder webhooks(List<GetOrganizationWebhooksWebhook> webhooks) {
            this.webhooks = Objects.requireNonNull(webhooks);
            return this;
        }
        public Builder webhooks(GetOrganizationWebhooksWebhook... webhooks) {
            return webhooks(List.of(webhooks));
        }
        public GetOrganizationWebhooksResult build() {
            final var _resultValue = new GetOrganizationWebhooksResult();
            _resultValue.id = id;
            _resultValue.webhooks = webhooks;
            return _resultValue;
        }
    }
}
