// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.github.inputs.RepositoryPagesSourceArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryPagesArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryPagesArgs Empty = new RepositoryPagesArgs();

    @Import(name="cname")
    private @Nullable Output<String> cname;

    public Optional<Output<String>> cname() {
        return Optional.ofNullable(this.cname);
    }

    @Import(name="custom404")
    private @Nullable Output<Boolean> custom404;

    public Optional<Output<Boolean>> custom404() {
        return Optional.ofNullable(this.custom404);
    }

    @Import(name="htmlUrl")
    private @Nullable Output<String> htmlUrl;

    public Optional<Output<String>> htmlUrl() {
        return Optional.ofNullable(this.htmlUrl);
    }

    @Import(name="source", required=true)
    private Output<RepositoryPagesSourceArgs> source;

    public Output<RepositoryPagesSourceArgs> source() {
        return this.source;
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private RepositoryPagesArgs() {}

    private RepositoryPagesArgs(RepositoryPagesArgs $) {
        this.cname = $.cname;
        this.custom404 = $.custom404;
        this.htmlUrl = $.htmlUrl;
        this.source = $.source;
        this.status = $.status;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryPagesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryPagesArgs $;

        public Builder() {
            $ = new RepositoryPagesArgs();
        }

        public Builder(RepositoryPagesArgs defaults) {
            $ = new RepositoryPagesArgs(Objects.requireNonNull(defaults));
        }

        public Builder cname(@Nullable Output<String> cname) {
            $.cname = cname;
            return this;
        }

        public Builder cname(String cname) {
            return cname(Output.of(cname));
        }

        public Builder custom404(@Nullable Output<Boolean> custom404) {
            $.custom404 = custom404;
            return this;
        }

        public Builder custom404(Boolean custom404) {
            return custom404(Output.of(custom404));
        }

        public Builder htmlUrl(@Nullable Output<String> htmlUrl) {
            $.htmlUrl = htmlUrl;
            return this;
        }

        public Builder htmlUrl(String htmlUrl) {
            return htmlUrl(Output.of(htmlUrl));
        }

        public Builder source(Output<RepositoryPagesSourceArgs> source) {
            $.source = source;
            return this;
        }

        public Builder source(RepositoryPagesSourceArgs source) {
            return source(Output.of(source));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public RepositoryPagesArgs build() {
            $.source = Objects.requireNonNull($.source, "expected parameter 'source' to be non-null");
            return $;
        }
    }

}
