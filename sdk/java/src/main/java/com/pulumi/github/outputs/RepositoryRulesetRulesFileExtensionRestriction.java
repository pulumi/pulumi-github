// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RepositoryRulesetRulesFileExtensionRestriction {
    /**
     * @return A list of file extensions.
     * 
     */
    private List<String> restrictedFileExtensions;

    private RepositoryRulesetRulesFileExtensionRestriction() {}
    /**
     * @return A list of file extensions.
     * 
     */
    public List<String> restrictedFileExtensions() {
        return this.restrictedFileExtensions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryRulesetRulesFileExtensionRestriction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> restrictedFileExtensions;
        public Builder() {}
        public Builder(RepositoryRulesetRulesFileExtensionRestriction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.restrictedFileExtensions = defaults.restrictedFileExtensions;
        }

        @CustomType.Setter
        public Builder restrictedFileExtensions(List<String> restrictedFileExtensions) {
            if (restrictedFileExtensions == null) {
              throw new MissingRequiredPropertyException("RepositoryRulesetRulesFileExtensionRestriction", "restrictedFileExtensions");
            }
            this.restrictedFileExtensions = restrictedFileExtensions;
            return this;
        }
        public Builder restrictedFileExtensions(String... restrictedFileExtensions) {
            return restrictedFileExtensions(List.of(restrictedFileExtensions));
        }
        public RepositoryRulesetRulesFileExtensionRestriction build() {
            final var _resultValue = new RepositoryRulesetRulesFileExtensionRestriction();
            _resultValue.restrictedFileExtensions = restrictedFileExtensions;
            return _resultValue;
        }
    }
}
