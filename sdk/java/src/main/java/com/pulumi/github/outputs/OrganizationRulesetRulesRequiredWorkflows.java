// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.github.outputs.OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflow;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OrganizationRulesetRulesRequiredWorkflows {
    /**
     * @return Allow repositories and branches to be created if a check would otherwise prohibit it.
     * 
     */
    private @Nullable Boolean doNotEnforceOnCreate;
    /**
     * @return Actions workflows that are required. Several can be defined.
     * 
     */
    private List<OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflow> requiredWorkflows;

    private OrganizationRulesetRulesRequiredWorkflows() {}
    /**
     * @return Allow repositories and branches to be created if a check would otherwise prohibit it.
     * 
     */
    public Optional<Boolean> doNotEnforceOnCreate() {
        return Optional.ofNullable(this.doNotEnforceOnCreate);
    }
    /**
     * @return Actions workflows that are required. Several can be defined.
     * 
     */
    public List<OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflow> requiredWorkflows() {
        return this.requiredWorkflows;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationRulesetRulesRequiredWorkflows defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean doNotEnforceOnCreate;
        private List<OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflow> requiredWorkflows;
        public Builder() {}
        public Builder(OrganizationRulesetRulesRequiredWorkflows defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.doNotEnforceOnCreate = defaults.doNotEnforceOnCreate;
    	      this.requiredWorkflows = defaults.requiredWorkflows;
        }

        @CustomType.Setter
        public Builder doNotEnforceOnCreate(@Nullable Boolean doNotEnforceOnCreate) {

            this.doNotEnforceOnCreate = doNotEnforceOnCreate;
            return this;
        }
        @CustomType.Setter
        public Builder requiredWorkflows(List<OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflow> requiredWorkflows) {
            if (requiredWorkflows == null) {
              throw new MissingRequiredPropertyException("OrganizationRulesetRulesRequiredWorkflows", "requiredWorkflows");
            }
            this.requiredWorkflows = requiredWorkflows;
            return this;
        }
        public Builder requiredWorkflows(OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflow... requiredWorkflows) {
            return requiredWorkflows(List.of(requiredWorkflows));
        }
        public OrganizationRulesetRulesRequiredWorkflows build() {
            final var _resultValue = new OrganizationRulesetRulesRequiredWorkflows();
            _resultValue.doNotEnforceOnCreate = doNotEnforceOnCreate;
            _resultValue.requiredWorkflows = requiredWorkflows;
            return _resultValue;
        }
    }
}
