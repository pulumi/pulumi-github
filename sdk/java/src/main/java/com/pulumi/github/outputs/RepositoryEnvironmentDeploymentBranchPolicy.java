// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class RepositoryEnvironmentDeploymentBranchPolicy {
    /**
     * @return Whether only branches that match the specified name patterns can deploy to this environment.
     * 
     */
    private Boolean customBranchPolicies;
    /**
     * @return Whether only branches with branch protection rules can deploy to this environment.
     * 
     */
    private Boolean protectedBranches;

    private RepositoryEnvironmentDeploymentBranchPolicy() {}
    /**
     * @return Whether only branches that match the specified name patterns can deploy to this environment.
     * 
     */
    public Boolean customBranchPolicies() {
        return this.customBranchPolicies;
    }
    /**
     * @return Whether only branches with branch protection rules can deploy to this environment.
     * 
     */
    public Boolean protectedBranches() {
        return this.protectedBranches;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryEnvironmentDeploymentBranchPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean customBranchPolicies;
        private Boolean protectedBranches;
        public Builder() {}
        public Builder(RepositoryEnvironmentDeploymentBranchPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customBranchPolicies = defaults.customBranchPolicies;
    	      this.protectedBranches = defaults.protectedBranches;
        }

        @CustomType.Setter
        public Builder customBranchPolicies(Boolean customBranchPolicies) {
            if (customBranchPolicies == null) {
              throw new MissingRequiredPropertyException("RepositoryEnvironmentDeploymentBranchPolicy", "customBranchPolicies");
            }
            this.customBranchPolicies = customBranchPolicies;
            return this;
        }
        @CustomType.Setter
        public Builder protectedBranches(Boolean protectedBranches) {
            if (protectedBranches == null) {
              throw new MissingRequiredPropertyException("RepositoryEnvironmentDeploymentBranchPolicy", "protectedBranches");
            }
            this.protectedBranches = protectedBranches;
            return this;
        }
        public RepositoryEnvironmentDeploymentBranchPolicy build() {
            final var _resultValue = new RepositoryEnvironmentDeploymentBranchPolicy();
            _resultValue.customBranchPolicies = customBranchPolicies;
            _resultValue.protectedBranches = protectedBranches;
            return _resultValue;
        }
    }
}
