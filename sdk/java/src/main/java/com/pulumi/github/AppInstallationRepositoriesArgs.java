// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class AppInstallationRepositoriesArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppInstallationRepositoriesArgs Empty = new AppInstallationRepositoriesArgs();

    /**
     * The GitHub app installation id.
     * 
     */
    @Import(name="installationId", required=true)
    private Output<String> installationId;

    /**
     * @return The GitHub app installation id.
     * 
     */
    public Output<String> installationId() {
        return this.installationId;
    }

    /**
     * A list of repository names to install the app on.
     * 
     * &gt; **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
     * 
     */
    @Import(name="selectedRepositories", required=true)
    private Output<List<String>> selectedRepositories;

    /**
     * @return A list of repository names to install the app on.
     * 
     * &gt; **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
     * 
     */
    public Output<List<String>> selectedRepositories() {
        return this.selectedRepositories;
    }

    private AppInstallationRepositoriesArgs() {}

    private AppInstallationRepositoriesArgs(AppInstallationRepositoriesArgs $) {
        this.installationId = $.installationId;
        this.selectedRepositories = $.selectedRepositories;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppInstallationRepositoriesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppInstallationRepositoriesArgs $;

        public Builder() {
            $ = new AppInstallationRepositoriesArgs();
        }

        public Builder(AppInstallationRepositoriesArgs defaults) {
            $ = new AppInstallationRepositoriesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param installationId The GitHub app installation id.
         * 
         * @return builder
         * 
         */
        public Builder installationId(Output<String> installationId) {
            $.installationId = installationId;
            return this;
        }

        /**
         * @param installationId The GitHub app installation id.
         * 
         * @return builder
         * 
         */
        public Builder installationId(String installationId) {
            return installationId(Output.of(installationId));
        }

        /**
         * @param selectedRepositories A list of repository names to install the app on.
         * 
         * &gt; **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
         * 
         * @return builder
         * 
         */
        public Builder selectedRepositories(Output<List<String>> selectedRepositories) {
            $.selectedRepositories = selectedRepositories;
            return this;
        }

        /**
         * @param selectedRepositories A list of repository names to install the app on.
         * 
         * &gt; **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
         * 
         * @return builder
         * 
         */
        public Builder selectedRepositories(List<String> selectedRepositories) {
            return selectedRepositories(Output.of(selectedRepositories));
        }

        /**
         * @param selectedRepositories A list of repository names to install the app on.
         * 
         * &gt; **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
         * 
         * @return builder
         * 
         */
        public Builder selectedRepositories(String... selectedRepositories) {
            return selectedRepositories(List.of(selectedRepositories));
        }

        public AppInstallationRepositoriesArgs build() {
            if ($.installationId == null) {
                throw new MissingRequiredPropertyException("AppInstallationRepositoriesArgs", "installationId");
            }
            if ($.selectedRepositories == null) {
                throw new MissingRequiredPropertyException("AppInstallationRepositoriesArgs", "selectedRepositories");
            }
            return $;
        }
    }

}
