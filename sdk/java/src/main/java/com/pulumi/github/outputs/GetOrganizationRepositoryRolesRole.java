// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOrganizationRepositoryRolesRole {
    /**
     * @return The system role from which this role inherits permissions.
     * 
     */
    private String baseRole;
    /**
     * @return The description of the organization repository role.
     * 
     */
    private String description;
    /**
     * @return The name of the organization repository role.
     * 
     */
    private String name;
    /**
     * @return The permissions included in this role.
     * 
     */
    private List<String> permissions;
    /**
     * @return The ID of the organization repository role.
     * 
     */
    private Integer roleId;

    private GetOrganizationRepositoryRolesRole() {}
    /**
     * @return The system role from which this role inherits permissions.
     * 
     */
    public String baseRole() {
        return this.baseRole;
    }
    /**
     * @return The description of the organization repository role.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The name of the organization repository role.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The permissions included in this role.
     * 
     */
    public List<String> permissions() {
        return this.permissions;
    }
    /**
     * @return The ID of the organization repository role.
     * 
     */
    public Integer roleId() {
        return this.roleId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationRepositoryRolesRole defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String baseRole;
        private String description;
        private String name;
        private List<String> permissions;
        private Integer roleId;
        public Builder() {}
        public Builder(GetOrganizationRepositoryRolesRole defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseRole = defaults.baseRole;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.permissions = defaults.permissions;
    	      this.roleId = defaults.roleId;
        }

        @CustomType.Setter
        public Builder baseRole(String baseRole) {
            if (baseRole == null) {
              throw new MissingRequiredPropertyException("GetOrganizationRepositoryRolesRole", "baseRole");
            }
            this.baseRole = baseRole;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetOrganizationRepositoryRolesRole", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetOrganizationRepositoryRolesRole", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder permissions(List<String> permissions) {
            if (permissions == null) {
              throw new MissingRequiredPropertyException("GetOrganizationRepositoryRolesRole", "permissions");
            }
            this.permissions = permissions;
            return this;
        }
        public Builder permissions(String... permissions) {
            return permissions(List.of(permissions));
        }
        @CustomType.Setter
        public Builder roleId(Integer roleId) {
            if (roleId == null) {
              throw new MissingRequiredPropertyException("GetOrganizationRepositoryRolesRole", "roleId");
            }
            this.roleId = roleId;
            return this;
        }
        public GetOrganizationRepositoryRolesRole build() {
            final var _resultValue = new GetOrganizationRepositoryRolesRole();
            _resultValue.baseRole = baseRole;
            _resultValue.description = description;
            _resultValue.name = name;
            _resultValue.permissions = permissions;
            _resultValue.roleId = roleId;
            return _resultValue;
        }
    }
}
