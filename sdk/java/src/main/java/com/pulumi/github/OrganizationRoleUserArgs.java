// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class OrganizationRoleUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationRoleUserArgs Empty = new OrganizationRoleUserArgs();

    /**
     * The login for the GitHub user account.
     * 
     */
    @Import(name="login", required=true)
    private Output<String> login;

    /**
     * @return The login for the GitHub user account.
     * 
     */
    public Output<String> login() {
        return this.login;
    }

    /**
     * The ID of the organization role.
     * 
     */
    @Import(name="roleId", required=true)
    private Output<Integer> roleId;

    /**
     * @return The ID of the organization role.
     * 
     */
    public Output<Integer> roleId() {
        return this.roleId;
    }

    private OrganizationRoleUserArgs() {}

    private OrganizationRoleUserArgs(OrganizationRoleUserArgs $) {
        this.login = $.login;
        this.roleId = $.roleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationRoleUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationRoleUserArgs $;

        public Builder() {
            $ = new OrganizationRoleUserArgs();
        }

        public Builder(OrganizationRoleUserArgs defaults) {
            $ = new OrganizationRoleUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param login The login for the GitHub user account.
         * 
         * @return builder
         * 
         */
        public Builder login(Output<String> login) {
            $.login = login;
            return this;
        }

        /**
         * @param login The login for the GitHub user account.
         * 
         * @return builder
         * 
         */
        public Builder login(String login) {
            return login(Output.of(login));
        }

        /**
         * @param roleId The ID of the organization role.
         * 
         * @return builder
         * 
         */
        public Builder roleId(Output<Integer> roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param roleId The ID of the organization role.
         * 
         * @return builder
         * 
         */
        public Builder roleId(Integer roleId) {
            return roleId(Output.of(roleId));
        }

        public OrganizationRoleUserArgs build() {
            if ($.login == null) {
                throw new MissingRequiredPropertyException("OrganizationRoleUserArgs", "login");
            }
            if ($.roleId == null) {
                throw new MissingRequiredPropertyException("OrganizationRoleUserArgs", "roleId");
            }
            return $;
        }
    }

}
