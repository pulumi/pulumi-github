// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class TeamSyncGroupMappingGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final TeamSyncGroupMappingGroupArgs Empty = new TeamSyncGroupMappingGroupArgs();

    @Import(name="groupDescription", required=true)
    private Output<String> groupDescription;

    public Output<String> groupDescription() {
        return this.groupDescription;
    }

    @Import(name="groupId", required=true)
    private Output<String> groupId;

    public Output<String> groupId() {
        return this.groupId;
    }

    @Import(name="groupName", required=true)
    private Output<String> groupName;

    public Output<String> groupName() {
        return this.groupName;
    }

    private TeamSyncGroupMappingGroupArgs() {}

    private TeamSyncGroupMappingGroupArgs(TeamSyncGroupMappingGroupArgs $) {
        this.groupDescription = $.groupDescription;
        this.groupId = $.groupId;
        this.groupName = $.groupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamSyncGroupMappingGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamSyncGroupMappingGroupArgs $;

        public Builder() {
            $ = new TeamSyncGroupMappingGroupArgs();
        }

        public Builder(TeamSyncGroupMappingGroupArgs defaults) {
            $ = new TeamSyncGroupMappingGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder groupDescription(Output<String> groupDescription) {
            $.groupDescription = groupDescription;
            return this;
        }

        public Builder groupDescription(String groupDescription) {
            return groupDescription(Output.of(groupDescription));
        }

        public Builder groupId(Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        public Builder groupName(Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        public TeamSyncGroupMappingGroupArgs build() {
            $.groupDescription = Objects.requireNonNull($.groupDescription, "expected parameter 'groupDescription' to be non-null");
            $.groupId = Objects.requireNonNull($.groupId, "expected parameter 'groupId' to be non-null");
            $.groupName = Objects.requireNonNull($.groupName, "expected parameter 'groupName' to be non-null");
            return $;
        }
    }

}
