// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class AppInstallationRepositoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppInstallationRepositoryArgs Empty = new AppInstallationRepositoryArgs();

    @Import(name="installationId", required=true)
    private Output<String> installationId;

    public Output<String> installationId() {
        return this.installationId;
    }

    @Import(name="repository", required=true)
    private Output<String> repository;

    public Output<String> repository() {
        return this.repository;
    }

    private AppInstallationRepositoryArgs() {}

    private AppInstallationRepositoryArgs(AppInstallationRepositoryArgs $) {
        this.installationId = $.installationId;
        this.repository = $.repository;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppInstallationRepositoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppInstallationRepositoryArgs $;

        public Builder() {
            $ = new AppInstallationRepositoryArgs();
        }

        public Builder(AppInstallationRepositoryArgs defaults) {
            $ = new AppInstallationRepositoryArgs(Objects.requireNonNull(defaults));
        }

        public Builder installationId(Output<String> installationId) {
            $.installationId = installationId;
            return this;
        }

        public Builder installationId(String installationId) {
            return installationId(Output.of(installationId));
        }

        public Builder repository(Output<String> repository) {
            $.repository = repository;
            return this;
        }

        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        public AppInstallationRepositoryArgs build() {
            $.installationId = Objects.requireNonNull($.installationId, "expected parameter 'installationId' to be non-null");
            $.repository = Objects.requireNonNull($.repository, "expected parameter 'repository' to be non-null");
            return $;
        }
    }

}
