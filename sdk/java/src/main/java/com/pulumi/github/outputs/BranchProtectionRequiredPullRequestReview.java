// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BranchProtectionRequiredPullRequestReview {
    private @Nullable Boolean dismissStaleReviews;
    private @Nullable List<String> dismissalRestrictions;
    private @Nullable List<String> pullRequestBypassers;
    private @Nullable Boolean requireCodeOwnerReviews;
    private @Nullable Integer requiredApprovingReviewCount;
    private @Nullable Boolean restrictDismissals;

    private BranchProtectionRequiredPullRequestReview() {}
    public Optional<Boolean> dismissStaleReviews() {
        return Optional.ofNullable(this.dismissStaleReviews);
    }
    public List<String> dismissalRestrictions() {
        return this.dismissalRestrictions == null ? List.of() : this.dismissalRestrictions;
    }
    public List<String> pullRequestBypassers() {
        return this.pullRequestBypassers == null ? List.of() : this.pullRequestBypassers;
    }
    public Optional<Boolean> requireCodeOwnerReviews() {
        return Optional.ofNullable(this.requireCodeOwnerReviews);
    }
    public Optional<Integer> requiredApprovingReviewCount() {
        return Optional.ofNullable(this.requiredApprovingReviewCount);
    }
    public Optional<Boolean> restrictDismissals() {
        return Optional.ofNullable(this.restrictDismissals);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BranchProtectionRequiredPullRequestReview defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean dismissStaleReviews;
        private @Nullable List<String> dismissalRestrictions;
        private @Nullable List<String> pullRequestBypassers;
        private @Nullable Boolean requireCodeOwnerReviews;
        private @Nullable Integer requiredApprovingReviewCount;
        private @Nullable Boolean restrictDismissals;
        public Builder() {}
        public Builder(BranchProtectionRequiredPullRequestReview defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dismissStaleReviews = defaults.dismissStaleReviews;
    	      this.dismissalRestrictions = defaults.dismissalRestrictions;
    	      this.pullRequestBypassers = defaults.pullRequestBypassers;
    	      this.requireCodeOwnerReviews = defaults.requireCodeOwnerReviews;
    	      this.requiredApprovingReviewCount = defaults.requiredApprovingReviewCount;
    	      this.restrictDismissals = defaults.restrictDismissals;
        }

        @CustomType.Setter
        public Builder dismissStaleReviews(@Nullable Boolean dismissStaleReviews) {
            this.dismissStaleReviews = dismissStaleReviews;
            return this;
        }
        @CustomType.Setter
        public Builder dismissalRestrictions(@Nullable List<String> dismissalRestrictions) {
            this.dismissalRestrictions = dismissalRestrictions;
            return this;
        }
        public Builder dismissalRestrictions(String... dismissalRestrictions) {
            return dismissalRestrictions(List.of(dismissalRestrictions));
        }
        @CustomType.Setter
        public Builder pullRequestBypassers(@Nullable List<String> pullRequestBypassers) {
            this.pullRequestBypassers = pullRequestBypassers;
            return this;
        }
        public Builder pullRequestBypassers(String... pullRequestBypassers) {
            return pullRequestBypassers(List.of(pullRequestBypassers));
        }
        @CustomType.Setter
        public Builder requireCodeOwnerReviews(@Nullable Boolean requireCodeOwnerReviews) {
            this.requireCodeOwnerReviews = requireCodeOwnerReviews;
            return this;
        }
        @CustomType.Setter
        public Builder requiredApprovingReviewCount(@Nullable Integer requiredApprovingReviewCount) {
            this.requiredApprovingReviewCount = requiredApprovingReviewCount;
            return this;
        }
        @CustomType.Setter
        public Builder restrictDismissals(@Nullable Boolean restrictDismissals) {
            this.restrictDismissals = restrictDismissals;
            return this;
        }
        public BranchProtectionRequiredPullRequestReview build() {
            final var o = new BranchProtectionRequiredPullRequestReview();
            o.dismissStaleReviews = dismissStaleReviews;
            o.dismissalRestrictions = dismissalRestrictions;
            o.pullRequestBypassers = pullRequestBypassers;
            o.requireCodeOwnerReviews = requireCodeOwnerReviews;
            o.requiredApprovingReviewCount = requiredApprovingReviewCount;
            o.restrictDismissals = restrictDismissals;
            return o;
        }
    }
}
