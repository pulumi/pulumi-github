// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RepositoryRulesetRulesFileExtensionRestrictionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryRulesetRulesFileExtensionRestrictionArgs Empty = new RepositoryRulesetRulesFileExtensionRestrictionArgs();

    /**
     * A list of file extensions.
     * 
     */
    @Import(name="restrictedFileExtensions", required=true)
    private Output<List<String>> restrictedFileExtensions;

    /**
     * @return A list of file extensions.
     * 
     */
    public Output<List<String>> restrictedFileExtensions() {
        return this.restrictedFileExtensions;
    }

    private RepositoryRulesetRulesFileExtensionRestrictionArgs() {}

    private RepositoryRulesetRulesFileExtensionRestrictionArgs(RepositoryRulesetRulesFileExtensionRestrictionArgs $) {
        this.restrictedFileExtensions = $.restrictedFileExtensions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryRulesetRulesFileExtensionRestrictionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryRulesetRulesFileExtensionRestrictionArgs $;

        public Builder() {
            $ = new RepositoryRulesetRulesFileExtensionRestrictionArgs();
        }

        public Builder(RepositoryRulesetRulesFileExtensionRestrictionArgs defaults) {
            $ = new RepositoryRulesetRulesFileExtensionRestrictionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param restrictedFileExtensions A list of file extensions.
         * 
         * @return builder
         * 
         */
        public Builder restrictedFileExtensions(Output<List<String>> restrictedFileExtensions) {
            $.restrictedFileExtensions = restrictedFileExtensions;
            return this;
        }

        /**
         * @param restrictedFileExtensions A list of file extensions.
         * 
         * @return builder
         * 
         */
        public Builder restrictedFileExtensions(List<String> restrictedFileExtensions) {
            return restrictedFileExtensions(Output.of(restrictedFileExtensions));
        }

        /**
         * @param restrictedFileExtensions A list of file extensions.
         * 
         * @return builder
         * 
         */
        public Builder restrictedFileExtensions(String... restrictedFileExtensions) {
            return restrictedFileExtensions(List.of(restrictedFileExtensions));
        }

        public RepositoryRulesetRulesFileExtensionRestrictionArgs build() {
            if ($.restrictedFileExtensions == null) {
                throw new MissingRequiredPropertyException("RepositoryRulesetRulesFileExtensionRestrictionArgs", "restrictedFileExtensions");
            }
            return $;
        }
    }

}
