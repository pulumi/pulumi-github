// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectColumnState extends com.pulumi.resources.ResourceArgs {

    public static final ProjectColumnState Empty = new ProjectColumnState();

    @Import(name="columnId")
    private @Nullable Output<Integer> columnId;

    public Optional<Output<Integer>> columnId() {
        return Optional.ofNullable(this.columnId);
    }

    @Import(name="etag")
    private @Nullable Output<String> etag;

    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private ProjectColumnState() {}

    private ProjectColumnState(ProjectColumnState $) {
        this.columnId = $.columnId;
        this.etag = $.etag;
        this.name = $.name;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectColumnState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectColumnState $;

        public Builder() {
            $ = new ProjectColumnState();
        }

        public Builder(ProjectColumnState defaults) {
            $ = new ProjectColumnState(Objects.requireNonNull(defaults));
        }

        public Builder columnId(@Nullable Output<Integer> columnId) {
            $.columnId = columnId;
            return this;
        }

        public Builder columnId(Integer columnId) {
            return columnId(Output.of(columnId));
        }

        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public ProjectColumnState build() {
            return $;
        }
    }

}
