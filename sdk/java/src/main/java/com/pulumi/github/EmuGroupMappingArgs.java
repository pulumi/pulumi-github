// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class EmuGroupMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmuGroupMappingArgs Empty = new EmuGroupMappingArgs();

    @Import(name="groupId", required=true)
    private Output<Integer> groupId;

    public Output<Integer> groupId() {
        return this.groupId;
    }

    @Import(name="teamSlug", required=true)
    private Output<String> teamSlug;

    public Output<String> teamSlug() {
        return this.teamSlug;
    }

    private EmuGroupMappingArgs() {}

    private EmuGroupMappingArgs(EmuGroupMappingArgs $) {
        this.groupId = $.groupId;
        this.teamSlug = $.teamSlug;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmuGroupMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmuGroupMappingArgs $;

        public Builder() {
            $ = new EmuGroupMappingArgs();
        }

        public Builder(EmuGroupMappingArgs defaults) {
            $ = new EmuGroupMappingArgs(Objects.requireNonNull(defaults));
        }

        public Builder groupId(Output<Integer> groupId) {
            $.groupId = groupId;
            return this;
        }

        public Builder groupId(Integer groupId) {
            return groupId(Output.of(groupId));
        }

        public Builder teamSlug(Output<String> teamSlug) {
            $.teamSlug = teamSlug;
            return this;
        }

        public Builder teamSlug(String teamSlug) {
            return teamSlug(Output.of(teamSlug));
        }

        public EmuGroupMappingArgs build() {
            $.groupId = Objects.requireNonNull($.groupId, "expected parameter 'groupId' to be non-null");
            $.teamSlug = Objects.requireNonNull($.teamSlug, "expected parameter 'teamSlug' to be non-null");
            return $;
        }
    }

}
