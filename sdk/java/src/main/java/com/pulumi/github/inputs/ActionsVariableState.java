// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionsVariableState extends com.pulumi.resources.ResourceArgs {

    public static final ActionsVariableState Empty = new ActionsVariableState();

    /**
     * Date of actions_variable creation.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Date of actions_variable creation.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Name of the repository
     * 
     */
    @Import(name="repository")
    private @Nullable Output<String> repository;

    /**
     * @return Name of the repository
     * 
     */
    public Optional<Output<String>> repository() {
        return Optional.ofNullable(this.repository);
    }

    /**
     * Date of actions_variable update.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Date of actions_variable update.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    /**
     * Value of the variable
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Value of the variable
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    /**
     * Name of the variable
     * 
     */
    @Import(name="variableName")
    private @Nullable Output<String> variableName;

    /**
     * @return Name of the variable
     * 
     */
    public Optional<Output<String>> variableName() {
        return Optional.ofNullable(this.variableName);
    }

    private ActionsVariableState() {}

    private ActionsVariableState(ActionsVariableState $) {
        this.createdAt = $.createdAt;
        this.repository = $.repository;
        this.updatedAt = $.updatedAt;
        this.value = $.value;
        this.variableName = $.variableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionsVariableState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionsVariableState $;

        public Builder() {
            $ = new ActionsVariableState();
        }

        public Builder(ActionsVariableState defaults) {
            $ = new ActionsVariableState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt Date of actions_variable creation.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Date of actions_variable creation.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param repository Name of the repository
         * 
         * @return builder
         * 
         */
        public Builder repository(@Nullable Output<String> repository) {
            $.repository = repository;
            return this;
        }

        /**
         * @param repository Name of the repository
         * 
         * @return builder
         * 
         */
        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        /**
         * @param updatedAt Date of actions_variable update.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Date of actions_variable update.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param value Value of the variable
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value of the variable
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        /**
         * @param variableName Name of the variable
         * 
         * @return builder
         * 
         */
        public Builder variableName(@Nullable Output<String> variableName) {
            $.variableName = variableName;
            return this;
        }

        /**
         * @param variableName Name of the variable
         * 
         * @return builder
         * 
         */
        public Builder variableName(String variableName) {
            return variableName(Output.of(variableName));
        }

        public ActionsVariableState build() {
            return $;
        }
    }

}
