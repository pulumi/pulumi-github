// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.github.inputs.RepositoryRulesetConditionsRefNameArgs;
import java.util.Objects;


public final class RepositoryRulesetConditionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryRulesetConditionsArgs Empty = new RepositoryRulesetConditionsArgs();

    /**
     * (Block List, Min: 1, Max: 1) (see below for nested schema)
     * 
     */
    @Import(name="refName", required=true)
    private Output<RepositoryRulesetConditionsRefNameArgs> refName;

    /**
     * @return (Block List, Min: 1, Max: 1) (see below for nested schema)
     * 
     */
    public Output<RepositoryRulesetConditionsRefNameArgs> refName() {
        return this.refName;
    }

    private RepositoryRulesetConditionsArgs() {}

    private RepositoryRulesetConditionsArgs(RepositoryRulesetConditionsArgs $) {
        this.refName = $.refName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryRulesetConditionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryRulesetConditionsArgs $;

        public Builder() {
            $ = new RepositoryRulesetConditionsArgs();
        }

        public Builder(RepositoryRulesetConditionsArgs defaults) {
            $ = new RepositoryRulesetConditionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param refName (Block List, Min: 1, Max: 1) (see below for nested schema)
         * 
         * @return builder
         * 
         */
        public Builder refName(Output<RepositoryRulesetConditionsRefNameArgs> refName) {
            $.refName = refName;
            return this;
        }

        /**
         * @param refName (Block List, Min: 1, Max: 1) (see below for nested schema)
         * 
         * @return builder
         * 
         */
        public Builder refName(RepositoryRulesetConditionsRefNameArgs refName) {
            return refName(Output.of(refName));
        }

        public RepositoryRulesetConditionsArgs build() {
            $.refName = Objects.requireNonNull($.refName, "expected parameter 'refName' to be non-null");
            return $;
        }
    }

}
