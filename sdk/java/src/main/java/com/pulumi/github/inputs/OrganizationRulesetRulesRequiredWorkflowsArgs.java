// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.github.inputs.OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflowArgs;
import java.util.List;
import java.util.Objects;


public final class OrganizationRulesetRulesRequiredWorkflowsArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationRulesetRulesRequiredWorkflowsArgs Empty = new OrganizationRulesetRulesRequiredWorkflowsArgs();

    /**
     * Actions workflows that are required. Several can be defined.
     * 
     */
    @Import(name="requiredWorkflows", required=true)
    private Output<List<OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflowArgs>> requiredWorkflows;

    /**
     * @return Actions workflows that are required. Several can be defined.
     * 
     */
    public Output<List<OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflowArgs>> requiredWorkflows() {
        return this.requiredWorkflows;
    }

    private OrganizationRulesetRulesRequiredWorkflowsArgs() {}

    private OrganizationRulesetRulesRequiredWorkflowsArgs(OrganizationRulesetRulesRequiredWorkflowsArgs $) {
        this.requiredWorkflows = $.requiredWorkflows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationRulesetRulesRequiredWorkflowsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationRulesetRulesRequiredWorkflowsArgs $;

        public Builder() {
            $ = new OrganizationRulesetRulesRequiredWorkflowsArgs();
        }

        public Builder(OrganizationRulesetRulesRequiredWorkflowsArgs defaults) {
            $ = new OrganizationRulesetRulesRequiredWorkflowsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param requiredWorkflows Actions workflows that are required. Several can be defined.
         * 
         * @return builder
         * 
         */
        public Builder requiredWorkflows(Output<List<OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflowArgs>> requiredWorkflows) {
            $.requiredWorkflows = requiredWorkflows;
            return this;
        }

        /**
         * @param requiredWorkflows Actions workflows that are required. Several can be defined.
         * 
         * @return builder
         * 
         */
        public Builder requiredWorkflows(List<OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflowArgs> requiredWorkflows) {
            return requiredWorkflows(Output.of(requiredWorkflows));
        }

        /**
         * @param requiredWorkflows Actions workflows that are required. Several can be defined.
         * 
         * @return builder
         * 
         */
        public Builder requiredWorkflows(OrganizationRulesetRulesRequiredWorkflowsRequiredWorkflowArgs... requiredWorkflows) {
            return requiredWorkflows(List.of(requiredWorkflows));
        }

        public OrganizationRulesetRulesRequiredWorkflowsArgs build() {
            if ($.requiredWorkflows == null) {
                throw new MissingRequiredPropertyException("OrganizationRulesetRulesRequiredWorkflowsArgs", "requiredWorkflows");
            }
            return $;
        }
    }

}
