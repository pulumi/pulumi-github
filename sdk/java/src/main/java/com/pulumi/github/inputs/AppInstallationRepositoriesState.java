// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppInstallationRepositoriesState extends com.pulumi.resources.ResourceArgs {

    public static final AppInstallationRepositoriesState Empty = new AppInstallationRepositoriesState();

    /**
     * The GitHub app installation id.
     * 
     */
    @Import(name="installationId")
    private @Nullable Output<String> installationId;

    /**
     * @return The GitHub app installation id.
     * 
     */
    public Optional<Output<String>> installationId() {
        return Optional.ofNullable(this.installationId);
    }

    /**
     * A list of repository names to install the app on.
     * 
     * &gt; **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
     * 
     */
    @Import(name="selectedRepositories")
    private @Nullable Output<List<String>> selectedRepositories;

    /**
     * @return A list of repository names to install the app on.
     * 
     * &gt; **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
     * 
     */
    public Optional<Output<List<String>>> selectedRepositories() {
        return Optional.ofNullable(this.selectedRepositories);
    }

    private AppInstallationRepositoriesState() {}

    private AppInstallationRepositoriesState(AppInstallationRepositoriesState $) {
        this.installationId = $.installationId;
        this.selectedRepositories = $.selectedRepositories;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppInstallationRepositoriesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppInstallationRepositoriesState $;

        public Builder() {
            $ = new AppInstallationRepositoriesState();
        }

        public Builder(AppInstallationRepositoriesState defaults) {
            $ = new AppInstallationRepositoriesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param installationId The GitHub app installation id.
         * 
         * @return builder
         * 
         */
        public Builder installationId(@Nullable Output<String> installationId) {
            $.installationId = installationId;
            return this;
        }

        /**
         * @param installationId The GitHub app installation id.
         * 
         * @return builder
         * 
         */
        public Builder installationId(String installationId) {
            return installationId(Output.of(installationId));
        }

        /**
         * @param selectedRepositories A list of repository names to install the app on.
         * 
         * &gt; **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
         * 
         * @return builder
         * 
         */
        public Builder selectedRepositories(@Nullable Output<List<String>> selectedRepositories) {
            $.selectedRepositories = selectedRepositories;
            return this;
        }

        /**
         * @param selectedRepositories A list of repository names to install the app on.
         * 
         * &gt; **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
         * 
         * @return builder
         * 
         */
        public Builder selectedRepositories(List<String> selectedRepositories) {
            return selectedRepositories(Output.of(selectedRepositories));
        }

        /**
         * @param selectedRepositories A list of repository names to install the app on.
         * 
         * &gt; **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
         * 
         * @return builder
         * 
         */
        public Builder selectedRepositories(String... selectedRepositories) {
            return selectedRepositories(List.of(selectedRepositories));
        }

        public AppInstallationRepositoriesState build() {
            return $;
        }
    }

}
