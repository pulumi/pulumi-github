// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class RepositoryRulesetRulesMaxFileSizeArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryRulesetRulesMaxFileSizeArgs Empty = new RepositoryRulesetRulesMaxFileSizeArgs();

    /**
     * The maximum allowed size of a file in bytes.
     * 
     */
    @Import(name="maxFileSize", required=true)
    private Output<Integer> maxFileSize;

    /**
     * @return The maximum allowed size of a file in bytes.
     * 
     */
    public Output<Integer> maxFileSize() {
        return this.maxFileSize;
    }

    private RepositoryRulesetRulesMaxFileSizeArgs() {}

    private RepositoryRulesetRulesMaxFileSizeArgs(RepositoryRulesetRulesMaxFileSizeArgs $) {
        this.maxFileSize = $.maxFileSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryRulesetRulesMaxFileSizeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryRulesetRulesMaxFileSizeArgs $;

        public Builder() {
            $ = new RepositoryRulesetRulesMaxFileSizeArgs();
        }

        public Builder(RepositoryRulesetRulesMaxFileSizeArgs defaults) {
            $ = new RepositoryRulesetRulesMaxFileSizeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxFileSize The maximum allowed size of a file in bytes.
         * 
         * @return builder
         * 
         */
        public Builder maxFileSize(Output<Integer> maxFileSize) {
            $.maxFileSize = maxFileSize;
            return this;
        }

        /**
         * @param maxFileSize The maximum allowed size of a file in bytes.
         * 
         * @return builder
         * 
         */
        public Builder maxFileSize(Integer maxFileSize) {
            return maxFileSize(Output.of(maxFileSize));
        }

        public RepositoryRulesetRulesMaxFileSizeArgs build() {
            if ($.maxFileSize == null) {
                throw new MissingRequiredPropertyException("RepositoryRulesetRulesMaxFileSizeArgs", "maxFileSize");
            }
            return $;
        }
    }

}
