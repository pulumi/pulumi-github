// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.github.outputs.GetRepositoryAutolinkReferencesAutolinkReference;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRepositoryAutolinkReferencesResult {
    /**
     * @return The list of this repository&#39;s autolink references. Each element of `autolink_references` has the following attributes:
     * 
     */
    private List<GetRepositoryAutolinkReferencesAutolinkReference> autolinkReferences;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String repository;

    private GetRepositoryAutolinkReferencesResult() {}
    /**
     * @return The list of this repository&#39;s autolink references. Each element of `autolink_references` has the following attributes:
     * 
     */
    public List<GetRepositoryAutolinkReferencesAutolinkReference> autolinkReferences() {
        return this.autolinkReferences;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String repository() {
        return this.repository;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryAutolinkReferencesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRepositoryAutolinkReferencesAutolinkReference> autolinkReferences;
        private String id;
        private String repository;
        public Builder() {}
        public Builder(GetRepositoryAutolinkReferencesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autolinkReferences = defaults.autolinkReferences;
    	      this.id = defaults.id;
    	      this.repository = defaults.repository;
        }

        @CustomType.Setter
        public Builder autolinkReferences(List<GetRepositoryAutolinkReferencesAutolinkReference> autolinkReferences) {
            this.autolinkReferences = Objects.requireNonNull(autolinkReferences);
            return this;
        }
        public Builder autolinkReferences(GetRepositoryAutolinkReferencesAutolinkReference... autolinkReferences) {
            return autolinkReferences(List.of(autolinkReferences));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder repository(String repository) {
            this.repository = Objects.requireNonNull(repository);
            return this;
        }
        public GetRepositoryAutolinkReferencesResult build() {
            final var o = new GetRepositoryAutolinkReferencesResult();
            o.autolinkReferences = autolinkReferences;
            o.id = id;
            o.repository = repository;
            return o;
        }
    }
}
