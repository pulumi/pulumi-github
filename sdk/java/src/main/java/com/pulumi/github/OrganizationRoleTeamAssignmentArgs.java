// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class OrganizationRoleTeamAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationRoleTeamAssignmentArgs Empty = new OrganizationRoleTeamAssignmentArgs();

    /**
     * The GitHub organization role id
     * 
     */
    @Import(name="roleId", required=true)
    private Output<String> roleId;

    /**
     * @return The GitHub organization role id
     * 
     */
    public Output<String> roleId() {
        return this.roleId;
    }

    /**
     * The GitHub team slug
     * 
     */
    @Import(name="teamSlug", required=true)
    private Output<String> teamSlug;

    /**
     * @return The GitHub team slug
     * 
     */
    public Output<String> teamSlug() {
        return this.teamSlug;
    }

    private OrganizationRoleTeamAssignmentArgs() {}

    private OrganizationRoleTeamAssignmentArgs(OrganizationRoleTeamAssignmentArgs $) {
        this.roleId = $.roleId;
        this.teamSlug = $.teamSlug;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationRoleTeamAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationRoleTeamAssignmentArgs $;

        public Builder() {
            $ = new OrganizationRoleTeamAssignmentArgs();
        }

        public Builder(OrganizationRoleTeamAssignmentArgs defaults) {
            $ = new OrganizationRoleTeamAssignmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param roleId The GitHub organization role id
         * 
         * @return builder
         * 
         */
        public Builder roleId(Output<String> roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param roleId The GitHub organization role id
         * 
         * @return builder
         * 
         */
        public Builder roleId(String roleId) {
            return roleId(Output.of(roleId));
        }

        /**
         * @param teamSlug The GitHub team slug
         * 
         * @return builder
         * 
         */
        public Builder teamSlug(Output<String> teamSlug) {
            $.teamSlug = teamSlug;
            return this;
        }

        /**
         * @param teamSlug The GitHub team slug
         * 
         * @return builder
         * 
         */
        public Builder teamSlug(String teamSlug) {
            return teamSlug(Output.of(teamSlug));
        }

        public OrganizationRoleTeamAssignmentArgs build() {
            if ($.roleId == null) {
                throw new MissingRequiredPropertyException("OrganizationRoleTeamAssignmentArgs", "roleId");
            }
            if ($.teamSlug == null) {
                throw new MissingRequiredPropertyException("OrganizationRoleTeamAssignmentArgs", "teamSlug");
            }
            return $;
        }
    }

}
