// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.github.outputs.GetRepositoryDeploymentBranchPoliciesDeploymentBranchPolicy;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRepositoryDeploymentBranchPoliciesResult {
    /**
     * @return The list of this repository / environment deployment policies. Each element of `deployment_branch_policies` has the following attributes:
     * 
     */
    private List<GetRepositoryDeploymentBranchPoliciesDeploymentBranchPolicy> deploymentBranchPolicies;
    private String environmentName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String repository;

    private GetRepositoryDeploymentBranchPoliciesResult() {}
    /**
     * @return The list of this repository / environment deployment policies. Each element of `deployment_branch_policies` has the following attributes:
     * 
     */
    public List<GetRepositoryDeploymentBranchPoliciesDeploymentBranchPolicy> deploymentBranchPolicies() {
        return this.deploymentBranchPolicies;
    }
    public String environmentName() {
        return this.environmentName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String repository() {
        return this.repository;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryDeploymentBranchPoliciesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRepositoryDeploymentBranchPoliciesDeploymentBranchPolicy> deploymentBranchPolicies;
        private String environmentName;
        private String id;
        private String repository;
        public Builder() {}
        public Builder(GetRepositoryDeploymentBranchPoliciesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentBranchPolicies = defaults.deploymentBranchPolicies;
    	      this.environmentName = defaults.environmentName;
    	      this.id = defaults.id;
    	      this.repository = defaults.repository;
        }

        @CustomType.Setter
        public Builder deploymentBranchPolicies(List<GetRepositoryDeploymentBranchPoliciesDeploymentBranchPolicy> deploymentBranchPolicies) {
            this.deploymentBranchPolicies = Objects.requireNonNull(deploymentBranchPolicies);
            return this;
        }
        public Builder deploymentBranchPolicies(GetRepositoryDeploymentBranchPoliciesDeploymentBranchPolicy... deploymentBranchPolicies) {
            return deploymentBranchPolicies(List.of(deploymentBranchPolicies));
        }
        @CustomType.Setter
        public Builder environmentName(String environmentName) {
            this.environmentName = Objects.requireNonNull(environmentName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder repository(String repository) {
            this.repository = Objects.requireNonNull(repository);
            return this;
        }
        public GetRepositoryDeploymentBranchPoliciesResult build() {
            final var _resultValue = new GetRepositoryDeploymentBranchPoliciesResult();
            _resultValue.deploymentBranchPolicies = deploymentBranchPolicies;
            _resultValue.environmentName = environmentName;
            _resultValue.id = id;
            _resultValue.repository = repository;
            return _resultValue;
        }
    }
}
