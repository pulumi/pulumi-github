// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.github.outputs.RepositoryPagesSource;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RepositoryPages {
    private @Nullable String cname;
    private @Nullable Boolean custom404;
    private @Nullable String htmlUrl;
    private RepositoryPagesSource source;
    private @Nullable String status;
    private @Nullable String url;

    private RepositoryPages() {}
    public Optional<String> cname() {
        return Optional.ofNullable(this.cname);
    }
    public Optional<Boolean> custom404() {
        return Optional.ofNullable(this.custom404);
    }
    public Optional<String> htmlUrl() {
        return Optional.ofNullable(this.htmlUrl);
    }
    public RepositoryPagesSource source() {
        return this.source;
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryPages defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cname;
        private @Nullable Boolean custom404;
        private @Nullable String htmlUrl;
        private RepositoryPagesSource source;
        private @Nullable String status;
        private @Nullable String url;
        public Builder() {}
        public Builder(RepositoryPages defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cname = defaults.cname;
    	      this.custom404 = defaults.custom404;
    	      this.htmlUrl = defaults.htmlUrl;
    	      this.source = defaults.source;
    	      this.status = defaults.status;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder cname(@Nullable String cname) {
            this.cname = cname;
            return this;
        }
        @CustomType.Setter
        public Builder custom404(@Nullable Boolean custom404) {
            this.custom404 = custom404;
            return this;
        }
        @CustomType.Setter
        public Builder htmlUrl(@Nullable String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }
        @CustomType.Setter
        public Builder source(RepositoryPagesSource source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }
        public RepositoryPages build() {
            final var o = new RepositoryPages();
            o.cname = cname;
            o.custom404 = custom404;
            o.htmlUrl = htmlUrl;
            o.source = source;
            o.status = status;
            o.url = url;
            return o;
        }
    }
}
