// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetReleaseAsset {
    /**
     * @return Browser download URL
     * 
     */
    private String browserDownloadUrl;
    /**
     * @return MIME type of the asset
     * 
     */
    private String contentType;
    /**
     * @return Date the asset was created
     * 
     */
    private String createdAt;
    /**
     * @return ID of the asset
     * 
     */
    private Integer id;
    /**
     * @return Label for the asset
     * 
     */
    private String label;
    /**
     * @return The file name of the asset
     * 
     */
    private String name;
    /**
     * @return Node ID of the asset
     * 
     */
    private String nodeId;
    /**
     * @return Size in byte
     * 
     */
    private Integer size;
    /**
     * @return Date the asset was last updated
     * 
     */
    private String updatedAt;
    /**
     * @return URL of the asset
     * 
     */
    private String url;

    private GetReleaseAsset() {}
    /**
     * @return Browser download URL
     * 
     */
    public String browserDownloadUrl() {
        return this.browserDownloadUrl;
    }
    /**
     * @return MIME type of the asset
     * 
     */
    public String contentType() {
        return this.contentType;
    }
    /**
     * @return Date the asset was created
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return ID of the asset
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return Label for the asset
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return The file name of the asset
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Node ID of the asset
     * 
     */
    public String nodeId() {
        return this.nodeId;
    }
    /**
     * @return Size in byte
     * 
     */
    public Integer size() {
        return this.size;
    }
    /**
     * @return Date the asset was last updated
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }
    /**
     * @return URL of the asset
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReleaseAsset defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String browserDownloadUrl;
        private String contentType;
        private String createdAt;
        private Integer id;
        private String label;
        private String name;
        private String nodeId;
        private Integer size;
        private String updatedAt;
        private String url;
        public Builder() {}
        public Builder(GetReleaseAsset defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.browserDownloadUrl = defaults.browserDownloadUrl;
    	      this.contentType = defaults.contentType;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.name = defaults.name;
    	      this.nodeId = defaults.nodeId;
    	      this.size = defaults.size;
    	      this.updatedAt = defaults.updatedAt;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder browserDownloadUrl(String browserDownloadUrl) {
            this.browserDownloadUrl = Objects.requireNonNull(browserDownloadUrl);
            return this;
        }
        @CustomType.Setter
        public Builder contentType(String contentType) {
            this.contentType = Objects.requireNonNull(contentType);
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nodeId(String nodeId) {
            this.nodeId = Objects.requireNonNull(nodeId);
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        public GetReleaseAsset build() {
            final var _resultValue = new GetReleaseAsset();
            _resultValue.browserDownloadUrl = browserDownloadUrl;
            _resultValue.contentType = contentType;
            _resultValue.createdAt = createdAt;
            _resultValue.id = id;
            _resultValue.label = label;
            _resultValue.name = name;
            _resultValue.nodeId = nodeId;
            _resultValue.size = size;
            _resultValue.updatedAt = updatedAt;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
