// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.github.Utilities;
import com.pulumi.github.inputs.GetActionsPublicKeyArgs;
import com.pulumi.github.inputs.GetActionsPublicKeyPlainArgs;
import com.pulumi.github.inputs.GetActionsSecretsArgs;
import com.pulumi.github.inputs.GetActionsSecretsPlainArgs;
import com.pulumi.github.inputs.GetBranchArgs;
import com.pulumi.github.inputs.GetBranchPlainArgs;
import com.pulumi.github.inputs.GetCollaboratorsArgs;
import com.pulumi.github.inputs.GetCollaboratorsPlainArgs;
import com.pulumi.github.inputs.GetDependabotPublicKeyArgs;
import com.pulumi.github.inputs.GetDependabotPublicKeyPlainArgs;
import com.pulumi.github.inputs.GetMembershipArgs;
import com.pulumi.github.inputs.GetMembershipPlainArgs;
import com.pulumi.github.inputs.GetOrganizationArgs;
import com.pulumi.github.inputs.GetOrganizationPlainArgs;
import com.pulumi.github.inputs.GetOrganizationTeamsArgs;
import com.pulumi.github.inputs.GetOrganizationTeamsPlainArgs;
import com.pulumi.github.inputs.GetRefArgs;
import com.pulumi.github.inputs.GetRefPlainArgs;
import com.pulumi.github.inputs.GetReleaseArgs;
import com.pulumi.github.inputs.GetReleasePlainArgs;
import com.pulumi.github.inputs.GetRepositoriesArgs;
import com.pulumi.github.inputs.GetRepositoriesPlainArgs;
import com.pulumi.github.inputs.GetRepositoryArgs;
import com.pulumi.github.inputs.GetRepositoryFileArgs;
import com.pulumi.github.inputs.GetRepositoryFilePlainArgs;
import com.pulumi.github.inputs.GetRepositoryMilestoneArgs;
import com.pulumi.github.inputs.GetRepositoryMilestonePlainArgs;
import com.pulumi.github.inputs.GetRepositoryPlainArgs;
import com.pulumi.github.inputs.GetRepositoryPullRequestArgs;
import com.pulumi.github.inputs.GetRepositoryPullRequestPlainArgs;
import com.pulumi.github.inputs.GetRepositoryPullRequestsArgs;
import com.pulumi.github.inputs.GetRepositoryPullRequestsPlainArgs;
import com.pulumi.github.inputs.GetRepositoryTeamsArgs;
import com.pulumi.github.inputs.GetRepositoryTeamsPlainArgs;
import com.pulumi.github.inputs.GetTeamArgs;
import com.pulumi.github.inputs.GetTeamPlainArgs;
import com.pulumi.github.inputs.GetTreeArgs;
import com.pulumi.github.inputs.GetTreePlainArgs;
import com.pulumi.github.inputs.GetUserArgs;
import com.pulumi.github.inputs.GetUserPlainArgs;
import com.pulumi.github.inputs.GetUsersArgs;
import com.pulumi.github.inputs.GetUsersPlainArgs;
import com.pulumi.github.outputs.GetActionsOrganizationSecretsResult;
import com.pulumi.github.outputs.GetActionsPublicKeyResult;
import com.pulumi.github.outputs.GetActionsSecretsResult;
import com.pulumi.github.outputs.GetBranchResult;
import com.pulumi.github.outputs.GetCollaboratorsResult;
import com.pulumi.github.outputs.GetDependabotPublicKeyResult;
import com.pulumi.github.outputs.GetExternalGroupsResult;
import com.pulumi.github.outputs.GetIpRangesResult;
import com.pulumi.github.outputs.GetMembershipResult;
import com.pulumi.github.outputs.GetOrganizationResult;
import com.pulumi.github.outputs.GetOrganizationTeamSyncGroupsResult;
import com.pulumi.github.outputs.GetOrganizationTeamsResult;
import com.pulumi.github.outputs.GetRefResult;
import com.pulumi.github.outputs.GetReleaseResult;
import com.pulumi.github.outputs.GetRepositoriesResult;
import com.pulumi.github.outputs.GetRepositoryFileResult;
import com.pulumi.github.outputs.GetRepositoryMilestoneResult;
import com.pulumi.github.outputs.GetRepositoryPullRequestResult;
import com.pulumi.github.outputs.GetRepositoryPullRequestsInvokeResult;
import com.pulumi.github.outputs.GetRepositoryResult;
import com.pulumi.github.outputs.GetRepositoryTeamsResult;
import com.pulumi.github.outputs.GetTeamResult;
import com.pulumi.github.outputs.GetTreeResult;
import com.pulumi.github.outputs.GetUserResult;
import com.pulumi.github.outputs.GetUsersResult;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class GithubFunctions {
    public static Output<GetActionsOrganizationSecretsResult> getActionsOrganizationSecrets() {
        return getActionsOrganizationSecrets(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetActionsOrganizationSecretsResult> getActionsOrganizationSecretsPlain() {
        return getActionsOrganizationSecretsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetActionsOrganizationSecretsResult> getActionsOrganizationSecrets(InvokeArgs args) {
        return getActionsOrganizationSecrets(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetActionsOrganizationSecretsResult> getActionsOrganizationSecretsPlain(InvokeArgs args) {
        return getActionsOrganizationSecretsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetActionsOrganizationSecretsResult> getActionsOrganizationSecrets(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getActionsOrganizationSecrets:getActionsOrganizationSecrets", TypeShape.of(GetActionsOrganizationSecretsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetActionsOrganizationSecretsResult> getActionsOrganizationSecretsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getActionsOrganizationSecrets:getActionsOrganizationSecrets", TypeShape.of(GetActionsOrganizationSecretsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetActionsPublicKeyResult> getActionsPublicKey(GetActionsPublicKeyArgs args) {
        return getActionsPublicKey(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetActionsPublicKeyResult> getActionsPublicKeyPlain(GetActionsPublicKeyPlainArgs args) {
        return getActionsPublicKeyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetActionsPublicKeyResult> getActionsPublicKey(GetActionsPublicKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getActionsPublicKey:getActionsPublicKey", TypeShape.of(GetActionsPublicKeyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetActionsPublicKeyResult> getActionsPublicKeyPlain(GetActionsPublicKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getActionsPublicKey:getActionsPublicKey", TypeShape.of(GetActionsPublicKeyResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetActionsSecretsResult> getActionsSecrets() {
        return getActionsSecrets(GetActionsSecretsArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetActionsSecretsResult> getActionsSecretsPlain() {
        return getActionsSecretsPlain(GetActionsSecretsPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetActionsSecretsResult> getActionsSecrets(GetActionsSecretsArgs args) {
        return getActionsSecrets(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetActionsSecretsResult> getActionsSecretsPlain(GetActionsSecretsPlainArgs args) {
        return getActionsSecretsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetActionsSecretsResult> getActionsSecrets(GetActionsSecretsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getActionsSecrets:getActionsSecrets", TypeShape.of(GetActionsSecretsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetActionsSecretsResult> getActionsSecretsPlain(GetActionsSecretsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getActionsSecrets:getActionsSecrets", TypeShape.of(GetActionsSecretsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetBranchResult> getBranch(GetBranchArgs args) {
        return getBranch(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetBranchResult> getBranchPlain(GetBranchPlainArgs args) {
        return getBranchPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetBranchResult> getBranch(GetBranchArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getBranch:getBranch", TypeShape.of(GetBranchResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetBranchResult> getBranchPlain(GetBranchPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getBranch:getBranch", TypeShape.of(GetBranchResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetCollaboratorsResult> getCollaborators(GetCollaboratorsArgs args) {
        return getCollaborators(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetCollaboratorsResult> getCollaboratorsPlain(GetCollaboratorsPlainArgs args) {
        return getCollaboratorsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetCollaboratorsResult> getCollaborators(GetCollaboratorsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getCollaborators:getCollaborators", TypeShape.of(GetCollaboratorsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetCollaboratorsResult> getCollaboratorsPlain(GetCollaboratorsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getCollaborators:getCollaborators", TypeShape.of(GetCollaboratorsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetDependabotPublicKeyResult> getDependabotPublicKey(GetDependabotPublicKeyArgs args) {
        return getDependabotPublicKey(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetDependabotPublicKeyResult> getDependabotPublicKeyPlain(GetDependabotPublicKeyPlainArgs args) {
        return getDependabotPublicKeyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetDependabotPublicKeyResult> getDependabotPublicKey(GetDependabotPublicKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getDependabotPublicKey:getDependabotPublicKey", TypeShape.of(GetDependabotPublicKeyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetDependabotPublicKeyResult> getDependabotPublicKeyPlain(GetDependabotPublicKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getDependabotPublicKey:getDependabotPublicKey", TypeShape.of(GetDependabotPublicKeyResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetExternalGroupsResult> getExternalGroups() {
        return getExternalGroups(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetExternalGroupsResult> getExternalGroupsPlain() {
        return getExternalGroupsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetExternalGroupsResult> getExternalGroups(InvokeArgs args) {
        return getExternalGroups(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetExternalGroupsResult> getExternalGroupsPlain(InvokeArgs args) {
        return getExternalGroupsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetExternalGroupsResult> getExternalGroups(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getExternalGroups:getExternalGroups", TypeShape.of(GetExternalGroupsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetExternalGroupsResult> getExternalGroupsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getExternalGroups:getExternalGroups", TypeShape.of(GetExternalGroupsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetIpRangesResult> getIpRanges() {
        return getIpRanges(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetIpRangesResult> getIpRangesPlain() {
        return getIpRangesPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetIpRangesResult> getIpRanges(InvokeArgs args) {
        return getIpRanges(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetIpRangesResult> getIpRangesPlain(InvokeArgs args) {
        return getIpRangesPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetIpRangesResult> getIpRanges(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getIpRanges:getIpRanges", TypeShape.of(GetIpRangesResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetIpRangesResult> getIpRangesPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getIpRanges:getIpRanges", TypeShape.of(GetIpRangesResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetMembershipResult> getMembership(GetMembershipArgs args) {
        return getMembership(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMembershipResult> getMembershipPlain(GetMembershipPlainArgs args) {
        return getMembershipPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetMembershipResult> getMembership(GetMembershipArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getMembership:getMembership", TypeShape.of(GetMembershipResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetMembershipResult> getMembershipPlain(GetMembershipPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getMembership:getMembership", TypeShape.of(GetMembershipResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args) {
        return getOrganization(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args) {
        return getOrganizationPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetOrganizationTeamSyncGroupsResult> getOrganizationTeamSyncGroups() {
        return getOrganizationTeamSyncGroups(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetOrganizationTeamSyncGroupsResult> getOrganizationTeamSyncGroupsPlain() {
        return getOrganizationTeamSyncGroupsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetOrganizationTeamSyncGroupsResult> getOrganizationTeamSyncGroups(InvokeArgs args) {
        return getOrganizationTeamSyncGroups(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetOrganizationTeamSyncGroupsResult> getOrganizationTeamSyncGroupsPlain(InvokeArgs args) {
        return getOrganizationTeamSyncGroupsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetOrganizationTeamSyncGroupsResult> getOrganizationTeamSyncGroups(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getOrganizationTeamSyncGroups:getOrganizationTeamSyncGroups", TypeShape.of(GetOrganizationTeamSyncGroupsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetOrganizationTeamSyncGroupsResult> getOrganizationTeamSyncGroupsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getOrganizationTeamSyncGroups:getOrganizationTeamSyncGroups", TypeShape.of(GetOrganizationTeamSyncGroupsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetOrganizationTeamsResult> getOrganizationTeams() {
        return getOrganizationTeams(GetOrganizationTeamsArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetOrganizationTeamsResult> getOrganizationTeamsPlain() {
        return getOrganizationTeamsPlain(GetOrganizationTeamsPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetOrganizationTeamsResult> getOrganizationTeams(GetOrganizationTeamsArgs args) {
        return getOrganizationTeams(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetOrganizationTeamsResult> getOrganizationTeamsPlain(GetOrganizationTeamsPlainArgs args) {
        return getOrganizationTeamsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetOrganizationTeamsResult> getOrganizationTeams(GetOrganizationTeamsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getOrganizationTeams:getOrganizationTeams", TypeShape.of(GetOrganizationTeamsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetOrganizationTeamsResult> getOrganizationTeamsPlain(GetOrganizationTeamsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getOrganizationTeams:getOrganizationTeams", TypeShape.of(GetOrganizationTeamsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRefResult> getRef(GetRefArgs args) {
        return getRef(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRefResult> getRefPlain(GetRefPlainArgs args) {
        return getRefPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetRefResult> getRef(GetRefArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getRef:getRef", TypeShape.of(GetRefResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRefResult> getRefPlain(GetRefPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getRef:getRef", TypeShape.of(GetRefResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetReleaseResult> getRelease(GetReleaseArgs args) {
        return getRelease(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetReleaseResult> getReleasePlain(GetReleasePlainArgs args) {
        return getReleasePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetReleaseResult> getRelease(GetReleaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getRelease:getRelease", TypeShape.of(GetReleaseResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetReleaseResult> getReleasePlain(GetReleasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getRelease:getRelease", TypeShape.of(GetReleaseResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRepositoriesResult> getRepositories(GetRepositoriesArgs args) {
        return getRepositories(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRepositoriesResult> getRepositoriesPlain(GetRepositoriesPlainArgs args) {
        return getRepositoriesPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetRepositoriesResult> getRepositories(GetRepositoriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getRepositories:getRepositories", TypeShape.of(GetRepositoriesResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRepositoriesResult> getRepositoriesPlain(GetRepositoriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getRepositories:getRepositories", TypeShape.of(GetRepositoriesResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRepositoryResult> getRepository() {
        return getRepository(GetRepositoryArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRepositoryResult> getRepositoryPlain() {
        return getRepositoryPlain(GetRepositoryPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetRepositoryResult> getRepository(GetRepositoryArgs args) {
        return getRepository(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRepositoryResult> getRepositoryPlain(GetRepositoryPlainArgs args) {
        return getRepositoryPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetRepositoryResult> getRepository(GetRepositoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getRepository:getRepository", TypeShape.of(GetRepositoryResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRepositoryResult> getRepositoryPlain(GetRepositoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getRepository:getRepository", TypeShape.of(GetRepositoryResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRepositoryFileResult> getRepositoryFile(GetRepositoryFileArgs args) {
        return getRepositoryFile(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRepositoryFileResult> getRepositoryFilePlain(GetRepositoryFilePlainArgs args) {
        return getRepositoryFilePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetRepositoryFileResult> getRepositoryFile(GetRepositoryFileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getRepositoryFile:getRepositoryFile", TypeShape.of(GetRepositoryFileResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRepositoryFileResult> getRepositoryFilePlain(GetRepositoryFilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getRepositoryFile:getRepositoryFile", TypeShape.of(GetRepositoryFileResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRepositoryMilestoneResult> getRepositoryMilestone(GetRepositoryMilestoneArgs args) {
        return getRepositoryMilestone(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRepositoryMilestoneResult> getRepositoryMilestonePlain(GetRepositoryMilestonePlainArgs args) {
        return getRepositoryMilestonePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetRepositoryMilestoneResult> getRepositoryMilestone(GetRepositoryMilestoneArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getRepositoryMilestone:getRepositoryMilestone", TypeShape.of(GetRepositoryMilestoneResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRepositoryMilestoneResult> getRepositoryMilestonePlain(GetRepositoryMilestonePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getRepositoryMilestone:getRepositoryMilestone", TypeShape.of(GetRepositoryMilestoneResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRepositoryPullRequestResult> getRepositoryPullRequest(GetRepositoryPullRequestArgs args) {
        return getRepositoryPullRequest(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRepositoryPullRequestResult> getRepositoryPullRequestPlain(GetRepositoryPullRequestPlainArgs args) {
        return getRepositoryPullRequestPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetRepositoryPullRequestResult> getRepositoryPullRequest(GetRepositoryPullRequestArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getRepositoryPullRequest:getRepositoryPullRequest", TypeShape.of(GetRepositoryPullRequestResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRepositoryPullRequestResult> getRepositoryPullRequestPlain(GetRepositoryPullRequestPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getRepositoryPullRequest:getRepositoryPullRequest", TypeShape.of(GetRepositoryPullRequestResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRepositoryPullRequestsInvokeResult> getRepositoryPullRequests(GetRepositoryPullRequestsArgs args) {
        return getRepositoryPullRequests(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRepositoryPullRequestsInvokeResult> getRepositoryPullRequestsPlain(GetRepositoryPullRequestsPlainArgs args) {
        return getRepositoryPullRequestsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetRepositoryPullRequestsInvokeResult> getRepositoryPullRequests(GetRepositoryPullRequestsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getRepositoryPullRequests:getRepositoryPullRequests", TypeShape.of(GetRepositoryPullRequestsInvokeResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRepositoryPullRequestsInvokeResult> getRepositoryPullRequestsPlain(GetRepositoryPullRequestsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getRepositoryPullRequests:getRepositoryPullRequests", TypeShape.of(GetRepositoryPullRequestsInvokeResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRepositoryTeamsResult> getRepositoryTeams() {
        return getRepositoryTeams(GetRepositoryTeamsArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRepositoryTeamsResult> getRepositoryTeamsPlain() {
        return getRepositoryTeamsPlain(GetRepositoryTeamsPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetRepositoryTeamsResult> getRepositoryTeams(GetRepositoryTeamsArgs args) {
        return getRepositoryTeams(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRepositoryTeamsResult> getRepositoryTeamsPlain(GetRepositoryTeamsPlainArgs args) {
        return getRepositoryTeamsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetRepositoryTeamsResult> getRepositoryTeams(GetRepositoryTeamsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getRepositoryTeams:getRepositoryTeams", TypeShape.of(GetRepositoryTeamsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRepositoryTeamsResult> getRepositoryTeamsPlain(GetRepositoryTeamsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getRepositoryTeams:getRepositoryTeams", TypeShape.of(GetRepositoryTeamsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetTeamResult> getTeam(GetTeamArgs args) {
        return getTeam(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetTeamResult> getTeamPlain(GetTeamPlainArgs args) {
        return getTeamPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetTeamResult> getTeam(GetTeamArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getTeam:getTeam", TypeShape.of(GetTeamResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetTeamResult> getTeamPlain(GetTeamPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getTeam:getTeam", TypeShape.of(GetTeamResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetTreeResult> getTree(GetTreeArgs args) {
        return getTree(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetTreeResult> getTreePlain(GetTreePlainArgs args) {
        return getTreePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetTreeResult> getTree(GetTreeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getTree:getTree", TypeShape.of(GetTreeResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetTreeResult> getTreePlain(GetTreePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getTree:getTree", TypeShape.of(GetTreeResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetUserResult> getUser(GetUserArgs args) {
        return getUser(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args) {
        return getUserPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetUsersResult> getUsers(GetUsersArgs args) {
        return getUsers(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args) {
        return getUsersPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetUsersResult> getUsers(GetUsersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("github:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("github:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
}
