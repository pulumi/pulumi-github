// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.github.RepositoryAutolinkReferenceArgs;
import com.pulumi.github.Utilities;
import com.pulumi.github.inputs.RepositoryAutolinkReferenceState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to create and manage an autolink reference for a single repository.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.github.Repository;
 * import com.pulumi.github.RepositoryArgs;
 * import com.pulumi.github.RepositoryAutolinkReference;
 * import com.pulumi.github.RepositoryAutolinkReferenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var repo = new Repository("repo", RepositoryArgs.builder()        
 *             .name("my-repo")
 *             .description("GitHub repo managed by Terraform")
 *             .private_(false)
 *             .build());
 * 
 *         var autolink = new RepositoryAutolinkReference("autolink", RepositoryAutolinkReferenceArgs.builder()        
 *             .repository(repo.name())
 *             .keyPrefix("TICKET-")
 *             .targetUrlTemplate("https://example.com/TICKET?query=<num>")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ### Import by key prefix
 * 
 * ```sh
 * $ pulumi import github:index/repositoryAutolinkReference:RepositoryAutolinkReference auto oof/OOF-
 * ```
 * 
 */
@ResourceType(type="github:index/repositoryAutolinkReference:RepositoryAutolinkReference")
public class RepositoryAutolinkReference extends com.pulumi.resources.CustomResource {
    /**
     * An etag representing the autolink reference object.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return An etag representing the autolink reference object.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters. Default is true.
     * 
     */
    @Export(name="isAlphanumeric", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isAlphanumeric;

    /**
     * @return Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters. Default is true.
     * 
     */
    public Output<Optional<Boolean>> isAlphanumeric() {
        return Codegen.optional(this.isAlphanumeric);
    }
    /**
     * This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit.
     * 
     */
    @Export(name="keyPrefix", refs={String.class}, tree="[0]")
    private Output<String> keyPrefix;

    /**
     * @return This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit.
     * 
     */
    public Output<String> keyPrefix() {
        return this.keyPrefix;
    }
    /**
     * The repository of the autolink reference.
     * 
     */
    @Export(name="repository", refs={String.class}, tree="[0]")
    private Output<String> repository;

    /**
     * @return The repository of the autolink reference.
     * 
     */
    public Output<String> repository() {
        return this.repository;
    }
    /**
     * The template of the target URL used for the links; must be a valid URL and contain `&lt;num&gt;` for the reference number
     * 
     */
    @Export(name="targetUrlTemplate", refs={String.class}, tree="[0]")
    private Output<String> targetUrlTemplate;

    /**
     * @return The template of the target URL used for the links; must be a valid URL and contain `&lt;num&gt;` for the reference number
     * 
     */
    public Output<String> targetUrlTemplate() {
        return this.targetUrlTemplate;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RepositoryAutolinkReference(String name) {
        this(name, RepositoryAutolinkReferenceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RepositoryAutolinkReference(String name, RepositoryAutolinkReferenceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RepositoryAutolinkReference(String name, RepositoryAutolinkReferenceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("github:index/repositoryAutolinkReference:RepositoryAutolinkReference", name, args == null ? RepositoryAutolinkReferenceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RepositoryAutolinkReference(String name, Output<String> id, @Nullable RepositoryAutolinkReferenceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("github:index/repositoryAutolinkReference:RepositoryAutolinkReference", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RepositoryAutolinkReference get(String name, Output<String> id, @Nullable RepositoryAutolinkReferenceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RepositoryAutolinkReference(name, id, state, options);
    }
}
