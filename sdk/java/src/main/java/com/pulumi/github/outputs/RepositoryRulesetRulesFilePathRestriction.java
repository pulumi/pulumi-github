// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RepositoryRulesetRulesFilePathRestriction {
    /**
     * @return The file paths that are restricted from being pushed to the commit graph.
     * 
     */
    private List<String> restrictedFilePaths;

    private RepositoryRulesetRulesFilePathRestriction() {}
    /**
     * @return The file paths that are restricted from being pushed to the commit graph.
     * 
     */
    public List<String> restrictedFilePaths() {
        return this.restrictedFilePaths;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryRulesetRulesFilePathRestriction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> restrictedFilePaths;
        public Builder() {}
        public Builder(RepositoryRulesetRulesFilePathRestriction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.restrictedFilePaths = defaults.restrictedFilePaths;
        }

        @CustomType.Setter
        public Builder restrictedFilePaths(List<String> restrictedFilePaths) {
            if (restrictedFilePaths == null) {
              throw new MissingRequiredPropertyException("RepositoryRulesetRulesFilePathRestriction", "restrictedFilePaths");
            }
            this.restrictedFilePaths = restrictedFilePaths;
            return this;
        }
        public Builder restrictedFilePaths(String... restrictedFilePaths) {
            return restrictedFilePaths(List.of(restrictedFilePaths));
        }
        public RepositoryRulesetRulesFilePathRestriction build() {
            final var _resultValue = new RepositoryRulesetRulesFilePathRestriction();
            _resultValue.restrictedFilePaths = restrictedFilePaths;
            return _resultValue;
        }
    }
}
