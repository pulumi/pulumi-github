// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;


public final class EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs Empty = new EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs();

    /**
     * List of organization IDs to enable for GitHub Actions.
     * 
     */
    @Import(name="organizationIds", required=true)
    private Output<List<Integer>> organizationIds;

    /**
     * @return List of organization IDs to enable for GitHub Actions.
     * 
     */
    public Output<List<Integer>> organizationIds() {
        return this.organizationIds;
    }

    private EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs() {}

    private EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs(EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs $) {
        this.organizationIds = $.organizationIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs $;

        public Builder() {
            $ = new EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs();
        }

        public Builder(EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs defaults) {
            $ = new EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param organizationIds List of organization IDs to enable for GitHub Actions.
         * 
         * @return builder
         * 
         */
        public Builder organizationIds(Output<List<Integer>> organizationIds) {
            $.organizationIds = organizationIds;
            return this;
        }

        /**
         * @param organizationIds List of organization IDs to enable for GitHub Actions.
         * 
         * @return builder
         * 
         */
        public Builder organizationIds(List<Integer> organizationIds) {
            return organizationIds(Output.of(organizationIds));
        }

        /**
         * @param organizationIds List of organization IDs to enable for GitHub Actions.
         * 
         * @return builder
         * 
         */
        public Builder organizationIds(Integer... organizationIds) {
            return organizationIds(List.of(organizationIds));
        }

        public EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs build() {
            if ($.organizationIds == null) {
                throw new MissingRequiredPropertyException("EnterpriseActionsPermissionsEnabledOrganizationsConfigArgs", "organizationIds");
            }
            return $;
        }
    }

}
