// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BranchProtectionV3RequiredPullRequestReviews {
    private @Nullable Boolean dismissStaleReviews;
    private @Nullable List<String> dismissalTeams;
    private @Nullable List<String> dismissalUsers;
    /**
     * @deprecated
     * Use enforce_admins instead
     * 
     */
    @Deprecated /* Use enforce_admins instead */
    private @Nullable Boolean includeAdmins;
    private @Nullable Boolean requireCodeOwnerReviews;
    private @Nullable Integer requiredApprovingReviewCount;

    private BranchProtectionV3RequiredPullRequestReviews() {}
    public Optional<Boolean> dismissStaleReviews() {
        return Optional.ofNullable(this.dismissStaleReviews);
    }
    public List<String> dismissalTeams() {
        return this.dismissalTeams == null ? List.of() : this.dismissalTeams;
    }
    public List<String> dismissalUsers() {
        return this.dismissalUsers == null ? List.of() : this.dismissalUsers;
    }
    /**
     * @deprecated
     * Use enforce_admins instead
     * 
     */
    @Deprecated /* Use enforce_admins instead */
    public Optional<Boolean> includeAdmins() {
        return Optional.ofNullable(this.includeAdmins);
    }
    public Optional<Boolean> requireCodeOwnerReviews() {
        return Optional.ofNullable(this.requireCodeOwnerReviews);
    }
    public Optional<Integer> requiredApprovingReviewCount() {
        return Optional.ofNullable(this.requiredApprovingReviewCount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BranchProtectionV3RequiredPullRequestReviews defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean dismissStaleReviews;
        private @Nullable List<String> dismissalTeams;
        private @Nullable List<String> dismissalUsers;
        private @Nullable Boolean includeAdmins;
        private @Nullable Boolean requireCodeOwnerReviews;
        private @Nullable Integer requiredApprovingReviewCount;
        public Builder() {}
        public Builder(BranchProtectionV3RequiredPullRequestReviews defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dismissStaleReviews = defaults.dismissStaleReviews;
    	      this.dismissalTeams = defaults.dismissalTeams;
    	      this.dismissalUsers = defaults.dismissalUsers;
    	      this.includeAdmins = defaults.includeAdmins;
    	      this.requireCodeOwnerReviews = defaults.requireCodeOwnerReviews;
    	      this.requiredApprovingReviewCount = defaults.requiredApprovingReviewCount;
        }

        @CustomType.Setter
        public Builder dismissStaleReviews(@Nullable Boolean dismissStaleReviews) {
            this.dismissStaleReviews = dismissStaleReviews;
            return this;
        }
        @CustomType.Setter
        public Builder dismissalTeams(@Nullable List<String> dismissalTeams) {
            this.dismissalTeams = dismissalTeams;
            return this;
        }
        public Builder dismissalTeams(String... dismissalTeams) {
            return dismissalTeams(List.of(dismissalTeams));
        }
        @CustomType.Setter
        public Builder dismissalUsers(@Nullable List<String> dismissalUsers) {
            this.dismissalUsers = dismissalUsers;
            return this;
        }
        public Builder dismissalUsers(String... dismissalUsers) {
            return dismissalUsers(List.of(dismissalUsers));
        }
        @CustomType.Setter
        public Builder includeAdmins(@Nullable Boolean includeAdmins) {
            this.includeAdmins = includeAdmins;
            return this;
        }
        @CustomType.Setter
        public Builder requireCodeOwnerReviews(@Nullable Boolean requireCodeOwnerReviews) {
            this.requireCodeOwnerReviews = requireCodeOwnerReviews;
            return this;
        }
        @CustomType.Setter
        public Builder requiredApprovingReviewCount(@Nullable Integer requiredApprovingReviewCount) {
            this.requiredApprovingReviewCount = requiredApprovingReviewCount;
            return this;
        }
        public BranchProtectionV3RequiredPullRequestReviews build() {
            final var o = new BranchProtectionV3RequiredPullRequestReviews();
            o.dismissStaleReviews = dismissStaleReviews;
            o.dismissalTeams = dismissalTeams;
            o.dismissalUsers = dismissalUsers;
            o.includeAdmins = includeAdmins;
            o.requireCodeOwnerReviews = requireCodeOwnerReviews;
            o.requiredApprovingReviewCount = requiredApprovingReviewCount;
            return o;
        }
    }
}
