// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetRepositoryMilestoneArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRepositoryMilestoneArgs Empty = new GetRepositoryMilestoneArgs();

    @Import(name="number", required=true)
    private Output<Integer> number;

    public Output<Integer> number() {
        return this.number;
    }

    @Import(name="owner", required=true)
    private Output<String> owner;

    public Output<String> owner() {
        return this.owner;
    }

    @Import(name="repository", required=true)
    private Output<String> repository;

    public Output<String> repository() {
        return this.repository;
    }

    private GetRepositoryMilestoneArgs() {}

    private GetRepositoryMilestoneArgs(GetRepositoryMilestoneArgs $) {
        this.number = $.number;
        this.owner = $.owner;
        this.repository = $.repository;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRepositoryMilestoneArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRepositoryMilestoneArgs $;

        public Builder() {
            $ = new GetRepositoryMilestoneArgs();
        }

        public Builder(GetRepositoryMilestoneArgs defaults) {
            $ = new GetRepositoryMilestoneArgs(Objects.requireNonNull(defaults));
        }

        public Builder number(Output<Integer> number) {
            $.number = number;
            return this;
        }

        public Builder number(Integer number) {
            return number(Output.of(number));
        }

        public Builder owner(Output<String> owner) {
            $.owner = owner;
            return this;
        }

        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        public Builder repository(Output<String> repository) {
            $.repository = repository;
            return this;
        }

        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        public GetRepositoryMilestoneArgs build() {
            $.number = Objects.requireNonNull($.number, "expected parameter 'number' to be non-null");
            $.owner = Objects.requireNonNull($.owner, "expected parameter 'owner' to be non-null");
            $.repository = Objects.requireNonNull($.repository, "expected parameter 'repository' to be non-null");
            return $;
        }
    }

}
