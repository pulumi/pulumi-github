// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectCardArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectCardArgs Empty = new ProjectCardArgs();

    @Import(name="columnId", required=true)
    private Output<String> columnId;

    public Output<String> columnId() {
        return this.columnId;
    }

    @Import(name="contentId")
    private @Nullable Output<Integer> contentId;

    public Optional<Output<Integer>> contentId() {
        return Optional.ofNullable(this.contentId);
    }

    @Import(name="contentType")
    private @Nullable Output<String> contentType;

    public Optional<Output<String>> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    @Import(name="note")
    private @Nullable Output<String> note;

    public Optional<Output<String>> note() {
        return Optional.ofNullable(this.note);
    }

    private ProjectCardArgs() {}

    private ProjectCardArgs(ProjectCardArgs $) {
        this.columnId = $.columnId;
        this.contentId = $.contentId;
        this.contentType = $.contentType;
        this.note = $.note;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectCardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectCardArgs $;

        public Builder() {
            $ = new ProjectCardArgs();
        }

        public Builder(ProjectCardArgs defaults) {
            $ = new ProjectCardArgs(Objects.requireNonNull(defaults));
        }

        public Builder columnId(Output<String> columnId) {
            $.columnId = columnId;
            return this;
        }

        public Builder columnId(String columnId) {
            return columnId(Output.of(columnId));
        }

        public Builder contentId(@Nullable Output<Integer> contentId) {
            $.contentId = contentId;
            return this;
        }

        public Builder contentId(Integer contentId) {
            return contentId(Output.of(contentId));
        }

        public Builder contentType(@Nullable Output<String> contentType) {
            $.contentType = contentType;
            return this;
        }

        public Builder contentType(String contentType) {
            return contentType(Output.of(contentType));
        }

        public Builder note(@Nullable Output<String> note) {
            $.note = note;
            return this;
        }

        public Builder note(String note) {
            return note(Output.of(note));
        }

        public ProjectCardArgs build() {
            $.columnId = Objects.requireNonNull($.columnId, "expected parameter 'columnId' to be non-null");
            return $;
        }
    }

}
