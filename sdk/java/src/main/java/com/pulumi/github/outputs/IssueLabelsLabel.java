// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IssueLabelsLabel {
    /**
     * @return A 6 character hex code, **without the leading #**, identifying the color of the label.
     * 
     */
    private String color;
    /**
     * @return A short description of the label.
     * 
     */
    private @Nullable String description;
    /**
     * @return The name of the label.
     * 
     */
    private String name;
    /**
     * @return The URL to the issue label
     * 
     */
    private @Nullable String url;

    private IssueLabelsLabel() {}
    /**
     * @return A 6 character hex code, **without the leading #**, identifying the color of the label.
     * 
     */
    public String color() {
        return this.color;
    }
    /**
     * @return A short description of the label.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The name of the label.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The URL to the issue label
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IssueLabelsLabel defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String color;
        private @Nullable String description;
        private String name;
        private @Nullable String url;
        public Builder() {}
        public Builder(IssueLabelsLabel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.color = defaults.color;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder color(String color) {
            if (color == null) {
              throw new MissingRequiredPropertyException("IssueLabelsLabel", "color");
            }
            this.color = color;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("IssueLabelsLabel", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {

            this.url = url;
            return this;
        }
        public IssueLabelsLabel build() {
            final var _resultValue = new IssueLabelsLabel();
            _resultValue.color = color;
            _resultValue.description = description;
            _resultValue.name = name;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
