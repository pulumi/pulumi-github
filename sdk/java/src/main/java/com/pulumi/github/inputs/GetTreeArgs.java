// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTreeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTreeArgs Empty = new GetTreeArgs();

    @Import(name="recursive")
    private @Nullable Output<Boolean> recursive;

    public Optional<Output<Boolean>> recursive() {
        return Optional.ofNullable(this.recursive);
    }

    @Import(name="repository", required=true)
    private Output<String> repository;

    public Output<String> repository() {
        return this.repository;
    }

    @Import(name="treeSha", required=true)
    private Output<String> treeSha;

    public Output<String> treeSha() {
        return this.treeSha;
    }

    private GetTreeArgs() {}

    private GetTreeArgs(GetTreeArgs $) {
        this.recursive = $.recursive;
        this.repository = $.repository;
        this.treeSha = $.treeSha;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTreeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTreeArgs $;

        public Builder() {
            $ = new GetTreeArgs();
        }

        public Builder(GetTreeArgs defaults) {
            $ = new GetTreeArgs(Objects.requireNonNull(defaults));
        }

        public Builder recursive(@Nullable Output<Boolean> recursive) {
            $.recursive = recursive;
            return this;
        }

        public Builder recursive(Boolean recursive) {
            return recursive(Output.of(recursive));
        }

        public Builder repository(Output<String> repository) {
            $.repository = repository;
            return this;
        }

        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        public Builder treeSha(Output<String> treeSha) {
            $.treeSha = treeSha;
            return this;
        }

        public Builder treeSha(String treeSha) {
            return treeSha(Output.of(treeSha));
        }

        public GetTreeArgs build() {
            $.repository = Objects.requireNonNull($.repository, "expected parameter 'repository' to be non-null");
            $.treeSha = Objects.requireNonNull($.treeSha, "expected parameter 'treeSha' to be non-null");
            return $;
        }
    }

}
