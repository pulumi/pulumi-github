// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class RepositoryRulesetRulesMaxFileSize {
    /**
     * @return The maximum allowed size of a file in bytes.
     * 
     */
    private Integer maxFileSize;

    private RepositoryRulesetRulesMaxFileSize() {}
    /**
     * @return The maximum allowed size of a file in bytes.
     * 
     */
    public Integer maxFileSize() {
        return this.maxFileSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryRulesetRulesMaxFileSize defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxFileSize;
        public Builder() {}
        public Builder(RepositoryRulesetRulesMaxFileSize defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxFileSize = defaults.maxFileSize;
        }

        @CustomType.Setter
        public Builder maxFileSize(Integer maxFileSize) {
            if (maxFileSize == null) {
              throw new MissingRequiredPropertyException("RepositoryRulesetRulesMaxFileSize", "maxFileSize");
            }
            this.maxFileSize = maxFileSize;
            return this;
        }
        public RepositoryRulesetRulesMaxFileSize build() {
            final var _resultValue = new RepositoryRulesetRulesMaxFileSize();
            _resultValue.maxFileSize = maxFileSize;
            return _resultValue;
        }
    }
}
