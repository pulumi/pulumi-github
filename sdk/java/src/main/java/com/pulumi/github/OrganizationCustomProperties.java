// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.github.OrganizationCustomPropertiesArgs;
import com.pulumi.github.Utilities;
import com.pulumi.github.inputs.OrganizationCustomPropertiesState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to create and manage custom properties for a GitHub organization.
 * 
 * Custom properties enable you to add metadata to repositories within your organization. You can use custom properties to add context about repositories, such as who owns them, when they expire, or compliance requirements.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.github.OrganizationCustomProperties;
 * import com.pulumi.github.OrganizationCustomPropertiesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var environment = new OrganizationCustomProperties("environment", OrganizationCustomPropertiesArgs.builder()
 *             .propertyName("environment")
 *             .valueType("single_select")
 *             .required(true)
 *             .description("The deployment environment for this repository")
 *             .defaultValue("development")
 *             .allowedValues(            
 *                 "development",
 *                 "staging",
 *                 "production")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Text Property
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.github.OrganizationCustomProperties;
 * import com.pulumi.github.OrganizationCustomPropertiesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var owner = new OrganizationCustomProperties("owner", OrganizationCustomPropertiesArgs.builder()
 *             .propertyName("owner")
 *             .valueType("string")
 *             .required(true)
 *             .description("The team or individual responsible for this repository")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Boolean Property
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.github.OrganizationCustomProperties;
 * import com.pulumi.github.OrganizationCustomPropertiesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var archived = new OrganizationCustomProperties("archived", OrganizationCustomPropertiesArgs.builder()
 *             .propertyName("archived")
 *             .valueType("true_false")
 *             .required(false)
 *             .description("Whether this repository is archived")
 *             .defaultValue("false")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Organization custom properties can be imported using the property name:
 * 
 * ```sh
 * $ pulumi import github:index/organizationCustomProperties:OrganizationCustomProperties environment environment
 * ```
 * 
 */
@ResourceType(type="github:index/organizationCustomProperties:OrganizationCustomProperties")
public class OrganizationCustomProperties extends com.pulumi.resources.CustomResource {
    /**
     * List of allowed values for the custom property. Only applicable when `valueType` is `singleSelect` or `multiSelect`.
     * 
     */
    @Export(name="allowedValues", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> allowedValues;

    /**
     * @return List of allowed values for the custom property. Only applicable when `valueType` is `singleSelect` or `multiSelect`.
     * 
     */
    public Output<List<String>> allowedValues() {
        return this.allowedValues;
    }
    /**
     * The default value of the custom property.
     * 
     */
    @Export(name="defaultValue", refs={String.class}, tree="[0]")
    private Output<String> defaultValue;

    /**
     * @return The default value of the custom property.
     * 
     */
    public Output<String> defaultValue() {
        return this.defaultValue;
    }
    /**
     * The description of the custom property.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the custom property.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The name of the custom property.
     * 
     */
    @Export(name="propertyName", refs={String.class}, tree="[0]")
    private Output<String> propertyName;

    /**
     * @return The name of the custom property.
     * 
     */
    public Output<String> propertyName() {
        return this.propertyName;
    }
    /**
     * Whether the custom property is required. Defaults to `false`.
     * 
     */
    @Export(name="required", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> required;

    /**
     * @return Whether the custom property is required. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> required() {
        return Codegen.optional(this.required);
    }
    /**
     * The type of the custom property. Can be one of `string`, `singleSelect`, `multiSelect`, or `trueFalse`. Defaults to `string`.
     * 
     */
    @Export(name="valueType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> valueType;

    /**
     * @return The type of the custom property. Can be one of `string`, `singleSelect`, `multiSelect`, or `trueFalse`. Defaults to `string`.
     * 
     */
    public Output<Optional<String>> valueType() {
        return Codegen.optional(this.valueType);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OrganizationCustomProperties(java.lang.String name) {
        this(name, OrganizationCustomPropertiesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OrganizationCustomProperties(java.lang.String name, OrganizationCustomPropertiesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OrganizationCustomProperties(java.lang.String name, OrganizationCustomPropertiesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("github:index/organizationCustomProperties:OrganizationCustomProperties", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private OrganizationCustomProperties(java.lang.String name, Output<java.lang.String> id, @Nullable OrganizationCustomPropertiesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("github:index/organizationCustomProperties:OrganizationCustomProperties", name, state, makeResourceOptions(options, id), false);
    }

    private static OrganizationCustomPropertiesArgs makeArgs(OrganizationCustomPropertiesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? OrganizationCustomPropertiesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OrganizationCustomProperties get(java.lang.String name, Output<java.lang.String> id, @Nullable OrganizationCustomPropertiesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OrganizationCustomProperties(name, id, state, options);
    }
}
