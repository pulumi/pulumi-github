// *** WARNING: this file was generated by the Lumi IDL Compiler (LUMIDL). ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

/* tslint:disable:ordered-imports variable-name */
import * as lumi from "@lumi/lumi";

export let MilestoneClosed: MilestoneState = "closed";
export let MilestoneOpen: MilestoneState = "open";

export class Milestone extends lumi.NamedResource implements MilestoneArgs {
    public dueOn: string;
    public description?: string;
    public state?: MilestoneState;
    public repo?: string;

    public static get(id: lumi.ID): Milestone {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): Milestone[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: MilestoneArgs) {
        super(name);
        if (args.dueOn === undefined) {
            throw new Error("Missing required argument 'dueOn'");
        }
        this.dueOn = args.dueOn;
        this.description = args.description;
        this.state = args.state;
        this.repo = args.repo;
    }
}

export interface MilestoneArgs {
    dueOn: string;
    description?: string;
    state?: MilestoneState;
    repo?: string;
}

export type MilestoneState =
    "closed" |
    "open";

